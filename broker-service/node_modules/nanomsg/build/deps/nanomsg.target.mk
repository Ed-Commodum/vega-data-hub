# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := nanomsg
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=nanomsg' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D__STDC_FORMAT_MACROS' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DNN_HAVE_SOCKETPAIR' \
	'-DNN_HAVE_SEMAPHORE' \
	'-DNN_USE_PIPE' \
	'-DNN_HAVE_GCC' \
	'-DNN_HAVE_LINUX' \
	'-DNN_HAVE_EVENTFD' \
	'-DNN_USE_EPOLL' \
	'-DNN_HAVE_PIPE' \
	'-DNN_HAVE_PIPE2' \
	'-DNN_HAVE_CLOCK_MONOTONIC' \
	'-DNN_HAVE_POLL' \
	'-DNN_HAVE_GCC_ATOMIC_BUILTINS' \
	'-DNN_HAVE_MSG_CONTROL' \
	'-DNN_USE_EVENTFD' \
	'-DNN_HAVE_UNIX_SOCKETS' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-O3 \
	-Wall \
	-Wextra \
	-Wno-implicit-fallthrough \
	-Wno-unused-variable \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++17

INCS_Debug := \
	-I/home/ed/.cache/node-gyp/18.14.1/include/node \
	-I/home/ed/.cache/node-gyp/18.14.1/src \
	-I/home/ed/.cache/node-gyp/18.14.1/deps/openssl/config \
	-I/home/ed/.cache/node-gyp/18.14.1/deps/openssl/openssl/include \
	-I/home/ed/.cache/node-gyp/18.14.1/deps/uv/include \
	-I/home/ed/.cache/node-gyp/18.14.1/deps/zlib \
	-I/home/ed/.cache/node-gyp/18.14.1/deps/v8/include \
	-I$(srcdir)/deps/nanomsg/src \
	-I$(srcdir)/deps/nanomsg/src/aio \
	-I$(srcdir)/deps/nanomsg/src/core \
	-I$(srcdir)/deps/nanomsg/src/protocols \
	-I$(srcdir)/deps/nanomsg/src/transports \
	-I$(srcdir)/deps/nanomsg/src/utils

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=nanomsg' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D__STDC_FORMAT_MACROS' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DNN_HAVE_SOCKETPAIR' \
	'-DNN_HAVE_SEMAPHORE' \
	'-DNN_USE_PIPE' \
	'-DNN_HAVE_GCC' \
	'-DNN_HAVE_LINUX' \
	'-DNN_HAVE_EVENTFD' \
	'-DNN_USE_EPOLL' \
	'-DNN_HAVE_PIPE' \
	'-DNN_HAVE_PIPE2' \
	'-DNN_HAVE_CLOCK_MONOTONIC' \
	'-DNN_HAVE_POLL' \
	'-DNN_HAVE_GCC_ATOMIC_BUILTINS' \
	'-DNN_HAVE_MSG_CONTROL' \
	'-DNN_USE_EVENTFD' \
	'-DNN_HAVE_UNIX_SOCKETS'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-O3 \
	-Wall \
	-Wextra \
	-Wno-implicit-fallthrough \
	-Wno-unused-variable \
	-O3 \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++17

INCS_Release := \
	-I/home/ed/.cache/node-gyp/18.14.1/include/node \
	-I/home/ed/.cache/node-gyp/18.14.1/src \
	-I/home/ed/.cache/node-gyp/18.14.1/deps/openssl/config \
	-I/home/ed/.cache/node-gyp/18.14.1/deps/openssl/openssl/include \
	-I/home/ed/.cache/node-gyp/18.14.1/deps/uv/include \
	-I/home/ed/.cache/node-gyp/18.14.1/deps/zlib \
	-I/home/ed/.cache/node-gyp/18.14.1/deps/v8/include \
	-I$(srcdir)/deps/nanomsg/src \
	-I$(srcdir)/deps/nanomsg/src/aio \
	-I$(srcdir)/deps/nanomsg/src/core \
	-I$(srcdir)/deps/nanomsg/src/protocols \
	-I$(srcdir)/deps/nanomsg/src/transports \
	-I$(srcdir)/deps/nanomsg/src/utils

OBJS := \
	$(obj).target/$(TARGET)/deps/nanomsg/src/aio/ctx.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/aio/fsm.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/aio/pool.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/aio/timer.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/aio/timerset.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/aio/usock.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/aio/worker.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/core/ep.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/core/global.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/core/pipe.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/core/poll.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/core/sock.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/core/sockbase.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/core/symbol.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/devices/device.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/bus/bus.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/bus/xbus.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/pair/pair.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/pair/xpair.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/pipeline/pull.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/pipeline/push.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/pipeline/xpull.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/pipeline/xpush.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/pubsub/pub.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/pubsub/sub.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/pubsub/trie.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/pubsub/xpub.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/pubsub/xsub.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/reqrep/rep.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/reqrep/req.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/reqrep/task.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/reqrep/xrep.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/reqrep/xreq.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/survey/respondent.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/survey/surveyor.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/survey/xrespondent.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/survey/xsurveyor.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/utils/dist.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/utils/excl.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/utils/fq.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/utils/lb.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/protocols/utils/priolist.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/inproc/binproc.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/inproc/cinproc.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/inproc/inproc.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/inproc/ins.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/inproc/msgqueue.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/inproc/sinproc.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ipc/aipc.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ipc/bipc.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ipc/cipc.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ipc/ipc.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ipc/sipc.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/tcp/atcp.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/tcp/btcp.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/tcp/ctcp.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/tcp/stcp.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/tcp/tcp.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/utils/backoff.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/utils/base64.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/utils/dns.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/utils/iface.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/utils/literal.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/utils/port.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/utils/streamhdr.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ws/aws.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ws/bws.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ws/cws.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ws/sha1.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ws/sws.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ws/ws.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/transports/ws/ws_handshake.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/alloc.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/atomic.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/chunk.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/chunkref.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/clock.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/closefd.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/condvar.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/efd.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/err.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/hash.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/list.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/msg.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/mutex.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/once.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/queue.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/random.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/sem.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/sleep.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/stopwatch.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/strcasestr.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/strncasecmp.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/thread.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/utils/wire.o \
	$(obj).target/$(TARGET)/deps/nanomsg/src/aio/poller.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(obj).target/deps/nanomsg.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/deps/nanomsg.a: LIBS := $(LIBS)
$(obj).target/deps/nanomsg.a: TOOLSET := $(TOOLSET)
$(obj).target/deps/nanomsg.a: $(OBJS)
	$(call create_archive,$@,$^)

# Add target alias
.PHONY: nanomsg
nanomsg: $(obj).target/deps/nanomsg.a

# Add target alias to "all" target.
.PHONY: all
all: nanomsg

# Add target alias
.PHONY: nanomsg
nanomsg: $(builddir)/nanomsg.a

# Copy this to the static library output path.
$(builddir)/nanomsg.a: TOOLSET := $(TOOLSET)
$(builddir)/nanomsg.a: $(obj).target/deps/nanomsg.a FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/nanomsg.a
# Short alias for building this static library.
.PHONY: nanomsg.a
nanomsg.a: $(obj).target/deps/nanomsg.a $(builddir)/nanomsg.a

# Add static library to "all" target.
.PHONY: all
all: $(builddir)/nanomsg.a

