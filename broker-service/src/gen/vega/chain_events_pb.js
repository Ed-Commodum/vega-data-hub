// @generated by protoc-gen-es v1.2.0 with parameter "target=js"
// @generated from file vega/chain_events.proto (package vega, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * A deposit for a Vega built-in asset
 *
 * @generated from message vega.BuiltinAssetDeposit
 */
export const BuiltinAssetDeposit = proto3.makeMessageType(
  "vega.BuiltinAssetDeposit",
  () => [
    { no: 1, name: "vega_asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "party_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * A withdrawal for a Vega built-in asset
 *
 * @generated from message vega.BuiltinAssetWithdrawal
 */
export const BuiltinAssetWithdrawal = proto3.makeMessageType(
  "vega.BuiltinAssetWithdrawal",
  () => [
    { no: 1, name: "vega_asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "party_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * An event related to a Vega built-in asset
 *
 * @generated from message vega.BuiltinAssetEvent
 */
export const BuiltinAssetEvent = proto3.makeMessageType(
  "vega.BuiltinAssetEvent",
  () => [
    { no: 1001, name: "deposit", kind: "message", T: BuiltinAssetDeposit, oneof: "action" },
    { no: 1002, name: "withdrawal", kind: "message", T: BuiltinAssetWithdrawal, oneof: "action" },
  ],
);

/**
 * An asset allow-listing for an ERC20 token
 *
 * @generated from message vega.ERC20AssetList
 */
export const ERC20AssetList = proto3.makeMessageType(
  "vega.ERC20AssetList",
  () => [
    { no: 1, name: "vega_asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "asset_source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * An asset deny-listing for an ERC20 token
 *
 * @generated from message vega.ERC20AssetDelist
 */
export const ERC20AssetDelist = proto3.makeMessageType(
  "vega.ERC20AssetDelist",
  () => [
    { no: 1, name: "vega_asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message vega.ERC20AssetLimitsUpdated
 */
export const ERC20AssetLimitsUpdated = proto3.makeMessageType(
  "vega.ERC20AssetLimitsUpdated",
  () => [
    { no: 1, name: "vega_asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "source_ethereum_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "lifetime_limits", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "withdraw_threshold", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * An asset deposit for an ERC20 token
 *
 * @generated from message vega.ERC20Deposit
 */
export const ERC20Deposit = proto3.makeMessageType(
  "vega.ERC20Deposit",
  () => [
    { no: 1, name: "vega_asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "source_ethereum_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "target_party_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * An asset withdrawal for an ERC20 token
 *
 * @generated from message vega.ERC20Withdrawal
 */
export const ERC20Withdrawal = proto3.makeMessageType(
  "vega.ERC20Withdrawal",
  () => [
    { no: 1, name: "vega_asset_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "target_ethereum_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "reference_nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * An event related to an ERC20 token
 *
 * @generated from message vega.ERC20Event
 */
export const ERC20Event = proto3.makeMessageType(
  "vega.ERC20Event",
  () => [
    { no: 1, name: "index", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "block", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 1001, name: "asset_list", kind: "message", T: ERC20AssetList, oneof: "action" },
    { no: 1002, name: "asset_delist", kind: "message", T: ERC20AssetDelist, oneof: "action" },
    { no: 1003, name: "deposit", kind: "message", T: ERC20Deposit, oneof: "action" },
    { no: 1004, name: "withdrawal", kind: "message", T: ERC20Withdrawal, oneof: "action" },
    { no: 1005, name: "asset_limits_updated", kind: "message", T: ERC20AssetLimitsUpdated, oneof: "action" },
    { no: 1006, name: "bridge_stopped", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "action" },
    { no: 1007, name: "bridge_resumed", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "action" },
  ],
);

/**
 * A new signer added to the ERC20 bridge
 *
 * @generated from message vega.ERC20SignerAdded
 */
export const ERC20SignerAdded = proto3.makeMessageType(
  "vega.ERC20SignerAdded",
  () => [
    { no: 1, name: "new_signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "block_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * A signer removed from the ERC20 bridge
 *
 * @generated from message vega.ERC20SignerRemoved
 */
export const ERC20SignerRemoved = proto3.makeMessageType(
  "vega.ERC20SignerRemoved",
  () => [
    { no: 1, name: "old_signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "block_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * The threshold has been updated on the multisig control
 *
 * @generated from message vega.ERC20ThresholdSet
 */
export const ERC20ThresholdSet = proto3.makeMessageType(
  "vega.ERC20ThresholdSet",
  () => [
    { no: 1, name: "new_threshold", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "block_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * An event related to the ERC20 MultiSig
 *
 * @generated from message vega.ERC20MultiSigEvent
 */
export const ERC20MultiSigEvent = proto3.makeMessageType(
  "vega.ERC20MultiSigEvent",
  () => [
    { no: 1, name: "index", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "block", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 1001, name: "signer_added", kind: "message", T: ERC20SignerAdded, oneof: "action" },
    { no: 1002, name: "signer_removed", kind: "message", T: ERC20SignerRemoved, oneof: "action" },
    { no: 1003, name: "threshold_set", kind: "message", T: ERC20ThresholdSet, oneof: "action" },
  ],
);

/**
 * @generated from message vega.StakingEvent
 */
export const StakingEvent = proto3.makeMessageType(
  "vega.StakingEvent",
  () => [
    { no: 1, name: "index", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "block", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 1001, name: "stake_deposited", kind: "message", T: StakeDeposited, oneof: "action" },
    { no: 1002, name: "stake_removed", kind: "message", T: StakeRemoved, oneof: "action" },
    { no: 1003, name: "total_supply", kind: "message", T: StakeTotalSupply, oneof: "action" },
  ],
);

/**
 * @generated from message vega.StakeDeposited
 */
export const StakeDeposited = proto3.makeMessageType(
  "vega.StakeDeposited",
  () => [
    { no: 1, name: "ethereum_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "vega_public_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "block_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message vega.StakeRemoved
 */
export const StakeRemoved = proto3.makeMessageType(
  "vega.StakeRemoved",
  () => [
    { no: 1, name: "ethereum_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "vega_public_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "block_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message vega.StakeTotalSupply
 */
export const StakeTotalSupply = proto3.makeMessageType(
  "vega.StakeTotalSupply",
  () => [
    { no: 1, name: "token_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "total_supply", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

