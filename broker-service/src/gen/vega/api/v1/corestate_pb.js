// @generated by protoc-gen-es v1.2.0 with parameter "target=js"
// @generated from file vega/api/v1/corestate.proto (package vega.api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Asset } from "../../assets_pb.js";
import { Delegation, MarketData, NetworkLimits, NetworkParameter, Party } from "../../vega_pb.js";
import { StakeLinking, ValidatorUpdate } from "../../events/v1/events_pb.js";
import { Market } from "../../markets_pb.js";
import { Proposal, Vote } from "../../governance_pb.js";

/**
 * @generated from message vega.api.v1.Account
 */
export const Account = proto3.makeMessageType(
  "vega.api.v1.Account",
  () => [
    { no: 1, name: "party", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "market", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "balance", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message vega.api.v1.ListAccountsRequest
 */
export const ListAccountsRequest = proto3.makeMessageType(
  "vega.api.v1.ListAccountsRequest",
  () => [
    { no: 1, name: "party", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "market", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message vega.api.v1.ListAccountsResponse
 */
export const ListAccountsResponse = proto3.makeMessageType(
  "vega.api.v1.ListAccountsResponse",
  () => [
    { no: 1, name: "accounts", kind: "message", T: Account, repeated: true },
  ],
);

/**
 * @generated from message vega.api.v1.ListAssetsRequest
 */
export const ListAssetsRequest = proto3.makeMessageType(
  "vega.api.v1.ListAssetsRequest",
  () => [
    { no: 1, name: "asset", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message vega.api.v1.ListAssetsResponse
 */
export const ListAssetsResponse = proto3.makeMessageType(
  "vega.api.v1.ListAssetsResponse",
  () => [
    { no: 1, name: "assets", kind: "message", T: Asset, repeated: true },
  ],
);

/**
 * @generated from message vega.api.v1.ListNetworkParametersRequest
 */
export const ListNetworkParametersRequest = proto3.makeMessageType(
  "vega.api.v1.ListNetworkParametersRequest",
  () => [
    { no: 1, name: "network_parameter_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message vega.api.v1.ListNetworkParametersResponse
 */
export const ListNetworkParametersResponse = proto3.makeMessageType(
  "vega.api.v1.ListNetworkParametersResponse",
  () => [
    { no: 1, name: "network_parameters", kind: "message", T: NetworkParameter, repeated: true },
  ],
);

/**
 * @generated from message vega.api.v1.ListNetworkLimitsRequest
 */
export const ListNetworkLimitsRequest = proto3.makeMessageType(
  "vega.api.v1.ListNetworkLimitsRequest",
  [],
);

/**
 * @generated from message vega.api.v1.ListNetworkLimitsResponse
 */
export const ListNetworkLimitsResponse = proto3.makeMessageType(
  "vega.api.v1.ListNetworkLimitsResponse",
  () => [
    { no: 1, name: "network_limits", kind: "message", T: NetworkLimits },
  ],
);

/**
 * @generated from message vega.api.v1.ListPartiesRequest
 */
export const ListPartiesRequest = proto3.makeMessageType(
  "vega.api.v1.ListPartiesRequest",
  [],
);

/**
 * @generated from message vega.api.v1.ListPartiesResponse
 */
export const ListPartiesResponse = proto3.makeMessageType(
  "vega.api.v1.ListPartiesResponse",
  () => [
    { no: 1, name: "parties", kind: "message", T: Party, repeated: true },
  ],
);

/**
 * @generated from message vega.api.v1.ListValidatorsRequest
 */
export const ListValidatorsRequest = proto3.makeMessageType(
  "vega.api.v1.ListValidatorsRequest",
  [],
);

/**
 * @generated from message vega.api.v1.ListValidatorsResponse
 */
export const ListValidatorsResponse = proto3.makeMessageType(
  "vega.api.v1.ListValidatorsResponse",
  () => [
    { no: 1, name: "validators", kind: "message", T: ValidatorUpdate, repeated: true },
  ],
);

/**
 * @generated from message vega.api.v1.ListMarketsRequest
 */
export const ListMarketsRequest = proto3.makeMessageType(
  "vega.api.v1.ListMarketsRequest",
  () => [
    { no: 1, name: "market", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message vega.api.v1.ListMarketsResponse
 */
export const ListMarketsResponse = proto3.makeMessageType(
  "vega.api.v1.ListMarketsResponse",
  () => [
    { no: 1, name: "markets", kind: "message", T: Market, repeated: true },
  ],
);

/**
 * @generated from message vega.api.v1.ListProposalsRequest
 */
export const ListProposalsRequest = proto3.makeMessageType(
  "vega.api.v1.ListProposalsRequest",
  () => [
    { no: 1, name: "proposal", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "proposer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message vega.api.v1.ListProposalsResponse
 */
export const ListProposalsResponse = proto3.makeMessageType(
  "vega.api.v1.ListProposalsResponse",
  () => [
    { no: 1, name: "proposals", kind: "message", T: Proposal, repeated: true },
  ],
);

/**
 * @generated from message vega.api.v1.ListMarketsDataRequest
 */
export const ListMarketsDataRequest = proto3.makeMessageType(
  "vega.api.v1.ListMarketsDataRequest",
  () => [
    { no: 1, name: "market", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message vega.api.v1.ListMarketsDataResponse
 */
export const ListMarketsDataResponse = proto3.makeMessageType(
  "vega.api.v1.ListMarketsDataResponse",
  () => [
    { no: 1, name: "markets_data", kind: "message", T: MarketData, repeated: true },
  ],
);

/**
 * @generated from message vega.api.v1.ListVotesRequest
 */
export const ListVotesRequest = proto3.makeMessageType(
  "vega.api.v1.ListVotesRequest",
  () => [
    { no: 1, name: "proposal", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "party", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message vega.api.v1.ListVotesResponse
 */
export const ListVotesResponse = proto3.makeMessageType(
  "vega.api.v1.ListVotesResponse",
  () => [
    { no: 1, name: "votes", kind: "message", T: Vote, repeated: true },
  ],
);

/**
 * @generated from message vega.api.v1.PartyStake
 */
export const PartyStake = proto3.makeMessageType(
  "vega.api.v1.PartyStake",
  () => [
    { no: 1, name: "party", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "current_stake_available", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "stake_linkings", kind: "message", T: StakeLinking, repeated: true },
  ],
);

/**
 * @generated from message vega.api.v1.ListPartiesStakeRequest
 */
export const ListPartiesStakeRequest = proto3.makeMessageType(
  "vega.api.v1.ListPartiesStakeRequest",
  () => [
    { no: 1, name: "party", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message vega.api.v1.ListPartiesStakeResponse
 */
export const ListPartiesStakeResponse = proto3.makeMessageType(
  "vega.api.v1.ListPartiesStakeResponse",
  () => [
    { no: 1, name: "parties_stake", kind: "message", T: PartyStake, repeated: true },
  ],
);

/**
 * @generated from message vega.api.v1.ListDelegationsRequest
 */
export const ListDelegationsRequest = proto3.makeMessageType(
  "vega.api.v1.ListDelegationsRequest",
  () => [
    { no: 1, name: "party", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "node", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "epoch_seq", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message vega.api.v1.ListDelegationsResponse
 */
export const ListDelegationsResponse = proto3.makeMessageType(
  "vega.api.v1.ListDelegationsResponse",
  () => [
    { no: 1, name: "delegations", kind: "message", T: Delegation, repeated: true },
  ],
);

