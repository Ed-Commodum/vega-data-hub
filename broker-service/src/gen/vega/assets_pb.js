// @generated by protoc-gen-es v1.2.0 with parameter "target=js"
// @generated from file vega/assets.proto (package vega, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * The Vega representation of an external asset
 *
 * @generated from message vega.Asset
 */
export const Asset = proto3.makeMessageType(
  "vega.Asset",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: AssetDetails },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(Asset_Status) },
  ],
);

/**
 * @generated from enum vega.Asset.Status
 */
export const Asset_Status = proto3.makeEnum(
  "vega.Asset.Status",
  [
    {no: 0, name: "STATUS_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "STATUS_PROPOSED", localName: "PROPOSED"},
    {no: 2, name: "STATUS_REJECTED", localName: "REJECTED"},
    {no: 3, name: "STATUS_PENDING_LISTING", localName: "PENDING_LISTING"},
    {no: 4, name: "STATUS_ENABLED", localName: "ENABLED"},
  ],
);

/**
 * The Vega representation of an external asset
 *
 * @generated from message vega.AssetDetails
 */
export const AssetDetails = proto3.makeMessageType(
  "vega.AssetDetails",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "symbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "decimals", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "quantum", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 101, name: "builtin_asset", kind: "message", T: BuiltinAsset, oneof: "source" },
    { no: 102, name: "erc20", kind: "message", T: ERC20, oneof: "source" },
  ],
);

/**
 * A Vega internal asset
 *
 * @generated from message vega.BuiltinAsset
 */
export const BuiltinAsset = proto3.makeMessageType(
  "vega.BuiltinAsset",
  () => [
    { no: 1, name: "max_faucet_amount_mint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * An ERC20 token based asset, living on the ethereum network
 *
 * @generated from message vega.ERC20
 */
export const ERC20 = proto3.makeMessageType(
  "vega.ERC20",
  () => [
    { no: 1, name: "contract_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "lifetime_limit", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "withdraw_threshold", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * The changes to apply on an existing asset.
 *
 * @generated from message vega.AssetDetailsUpdate
 */
export const AssetDetailsUpdate = proto3.makeMessageType(
  "vega.AssetDetailsUpdate",
  () => [
    { no: 5, name: "quantum", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 101, name: "erc20", kind: "message", T: ERC20Update, oneof: "source" },
  ],
);

/**
 * @generated from message vega.ERC20Update
 */
export const ERC20Update = proto3.makeMessageType(
  "vega.ERC20Update",
  () => [
    { no: 1, name: "lifetime_limit", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "withdraw_threshold", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

