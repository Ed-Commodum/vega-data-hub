// source: data-node/api/v2/trading_data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var vega_vega_pb = require('../../../vega/vega_pb.js');
goog.object.extend(proto, vega_vega_pb);
var vega_governance_pb = require('../../../vega/governance_pb.js');
goog.object.extend(proto, vega_governance_pb);
var vega_markets_pb = require('../../../vega/markets_pb.js');
goog.object.extend(proto, vega_markets_pb);
var vega_assets_pb = require('../../../vega/assets_pb.js');
goog.object.extend(proto, vega_assets_pb);
var vega_oracle_pb = require('../../../vega/oracle_pb.js');
goog.object.extend(proto, vega_oracle_pb);
var vega_events_v1_events_pb = require('../../../vega/events/v1/events_pb.js');
goog.object.extend(proto, vega_events_v1_events_pb);
var vega_commands_v1_validator_commands_pb = require('../../../vega/commands/v1/validator_commands_pb.js');
goog.object.extend(proto, vega_commands_v1_validator_commands_pb);
var protoc$gen$openapiv2_options_annotations_pb = require('../../../protoc-gen-openapiv2/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$openapiv2_options_annotations_pb);
goog.exportSymbol('proto.datanode.api.v2.AccountBalance', null, global);
goog.exportSymbol('proto.datanode.api.v2.AccountEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.AccountField', null, global);
goog.exportSymbol('proto.datanode.api.v2.AccountFilter', null, global);
goog.exportSymbol('proto.datanode.api.v2.AccountSnapshotPage', null, global);
goog.exportSymbol('proto.datanode.api.v2.AccountUpdates', null, global);
goog.exportSymbol('proto.datanode.api.v2.AccountsConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.AggregatedBalance', null, global);
goog.exportSymbol('proto.datanode.api.v2.AggregatedBalanceConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.AggregatedBalanceEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.AggregatedLedgerEntriesConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.AggregatedLedgerEntriesEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.AggregatedLedgerEntry', null, global);
goog.exportSymbol('proto.datanode.api.v2.AssetEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.AssetsConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.Candle', null, global);
goog.exportSymbol('proto.datanode.api.v2.CandleDataConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.CandleEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.Checkpoint', null, global);
goog.exportSymbol('proto.datanode.api.v2.CheckpointEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.CheckpointsConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.CoreSnapshotConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.CoreSnapshotEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.DateRange', null, global);
goog.exportSymbol('proto.datanode.api.v2.DelegationEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.DelegationsConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.DepositEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.DepositsConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle', null, global);
goog.exportSymbol('proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle', null, global);
goog.exportSymbol('proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.EpochRewardSummaryConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.EpochRewardSummaryEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.EstimateFeeRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.EstimateFeeResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.EstimateMarginRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.EstimateMarginResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.EthereumKeyRotationEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.EthereumKeyRotationsConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.ExportLedgerEntriesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ExportLedgerEntriesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetAssetRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetAssetResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetBalanceHistoryRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetBalanceHistoryResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetDepositRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetDepositResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetERC20ListAssetBundleRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetERC20ListAssetBundleResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetEpochRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetEpochResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetGovernanceDataRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetGovernanceDataResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetLastTradeRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetLastTradeResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetLatestMarketDataRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetLatestMarketDataResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetLatestMarketDepthRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetLatestMarketDepthResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetMarketDataHistoryByIDRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetMarketDataHistoryByIDResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetMarketRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetMarketResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetNetworkDataRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetNetworkDataResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetNetworkLimitsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetNetworkLimitsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetNetworkParameterRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetNetworkParameterResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetNodeRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetNodeResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetOracleSpecRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetOracleSpecResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetOrderRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetOrderResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetPartyRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetPartyResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetProtocolUpgradeStatusRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetProtocolUpgradeStatusResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetRiskFactorsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetRiskFactorsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetStakeRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetStakeResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetVegaTimeRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetVegaTimeResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetWithdrawalRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.GetWithdrawalResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.GovernanceDataConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.GovernanceDataEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.HistorySegment', null, global);
goog.exportSymbol('proto.datanode.api.v2.InfoRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.InfoResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.IntervalToCandleId', null, global);
goog.exportSymbol('proto.datanode.api.v2.KeyRotationConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.KeyRotationEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.LedgerEntryField', null, global);
goog.exportSymbol('proto.datanode.api.v2.LedgerEntryFilter', null, global);
goog.exportSymbol('proto.datanode.api.v2.LiquidityProvisionsConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.LiquidityProvisionsEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListAccountsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListAccountsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListAssetsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListAssetsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListBalanceChangesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListBalanceChangesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListCandleDataRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListCandleDataResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListCandleIntervalsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListCandleIntervalsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListCheckpointsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListCheckpointsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListCoreSnapshotsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListCoreSnapshotsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListDelegationsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListDelegationsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListDepositsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListDepositsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListEpochRewardSummariesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListEpochRewardSummariesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListEthereumKeyRotationsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListEthereumKeyRotationsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListGovernanceDataRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListGovernanceDataRequest.Type', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListGovernanceDataResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListKeyRotationsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListKeyRotationsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListLatestMarketDataRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListLatestMarketDataResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListLedgerEntriesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListLedgerEntriesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListLiquidityProvisionsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListLiquidityProvisionsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListMarginLevelsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListMarginLevelsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListMarketsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListMarketsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListNetworkParametersRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListNetworkParametersResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListNodeSignaturesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListNodeSignaturesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListNodesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListNodesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListOracleDataRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListOracleDataResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListOracleSpecsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListOracleSpecsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListOrderVersionsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListOrderVersionsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListOrdersRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListOrdersResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListPartiesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListPartiesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListPositionsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListPositionsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListRewardSummariesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListRewardSummariesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListRewardsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListRewardsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListTradesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListTradesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListTransfersRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListTransfersResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListVotesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListVotesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListWithdrawalsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ListWithdrawalsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.MarginConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.MarginEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.MarketConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.MarketDataConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.MarketDataEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.MarketEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.MarketsDataSubscribeRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.MarketsDataSubscribeResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.NetworkParameterConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.NetworkParameterEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.NodeEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.NodeSignatureEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.NodeSignaturesConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.NodesConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveAccountsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveAccountsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveAccountsResponse.ResponseCase', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveCandleDataRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveCandleDataResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveDelegationsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveDelegationsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveEventBusRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveEventBusResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveGovernanceRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveGovernanceResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveLedgerMovementsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveLedgerMovementsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveLiquidityProvisionsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveLiquidityProvisionsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveMarginLevelsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveMarginLevelsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveMarketsDataRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveMarketsDataResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveMarketsDepthRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveMarketsDepthResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveOrdersRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveOrdersResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveOrdersResponse.ResponseCase', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObservePositionsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObservePositionsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObservePositionsResponse.ResponseCase', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveRewardsRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveRewardsResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveTradesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveTradesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveVotesRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.ObserveVotesResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.OffsetPagination', null, global);
goog.exportSymbol('proto.datanode.api.v2.OracleDataConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.OracleDataEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.OracleSpecEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.OracleSpecsConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.OrderConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.OrderEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.OrderFilter', null, global);
goog.exportSymbol('proto.datanode.api.v2.OrderSnapshotPage', null, global);
goog.exportSymbol('proto.datanode.api.v2.OrderUpdates', null, global);
goog.exportSymbol('proto.datanode.api.v2.PageInfo', null, global);
goog.exportSymbol('proto.datanode.api.v2.Pagination', null, global);
goog.exportSymbol('proto.datanode.api.v2.PartyConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.PartyEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.PingRequest', null, global);
goog.exportSymbol('proto.datanode.api.v2.PingResponse', null, global);
goog.exportSymbol('proto.datanode.api.v2.PositionConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.PositionEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.PositionSnapshotPage', null, global);
goog.exportSymbol('proto.datanode.api.v2.PositionUpdates', null, global);
goog.exportSymbol('proto.datanode.api.v2.ProtocolUpgradeProposalConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.ProtocolUpgradeProposalEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.RewardEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.RewardsConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.StakeLinkingEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.StakesConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.TradeConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.TradeEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.TransferConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.TransferDirection', null, global);
goog.exportSymbol('proto.datanode.api.v2.TransferEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.VoteConnection', null, global);
goog.exportSymbol('proto.datanode.api.v2.VoteEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.WithdrawalEdge', null, global);
goog.exportSymbol('proto.datanode.api.v2.WithdrawalsConnection', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.OffsetPagination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.OffsetPagination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.OffsetPagination.displayName = 'proto.datanode.api.v2.OffsetPagination';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.Pagination = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.Pagination, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.Pagination.displayName = 'proto.datanode.api.v2.Pagination';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.PageInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.PageInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.PageInfo.displayName = 'proto.datanode.api.v2.PageInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AccountBalance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.AccountBalance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AccountBalance.displayName = 'proto.datanode.api.v2.AccountBalance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListAccountsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListAccountsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListAccountsRequest.displayName = 'proto.datanode.api.v2.ListAccountsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListAccountsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListAccountsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListAccountsResponse.displayName = 'proto.datanode.api.v2.ListAccountsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AccountsConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.AccountsConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.AccountsConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AccountsConnection.displayName = 'proto.datanode.api.v2.AccountsConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AccountEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.AccountEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AccountEdge.displayName = 'proto.datanode.api.v2.AccountEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveAccountsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveAccountsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveAccountsRequest.displayName = 'proto.datanode.api.v2.ObserveAccountsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveAccountsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.datanode.api.v2.ObserveAccountsResponse.oneofGroups_);
};
goog.inherits(proto.datanode.api.v2.ObserveAccountsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveAccountsResponse.displayName = 'proto.datanode.api.v2.ObserveAccountsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AccountSnapshotPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.AccountSnapshotPage.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.AccountSnapshotPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AccountSnapshotPage.displayName = 'proto.datanode.api.v2.AccountSnapshotPage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AccountUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.AccountUpdates.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.AccountUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AccountUpdates.displayName = 'proto.datanode.api.v2.AccountUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.InfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.InfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.InfoRequest.displayName = 'proto.datanode.api.v2.InfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.InfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.InfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.InfoResponse.displayName = 'proto.datanode.api.v2.InfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetOrderRequest.displayName = 'proto.datanode.api.v2.GetOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetOrderResponse.displayName = 'proto.datanode.api.v2.GetOrderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.OrderFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.OrderFilter.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.OrderFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.OrderFilter.displayName = 'proto.datanode.api.v2.OrderFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListOrdersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListOrdersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListOrdersRequest.displayName = 'proto.datanode.api.v2.ListOrdersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListOrdersResponse.displayName = 'proto.datanode.api.v2.ListOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListOrderVersionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListOrderVersionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListOrderVersionsRequest.displayName = 'proto.datanode.api.v2.ListOrderVersionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListOrderVersionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListOrderVersionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListOrderVersionsResponse.displayName = 'proto.datanode.api.v2.ListOrderVersionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveOrdersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveOrdersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveOrdersRequest.displayName = 'proto.datanode.api.v2.ObserveOrdersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.datanode.api.v2.ObserveOrdersResponse.oneofGroups_);
};
goog.inherits(proto.datanode.api.v2.ObserveOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveOrdersResponse.displayName = 'proto.datanode.api.v2.ObserveOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.OrderSnapshotPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.OrderSnapshotPage.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.OrderSnapshotPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.OrderSnapshotPage.displayName = 'proto.datanode.api.v2.OrderSnapshotPage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.OrderUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.OrderUpdates.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.OrderUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.OrderUpdates.displayName = 'proto.datanode.api.v2.OrderUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListPositionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListPositionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListPositionsRequest.displayName = 'proto.datanode.api.v2.ListPositionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListPositionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListPositionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListPositionsResponse.displayName = 'proto.datanode.api.v2.ListPositionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.PositionEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.PositionEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.PositionEdge.displayName = 'proto.datanode.api.v2.PositionEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.PositionConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.PositionConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.PositionConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.PositionConnection.displayName = 'proto.datanode.api.v2.PositionConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObservePositionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObservePositionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObservePositionsRequest.displayName = 'proto.datanode.api.v2.ObservePositionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObservePositionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.datanode.api.v2.ObservePositionsResponse.oneofGroups_);
};
goog.inherits(proto.datanode.api.v2.ObservePositionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObservePositionsResponse.displayName = 'proto.datanode.api.v2.ObservePositionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.PositionSnapshotPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.PositionSnapshotPage.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.PositionSnapshotPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.PositionSnapshotPage.displayName = 'proto.datanode.api.v2.PositionSnapshotPage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.PositionUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.PositionUpdates.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.PositionUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.PositionUpdates.displayName = 'proto.datanode.api.v2.PositionUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.LedgerEntryFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.LedgerEntryFilter.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.LedgerEntryFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.LedgerEntryFilter.displayName = 'proto.datanode.api.v2.LedgerEntryFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AggregatedLedgerEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.AggregatedLedgerEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AggregatedLedgerEntry.displayName = 'proto.datanode.api.v2.AggregatedLedgerEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListLedgerEntriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListLedgerEntriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListLedgerEntriesRequest.displayName = 'proto.datanode.api.v2.ListLedgerEntriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ExportLedgerEntriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ExportLedgerEntriesRequest.displayName = 'proto.datanode.api.v2.ExportLedgerEntriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListLedgerEntriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListLedgerEntriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListLedgerEntriesResponse.displayName = 'proto.datanode.api.v2.ListLedgerEntriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ExportLedgerEntriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ExportLedgerEntriesResponse.displayName = 'proto.datanode.api.v2.ExportLedgerEntriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.AggregatedLedgerEntriesEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AggregatedLedgerEntriesEdge.displayName = 'proto.datanode.api.v2.AggregatedLedgerEntriesEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.AggregatedLedgerEntriesConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.AggregatedLedgerEntriesConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AggregatedLedgerEntriesConnection.displayName = 'proto.datanode.api.v2.AggregatedLedgerEntriesConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListBalanceChangesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListBalanceChangesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListBalanceChangesRequest.displayName = 'proto.datanode.api.v2.ListBalanceChangesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListBalanceChangesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListBalanceChangesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListBalanceChangesResponse.displayName = 'proto.datanode.api.v2.ListBalanceChangesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetBalanceHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.GetBalanceHistoryRequest.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.GetBalanceHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetBalanceHistoryRequest.displayName = 'proto.datanode.api.v2.GetBalanceHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetBalanceHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetBalanceHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetBalanceHistoryResponse.displayName = 'proto.datanode.api.v2.GetBalanceHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AggregatedBalanceEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.AggregatedBalanceEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AggregatedBalanceEdge.displayName = 'proto.datanode.api.v2.AggregatedBalanceEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AggregatedBalanceConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.AggregatedBalanceConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.AggregatedBalanceConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AggregatedBalanceConnection.displayName = 'proto.datanode.api.v2.AggregatedBalanceConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AccountFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.AccountFilter.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.AccountFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AccountFilter.displayName = 'proto.datanode.api.v2.AccountFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AggregatedBalance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.AggregatedBalance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AggregatedBalance.displayName = 'proto.datanode.api.v2.AggregatedBalance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ObserveMarketsDepthRequest.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ObserveMarketsDepthRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveMarketsDepthRequest.displayName = 'proto.datanode.api.v2.ObserveMarketsDepthRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveMarketsDepthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ObserveMarketsDepthResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ObserveMarketsDepthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveMarketsDepthResponse.displayName = 'proto.datanode.api.v2.ObserveMarketsDepthResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.displayName = 'proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.displayName = 'proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveMarketsDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ObserveMarketsDataRequest.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ObserveMarketsDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveMarketsDataRequest.displayName = 'proto.datanode.api.v2.ObserveMarketsDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveMarketsDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ObserveMarketsDataResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ObserveMarketsDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveMarketsDataResponse.displayName = 'proto.datanode.api.v2.ObserveMarketsDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetLatestMarketDepthRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetLatestMarketDepthRequest.displayName = 'proto.datanode.api.v2.GetLatestMarketDepthRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.GetLatestMarketDepthResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.GetLatestMarketDepthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetLatestMarketDepthResponse.displayName = 'proto.datanode.api.v2.GetLatestMarketDepthResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListLatestMarketDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListLatestMarketDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListLatestMarketDataRequest.displayName = 'proto.datanode.api.v2.ListLatestMarketDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListLatestMarketDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ListLatestMarketDataResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ListLatestMarketDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListLatestMarketDataResponse.displayName = 'proto.datanode.api.v2.ListLatestMarketDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetLatestMarketDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetLatestMarketDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetLatestMarketDataRequest.displayName = 'proto.datanode.api.v2.GetLatestMarketDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetLatestMarketDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetLatestMarketDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetLatestMarketDataResponse.displayName = 'proto.datanode.api.v2.GetLatestMarketDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetMarketDataHistoryByIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.displayName = 'proto.datanode.api.v2.GetMarketDataHistoryByIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetMarketDataHistoryByIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.displayName = 'proto.datanode.api.v2.GetMarketDataHistoryByIDResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.MarketDataEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.MarketDataEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.MarketDataEdge.displayName = 'proto.datanode.api.v2.MarketDataEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.MarketDataConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.MarketDataConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.MarketDataConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.MarketDataConnection.displayName = 'proto.datanode.api.v2.MarketDataConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.MarketsDataSubscribeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.MarketsDataSubscribeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.MarketsDataSubscribeRequest.displayName = 'proto.datanode.api.v2.MarketsDataSubscribeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.MarketsDataSubscribeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.MarketsDataSubscribeResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.MarketsDataSubscribeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.MarketsDataSubscribeResponse.displayName = 'proto.datanode.api.v2.MarketsDataSubscribeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListTransfersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListTransfersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListTransfersRequest.displayName = 'proto.datanode.api.v2.ListTransfersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListTransfersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListTransfersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListTransfersResponse.displayName = 'proto.datanode.api.v2.ListTransfersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.TransferEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.TransferEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.TransferEdge.displayName = 'proto.datanode.api.v2.TransferEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.TransferConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.TransferConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.TransferConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.TransferConnection.displayName = 'proto.datanode.api.v2.TransferConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetNetworkLimitsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetNetworkLimitsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetNetworkLimitsRequest.displayName = 'proto.datanode.api.v2.GetNetworkLimitsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetNetworkLimitsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetNetworkLimitsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetNetworkLimitsResponse.displayName = 'proto.datanode.api.v2.GetNetworkLimitsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListCandleIntervalsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListCandleIntervalsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListCandleIntervalsRequest.displayName = 'proto.datanode.api.v2.ListCandleIntervalsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.IntervalToCandleId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.IntervalToCandleId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.IntervalToCandleId.displayName = 'proto.datanode.api.v2.IntervalToCandleId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListCandleIntervalsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ListCandleIntervalsResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ListCandleIntervalsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListCandleIntervalsResponse.displayName = 'proto.datanode.api.v2.ListCandleIntervalsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.Candle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.Candle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.Candle.displayName = 'proto.datanode.api.v2.Candle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveCandleDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveCandleDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveCandleDataRequest.displayName = 'proto.datanode.api.v2.ObserveCandleDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveCandleDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveCandleDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveCandleDataResponse.displayName = 'proto.datanode.api.v2.ObserveCandleDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListCandleDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListCandleDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListCandleDataRequest.displayName = 'proto.datanode.api.v2.ListCandleDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListCandleDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListCandleDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListCandleDataResponse.displayName = 'proto.datanode.api.v2.ListCandleDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.CandleEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.CandleEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.CandleEdge.displayName = 'proto.datanode.api.v2.CandleEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.CandleDataConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.CandleDataConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.CandleDataConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.CandleDataConnection.displayName = 'proto.datanode.api.v2.CandleDataConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListVotesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListVotesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListVotesRequest.displayName = 'proto.datanode.api.v2.ListVotesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListVotesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListVotesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListVotesResponse.displayName = 'proto.datanode.api.v2.ListVotesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.VoteEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.VoteEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.VoteEdge.displayName = 'proto.datanode.api.v2.VoteEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.VoteConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.VoteConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.VoteConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.VoteConnection.displayName = 'proto.datanode.api.v2.VoteConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveVotesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveVotesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveVotesRequest.displayName = 'proto.datanode.api.v2.ObserveVotesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveVotesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveVotesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveVotesResponse.displayName = 'proto.datanode.api.v2.ObserveVotesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.displayName = 'proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.displayName = 'proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.displayName = 'proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.displayName = 'proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.displayName = 'proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.displayName = 'proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.displayName = 'proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.displayName = 'proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.displayName = 'proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.displayName = 'proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.displayName = 'proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.displayName = 'proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetERC20ListAssetBundleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetERC20ListAssetBundleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetERC20ListAssetBundleRequest.displayName = 'proto.datanode.api.v2.GetERC20ListAssetBundleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetERC20ListAssetBundleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetERC20ListAssetBundleResponse.displayName = 'proto.datanode.api.v2.GetERC20ListAssetBundleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.displayName = 'proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.displayName = 'proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.displayName = 'proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.displayName = 'proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetLastTradeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetLastTradeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetLastTradeRequest.displayName = 'proto.datanode.api.v2.GetLastTradeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetLastTradeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetLastTradeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetLastTradeResponse.displayName = 'proto.datanode.api.v2.GetLastTradeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListTradesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListTradesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListTradesRequest.displayName = 'proto.datanode.api.v2.ListTradesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListTradesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListTradesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListTradesResponse.displayName = 'proto.datanode.api.v2.ListTradesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.TradeConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.TradeConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.TradeConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.TradeConnection.displayName = 'proto.datanode.api.v2.TradeConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.TradeEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.TradeEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.TradeEdge.displayName = 'proto.datanode.api.v2.TradeEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveTradesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveTradesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveTradesRequest.displayName = 'proto.datanode.api.v2.ObserveTradesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveTradesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ObserveTradesResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ObserveTradesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveTradesResponse.displayName = 'proto.datanode.api.v2.ObserveTradesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetOracleSpecRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetOracleSpecRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetOracleSpecRequest.displayName = 'proto.datanode.api.v2.GetOracleSpecRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetOracleSpecResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetOracleSpecResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetOracleSpecResponse.displayName = 'proto.datanode.api.v2.GetOracleSpecResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListOracleSpecsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListOracleSpecsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListOracleSpecsRequest.displayName = 'proto.datanode.api.v2.ListOracleSpecsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListOracleSpecsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListOracleSpecsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListOracleSpecsResponse.displayName = 'proto.datanode.api.v2.ListOracleSpecsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListOracleDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListOracleDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListOracleDataRequest.displayName = 'proto.datanode.api.v2.ListOracleDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListOracleDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListOracleDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListOracleDataResponse.displayName = 'proto.datanode.api.v2.ListOracleDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.OracleSpecEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.OracleSpecEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.OracleSpecEdge.displayName = 'proto.datanode.api.v2.OracleSpecEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.OracleSpecsConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.OracleSpecsConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.OracleSpecsConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.OracleSpecsConnection.displayName = 'proto.datanode.api.v2.OracleSpecsConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.OracleDataEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.OracleDataEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.OracleDataEdge.displayName = 'proto.datanode.api.v2.OracleDataEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.OracleDataConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.OracleDataConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.OracleDataConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.OracleDataConnection.displayName = 'proto.datanode.api.v2.OracleDataConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetMarketRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetMarketRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetMarketRequest.displayName = 'proto.datanode.api.v2.GetMarketRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetMarketResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetMarketResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetMarketResponse.displayName = 'proto.datanode.api.v2.GetMarketResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListMarketsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListMarketsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListMarketsRequest.displayName = 'proto.datanode.api.v2.ListMarketsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListMarketsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListMarketsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListMarketsResponse.displayName = 'proto.datanode.api.v2.ListMarketsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.MarketEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.MarketEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.MarketEdge.displayName = 'proto.datanode.api.v2.MarketEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.MarketConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.MarketConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.MarketConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.MarketConnection.displayName = 'proto.datanode.api.v2.MarketConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetPartyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetPartyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetPartyRequest.displayName = 'proto.datanode.api.v2.GetPartyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetPartyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetPartyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetPartyResponse.displayName = 'proto.datanode.api.v2.GetPartyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListPartiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListPartiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListPartiesRequest.displayName = 'proto.datanode.api.v2.ListPartiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListPartiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListPartiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListPartiesResponse.displayName = 'proto.datanode.api.v2.ListPartiesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.PartyEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.PartyEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.PartyEdge.displayName = 'proto.datanode.api.v2.PartyEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.PartyConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.PartyConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.PartyConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.PartyConnection.displayName = 'proto.datanode.api.v2.PartyConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.OrderEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.OrderEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.OrderEdge.displayName = 'proto.datanode.api.v2.OrderEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListMarginLevelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListMarginLevelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListMarginLevelsRequest.displayName = 'proto.datanode.api.v2.ListMarginLevelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListMarginLevelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListMarginLevelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListMarginLevelsResponse.displayName = 'proto.datanode.api.v2.ListMarginLevelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveMarginLevelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveMarginLevelsRequest.displayName = 'proto.datanode.api.v2.ObserveMarginLevelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveMarginLevelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveMarginLevelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveMarginLevelsResponse.displayName = 'proto.datanode.api.v2.ObserveMarginLevelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.OrderConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.OrderConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.OrderConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.OrderConnection.displayName = 'proto.datanode.api.v2.OrderConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.MarginEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.MarginEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.MarginEdge.displayName = 'proto.datanode.api.v2.MarginEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.MarginConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.MarginConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.MarginConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.MarginConnection.displayName = 'proto.datanode.api.v2.MarginConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListRewardsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListRewardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListRewardsRequest.displayName = 'proto.datanode.api.v2.ListRewardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListRewardsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListRewardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListRewardsResponse.displayName = 'proto.datanode.api.v2.ListRewardsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.RewardEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.RewardEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.RewardEdge.displayName = 'proto.datanode.api.v2.RewardEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.RewardsConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.RewardsConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.RewardsConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.RewardsConnection.displayName = 'proto.datanode.api.v2.RewardsConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListRewardSummariesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListRewardSummariesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListRewardSummariesRequest.displayName = 'proto.datanode.api.v2.ListRewardSummariesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListRewardSummariesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ListRewardSummariesResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ListRewardSummariesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListRewardSummariesResponse.displayName = 'proto.datanode.api.v2.ListRewardSummariesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListEpochRewardSummariesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListEpochRewardSummariesRequest.displayName = 'proto.datanode.api.v2.ListEpochRewardSummariesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListEpochRewardSummariesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListEpochRewardSummariesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListEpochRewardSummariesResponse.displayName = 'proto.datanode.api.v2.ListEpochRewardSummariesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.EpochRewardSummaryConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.EpochRewardSummaryConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.EpochRewardSummaryConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.EpochRewardSummaryConnection.displayName = 'proto.datanode.api.v2.EpochRewardSummaryConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.EpochRewardSummaryEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.EpochRewardSummaryEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.EpochRewardSummaryEdge.displayName = 'proto.datanode.api.v2.EpochRewardSummaryEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveRewardsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveRewardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveRewardsRequest.displayName = 'proto.datanode.api.v2.ObserveRewardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveRewardsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveRewardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveRewardsResponse.displayName = 'proto.datanode.api.v2.ObserveRewardsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetDepositRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetDepositRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetDepositRequest.displayName = 'proto.datanode.api.v2.GetDepositRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetDepositResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetDepositResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetDepositResponse.displayName = 'proto.datanode.api.v2.GetDepositResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListDepositsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListDepositsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListDepositsRequest.displayName = 'proto.datanode.api.v2.ListDepositsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListDepositsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListDepositsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListDepositsResponse.displayName = 'proto.datanode.api.v2.ListDepositsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.DepositEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.DepositEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.DepositEdge.displayName = 'proto.datanode.api.v2.DepositEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.DepositsConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.DepositsConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.DepositsConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.DepositsConnection.displayName = 'proto.datanode.api.v2.DepositsConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetWithdrawalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetWithdrawalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetWithdrawalRequest.displayName = 'proto.datanode.api.v2.GetWithdrawalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetWithdrawalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetWithdrawalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetWithdrawalResponse.displayName = 'proto.datanode.api.v2.GetWithdrawalResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListWithdrawalsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListWithdrawalsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListWithdrawalsRequest.displayName = 'proto.datanode.api.v2.ListWithdrawalsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListWithdrawalsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListWithdrawalsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListWithdrawalsResponse.displayName = 'proto.datanode.api.v2.ListWithdrawalsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.WithdrawalEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.WithdrawalEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.WithdrawalEdge.displayName = 'proto.datanode.api.v2.WithdrawalEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.WithdrawalsConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.WithdrawalsConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.WithdrawalsConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.WithdrawalsConnection.displayName = 'proto.datanode.api.v2.WithdrawalsConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetAssetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetAssetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetAssetRequest.displayName = 'proto.datanode.api.v2.GetAssetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetAssetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetAssetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetAssetResponse.displayName = 'proto.datanode.api.v2.GetAssetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListAssetsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListAssetsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListAssetsRequest.displayName = 'proto.datanode.api.v2.ListAssetsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListAssetsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListAssetsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListAssetsResponse.displayName = 'proto.datanode.api.v2.ListAssetsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AssetEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.AssetEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AssetEdge.displayName = 'proto.datanode.api.v2.AssetEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.AssetsConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.AssetsConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.AssetsConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.AssetsConnection.displayName = 'proto.datanode.api.v2.AssetsConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListLiquidityProvisionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListLiquidityProvisionsRequest.displayName = 'proto.datanode.api.v2.ListLiquidityProvisionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListLiquidityProvisionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListLiquidityProvisionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListLiquidityProvisionsResponse.displayName = 'proto.datanode.api.v2.ListLiquidityProvisionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.LiquidityProvisionsEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.LiquidityProvisionsEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.LiquidityProvisionsEdge.displayName = 'proto.datanode.api.v2.LiquidityProvisionsEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.LiquidityProvisionsConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.LiquidityProvisionsConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.LiquidityProvisionsConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.LiquidityProvisionsConnection.displayName = 'proto.datanode.api.v2.LiquidityProvisionsConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveLiquidityProvisionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.displayName = 'proto.datanode.api.v2.ObserveLiquidityProvisionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ObserveLiquidityProvisionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.displayName = 'proto.datanode.api.v2.ObserveLiquidityProvisionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetGovernanceDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetGovernanceDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetGovernanceDataRequest.displayName = 'proto.datanode.api.v2.GetGovernanceDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetGovernanceDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetGovernanceDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetGovernanceDataResponse.displayName = 'proto.datanode.api.v2.GetGovernanceDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListGovernanceDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListGovernanceDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListGovernanceDataRequest.displayName = 'proto.datanode.api.v2.ListGovernanceDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListGovernanceDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListGovernanceDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListGovernanceDataResponse.displayName = 'proto.datanode.api.v2.ListGovernanceDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GovernanceDataEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GovernanceDataEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GovernanceDataEdge.displayName = 'proto.datanode.api.v2.GovernanceDataEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GovernanceDataConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.GovernanceDataConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.GovernanceDataConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GovernanceDataConnection.displayName = 'proto.datanode.api.v2.GovernanceDataConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveGovernanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveGovernanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveGovernanceRequest.displayName = 'proto.datanode.api.v2.ObserveGovernanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveGovernanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveGovernanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveGovernanceResponse.displayName = 'proto.datanode.api.v2.ObserveGovernanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListDelegationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListDelegationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListDelegationsRequest.displayName = 'proto.datanode.api.v2.ListDelegationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListDelegationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListDelegationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListDelegationsResponse.displayName = 'proto.datanode.api.v2.ListDelegationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.DelegationEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.DelegationEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.DelegationEdge.displayName = 'proto.datanode.api.v2.DelegationEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.DelegationsConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.DelegationsConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.DelegationsConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.DelegationsConnection.displayName = 'proto.datanode.api.v2.DelegationsConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveDelegationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveDelegationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveDelegationsRequest.displayName = 'proto.datanode.api.v2.ObserveDelegationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveDelegationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveDelegationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveDelegationsResponse.displayName = 'proto.datanode.api.v2.ObserveDelegationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetNetworkDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetNetworkDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetNetworkDataRequest.displayName = 'proto.datanode.api.v2.GetNetworkDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetNetworkDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetNetworkDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetNetworkDataResponse.displayName = 'proto.datanode.api.v2.GetNetworkDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetNodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetNodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetNodeRequest.displayName = 'proto.datanode.api.v2.GetNodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetNodeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetNodeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetNodeResponse.displayName = 'proto.datanode.api.v2.GetNodeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListNodesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListNodesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListNodesRequest.displayName = 'proto.datanode.api.v2.ListNodesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListNodesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListNodesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListNodesResponse.displayName = 'proto.datanode.api.v2.ListNodesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.NodeEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.NodeEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.NodeEdge.displayName = 'proto.datanode.api.v2.NodeEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.NodesConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.NodesConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.NodesConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.NodesConnection.displayName = 'proto.datanode.api.v2.NodesConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListNodeSignaturesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListNodeSignaturesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListNodeSignaturesRequest.displayName = 'proto.datanode.api.v2.ListNodeSignaturesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListNodeSignaturesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListNodeSignaturesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListNodeSignaturesResponse.displayName = 'proto.datanode.api.v2.ListNodeSignaturesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.NodeSignatureEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.NodeSignatureEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.NodeSignatureEdge.displayName = 'proto.datanode.api.v2.NodeSignatureEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.NodeSignaturesConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.NodeSignaturesConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.NodeSignaturesConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.NodeSignaturesConnection.displayName = 'proto.datanode.api.v2.NodeSignaturesConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetEpochRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetEpochRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetEpochRequest.displayName = 'proto.datanode.api.v2.GetEpochRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetEpochResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetEpochResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetEpochResponse.displayName = 'proto.datanode.api.v2.GetEpochResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.EstimateFeeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.EstimateFeeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.EstimateFeeRequest.displayName = 'proto.datanode.api.v2.EstimateFeeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.EstimateFeeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.EstimateFeeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.EstimateFeeResponse.displayName = 'proto.datanode.api.v2.EstimateFeeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.EstimateMarginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.EstimateMarginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.EstimateMarginRequest.displayName = 'proto.datanode.api.v2.EstimateMarginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.EstimateMarginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.EstimateMarginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.EstimateMarginResponse.displayName = 'proto.datanode.api.v2.EstimateMarginResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListNetworkParametersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListNetworkParametersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListNetworkParametersRequest.displayName = 'proto.datanode.api.v2.ListNetworkParametersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListNetworkParametersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListNetworkParametersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListNetworkParametersResponse.displayName = 'proto.datanode.api.v2.ListNetworkParametersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetNetworkParameterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetNetworkParameterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetNetworkParameterRequest.displayName = 'proto.datanode.api.v2.GetNetworkParameterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetNetworkParameterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetNetworkParameterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetNetworkParameterResponse.displayName = 'proto.datanode.api.v2.GetNetworkParameterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.NetworkParameterEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.NetworkParameterEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.NetworkParameterEdge.displayName = 'proto.datanode.api.v2.NetworkParameterEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.NetworkParameterConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.NetworkParameterConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.NetworkParameterConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.NetworkParameterConnection.displayName = 'proto.datanode.api.v2.NetworkParameterConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.Checkpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.Checkpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.Checkpoint.displayName = 'proto.datanode.api.v2.Checkpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListCheckpointsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListCheckpointsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListCheckpointsRequest.displayName = 'proto.datanode.api.v2.ListCheckpointsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListCheckpointsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListCheckpointsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListCheckpointsResponse.displayName = 'proto.datanode.api.v2.ListCheckpointsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.CheckpointEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.CheckpointEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.CheckpointEdge.displayName = 'proto.datanode.api.v2.CheckpointEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.CheckpointsConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.CheckpointsConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.CheckpointsConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.CheckpointsConnection.displayName = 'proto.datanode.api.v2.CheckpointsConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetStakeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetStakeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetStakeRequest.displayName = 'proto.datanode.api.v2.GetStakeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetStakeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetStakeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetStakeResponse.displayName = 'proto.datanode.api.v2.GetStakeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.StakeLinkingEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.StakeLinkingEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.StakeLinkingEdge.displayName = 'proto.datanode.api.v2.StakeLinkingEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.StakesConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.StakesConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.StakesConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.StakesConnection.displayName = 'proto.datanode.api.v2.StakesConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetRiskFactorsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetRiskFactorsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetRiskFactorsRequest.displayName = 'proto.datanode.api.v2.GetRiskFactorsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetRiskFactorsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetRiskFactorsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetRiskFactorsResponse.displayName = 'proto.datanode.api.v2.GetRiskFactorsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveEventBusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ObserveEventBusRequest.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ObserveEventBusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveEventBusRequest.displayName = 'proto.datanode.api.v2.ObserveEventBusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveEventBusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ObserveEventBusResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ObserveEventBusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveEventBusResponse.displayName = 'proto.datanode.api.v2.ObserveEventBusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveLedgerMovementsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveLedgerMovementsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveLedgerMovementsRequest.displayName = 'proto.datanode.api.v2.ObserveLedgerMovementsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ObserveLedgerMovementsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ObserveLedgerMovementsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ObserveLedgerMovementsResponse.displayName = 'proto.datanode.api.v2.ObserveLedgerMovementsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListKeyRotationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListKeyRotationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListKeyRotationsRequest.displayName = 'proto.datanode.api.v2.ListKeyRotationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListKeyRotationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListKeyRotationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListKeyRotationsResponse.displayName = 'proto.datanode.api.v2.ListKeyRotationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.KeyRotationEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.KeyRotationEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.KeyRotationEdge.displayName = 'proto.datanode.api.v2.KeyRotationEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.KeyRotationConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.KeyRotationConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.KeyRotationConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.KeyRotationConnection.displayName = 'proto.datanode.api.v2.KeyRotationConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListEthereumKeyRotationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListEthereumKeyRotationsRequest.displayName = 'proto.datanode.api.v2.ListEthereumKeyRotationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListEthereumKeyRotationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListEthereumKeyRotationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListEthereumKeyRotationsResponse.displayName = 'proto.datanode.api.v2.ListEthereumKeyRotationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.EthereumKeyRotationsConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.EthereumKeyRotationsConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.EthereumKeyRotationsConnection.displayName = 'proto.datanode.api.v2.EthereumKeyRotationsConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.EthereumKeyRotationEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.EthereumKeyRotationEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.EthereumKeyRotationEdge.displayName = 'proto.datanode.api.v2.EthereumKeyRotationEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetVegaTimeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetVegaTimeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetVegaTimeRequest.displayName = 'proto.datanode.api.v2.GetVegaTimeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetVegaTimeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetVegaTimeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetVegaTimeResponse.displayName = 'proto.datanode.api.v2.GetVegaTimeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.DateRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.DateRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.DateRange.displayName = 'proto.datanode.api.v2.DateRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetProtocolUpgradeStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetProtocolUpgradeStatusRequest.displayName = 'proto.datanode.api.v2.GetProtocolUpgradeStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetProtocolUpgradeStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.displayName = 'proto.datanode.api.v2.GetProtocolUpgradeStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.displayName = 'proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.displayName = 'proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ProtocolUpgradeProposalConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ProtocolUpgradeProposalConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ProtocolUpgradeProposalConnection.displayName = 'proto.datanode.api.v2.ProtocolUpgradeProposalConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ProtocolUpgradeProposalEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ProtocolUpgradeProposalEdge.displayName = 'proto.datanode.api.v2.ProtocolUpgradeProposalEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListCoreSnapshotsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListCoreSnapshotsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListCoreSnapshotsRequest.displayName = 'proto.datanode.api.v2.ListCoreSnapshotsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListCoreSnapshotsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListCoreSnapshotsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListCoreSnapshotsResponse.displayName = 'proto.datanode.api.v2.ListCoreSnapshotsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.CoreSnapshotConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.CoreSnapshotConnection.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.CoreSnapshotConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.CoreSnapshotConnection.displayName = 'proto.datanode.api.v2.CoreSnapshotConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.CoreSnapshotEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.CoreSnapshotEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.CoreSnapshotEdge.displayName = 'proto.datanode.api.v2.CoreSnapshotEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.HistorySegment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.HistorySegment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.HistorySegment.displayName = 'proto.datanode.api.v2.HistorySegment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest.displayName = 'proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.displayName = 'proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest.displayName = 'proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.displayName = 'proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest.displayName = 'proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.repeatedFields_, null);
};
goog.inherits(proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.displayName = 'proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.PingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.PingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.PingRequest.displayName = 'proto.datanode.api.v2.PingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datanode.api.v2.PingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datanode.api.v2.PingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.datanode.api.v2.PingResponse.displayName = 'proto.datanode.api.v2.PingResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.OffsetPagination.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.OffsetPagination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.OffsetPagination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OffsetPagination.toObject = function(includeInstance, msg) {
  var f, obj = {
    skip: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    descending: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.OffsetPagination}
 */
proto.datanode.api.v2.OffsetPagination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.OffsetPagination;
  return proto.datanode.api.v2.OffsetPagination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.OffsetPagination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.OffsetPagination}
 */
proto.datanode.api.v2.OffsetPagination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSkip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDescending(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.OffsetPagination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.OffsetPagination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.OffsetPagination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OffsetPagination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getDescending();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional uint64 skip = 1;
 * @return {number}
 */
proto.datanode.api.v2.OffsetPagination.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.OffsetPagination} returns this
 */
proto.datanode.api.v2.OffsetPagination.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 limit = 2;
 * @return {number}
 */
proto.datanode.api.v2.OffsetPagination.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.OffsetPagination} returns this
 */
proto.datanode.api.v2.OffsetPagination.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool descending = 3;
 * @return {boolean}
 */
proto.datanode.api.v2.OffsetPagination.prototype.getDescending = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.OffsetPagination} returns this
 */
proto.datanode.api.v2.OffsetPagination.prototype.setDescending = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.Pagination.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.Pagination.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.Pagination} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.Pagination.toObject = function(includeInstance, msg) {
  var f, obj = {
    first: jspb.Message.getFieldWithDefault(msg, 1, 0),
    after: jspb.Message.getFieldWithDefault(msg, 2, ""),
    last: jspb.Message.getFieldWithDefault(msg, 3, 0),
    before: jspb.Message.getFieldWithDefault(msg, 4, ""),
    newestFirst: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.Pagination.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.Pagination;
  return proto.datanode.api.v2.Pagination.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.Pagination} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.Pagination.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFirst(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAfter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLast(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBefore(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNewestFirst(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.Pagination.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.Pagination.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.Pagination} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.Pagination.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int32 first = 1;
 * @return {number}
 */
proto.datanode.api.v2.Pagination.prototype.getFirst = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.Pagination} returns this
 */
proto.datanode.api.v2.Pagination.prototype.setFirst = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.Pagination} returns this
 */
proto.datanode.api.v2.Pagination.prototype.clearFirst = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.Pagination.prototype.hasFirst = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string after = 2;
 * @return {string}
 */
proto.datanode.api.v2.Pagination.prototype.getAfter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.Pagination} returns this
 */
proto.datanode.api.v2.Pagination.prototype.setAfter = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.Pagination} returns this
 */
proto.datanode.api.v2.Pagination.prototype.clearAfter = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.Pagination.prototype.hasAfter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 last = 3;
 * @return {number}
 */
proto.datanode.api.v2.Pagination.prototype.getLast = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.Pagination} returns this
 */
proto.datanode.api.v2.Pagination.prototype.setLast = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.Pagination} returns this
 */
proto.datanode.api.v2.Pagination.prototype.clearLast = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.Pagination.prototype.hasLast = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string before = 4;
 * @return {string}
 */
proto.datanode.api.v2.Pagination.prototype.getBefore = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.Pagination} returns this
 */
proto.datanode.api.v2.Pagination.prototype.setBefore = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.Pagination} returns this
 */
proto.datanode.api.v2.Pagination.prototype.clearBefore = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.Pagination.prototype.hasBefore = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool newest_first = 5;
 * @return {boolean}
 */
proto.datanode.api.v2.Pagination.prototype.getNewestFirst = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.Pagination} returns this
 */
proto.datanode.api.v2.Pagination.prototype.setNewestFirst = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.Pagination} returns this
 */
proto.datanode.api.v2.Pagination.prototype.clearNewestFirst = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.Pagination.prototype.hasNewestFirst = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.PageInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.PageInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.PageInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PageInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    hasNextPage: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    hasPreviousPage: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    startCursor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    endCursor: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.PageInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.PageInfo;
  return proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.PageInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasNextPage(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasPreviousPage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartCursor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.PageInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.PageInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.PageInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PageInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHasNextPage();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getHasPreviousPage();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStartCursor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEndCursor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool has_next_page = 1;
 * @return {boolean}
 */
proto.datanode.api.v2.PageInfo.prototype.getHasNextPage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.PageInfo} returns this
 */
proto.datanode.api.v2.PageInfo.prototype.setHasNextPage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool has_previous_page = 2;
 * @return {boolean}
 */
proto.datanode.api.v2.PageInfo.prototype.getHasPreviousPage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.PageInfo} returns this
 */
proto.datanode.api.v2.PageInfo.prototype.setHasPreviousPage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string start_cursor = 3;
 * @return {string}
 */
proto.datanode.api.v2.PageInfo.prototype.getStartCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.PageInfo} returns this
 */
proto.datanode.api.v2.PageInfo.prototype.setStartCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string end_cursor = 4;
 * @return {string}
 */
proto.datanode.api.v2.PageInfo.prototype.getEndCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.PageInfo} returns this
 */
proto.datanode.api.v2.PageInfo.prototype.setEndCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AccountBalance.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AccountBalance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AccountBalance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountBalance.toObject = function(includeInstance, msg) {
  var f, obj = {
    owner: jspb.Message.getFieldWithDefault(msg, 2, ""),
    balance: jspb.Message.getFieldWithDefault(msg, 3, ""),
    asset: jspb.Message.getFieldWithDefault(msg, 4, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AccountBalance}
 */
proto.datanode.api.v2.AccountBalance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AccountBalance;
  return proto.datanode.api.v2.AccountBalance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AccountBalance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AccountBalance}
 */
proto.datanode.api.v2.AccountBalance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBalance(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAsset(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 6:
      var value = /** @type {!proto.vega.AccountType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AccountBalance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AccountBalance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AccountBalance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountBalance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBalance();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAsset();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string owner = 2;
 * @return {string}
 */
proto.datanode.api.v2.AccountBalance.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AccountBalance} returns this
 */
proto.datanode.api.v2.AccountBalance.prototype.setOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string balance = 3;
 * @return {string}
 */
proto.datanode.api.v2.AccountBalance.prototype.getBalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AccountBalance} returns this
 */
proto.datanode.api.v2.AccountBalance.prototype.setBalance = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string asset = 4;
 * @return {string}
 */
proto.datanode.api.v2.AccountBalance.prototype.getAsset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AccountBalance} returns this
 */
proto.datanode.api.v2.AccountBalance.prototype.setAsset = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string market_id = 5;
 * @return {string}
 */
proto.datanode.api.v2.AccountBalance.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AccountBalance} returns this
 */
proto.datanode.api.v2.AccountBalance.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional vega.AccountType type = 6;
 * @return {!proto.vega.AccountType}
 */
proto.datanode.api.v2.AccountBalance.prototype.getType = function() {
  return /** @type {!proto.vega.AccountType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.vega.AccountType} value
 * @return {!proto.datanode.api.v2.AccountBalance} returns this
 */
proto.datanode.api.v2.AccountBalance.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListAccountsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListAccountsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListAccountsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAccountsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.datanode.api.v2.AccountFilter.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListAccountsRequest}
 */
proto.datanode.api.v2.ListAccountsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListAccountsRequest;
  return proto.datanode.api.v2.ListAccountsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListAccountsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListAccountsRequest}
 */
proto.datanode.api.v2.ListAccountsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AccountFilter;
      reader.readMessage(value,proto.datanode.api.v2.AccountFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListAccountsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListAccountsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListAccountsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAccountsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AccountFilter.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountFilter filter = 1;
 * @return {?proto.datanode.api.v2.AccountFilter}
 */
proto.datanode.api.v2.ListAccountsRequest.prototype.getFilter = function() {
  return /** @type{?proto.datanode.api.v2.AccountFilter} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AccountFilter, 1));
};


/**
 * @param {?proto.datanode.api.v2.AccountFilter|undefined} value
 * @return {!proto.datanode.api.v2.ListAccountsRequest} returns this
*/
proto.datanode.api.v2.ListAccountsRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListAccountsRequest} returns this
 */
proto.datanode.api.v2.ListAccountsRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListAccountsRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListAccountsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListAccountsRequest} returns this
*/
proto.datanode.api.v2.ListAccountsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListAccountsRequest} returns this
 */
proto.datanode.api.v2.ListAccountsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListAccountsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListAccountsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListAccountsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListAccountsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAccountsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accounts: (f = msg.getAccounts()) && proto.datanode.api.v2.AccountsConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListAccountsResponse}
 */
proto.datanode.api.v2.ListAccountsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListAccountsResponse;
  return proto.datanode.api.v2.ListAccountsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListAccountsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListAccountsResponse}
 */
proto.datanode.api.v2.ListAccountsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AccountsConnection;
      reader.readMessage(value,proto.datanode.api.v2.AccountsConnection.deserializeBinaryFromReader);
      msg.setAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListAccountsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListAccountsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListAccountsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAccountsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccounts();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AccountsConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountsConnection accounts = 1;
 * @return {?proto.datanode.api.v2.AccountsConnection}
 */
proto.datanode.api.v2.ListAccountsResponse.prototype.getAccounts = function() {
  return /** @type{?proto.datanode.api.v2.AccountsConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AccountsConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.AccountsConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListAccountsResponse} returns this
*/
proto.datanode.api.v2.ListAccountsResponse.prototype.setAccounts = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListAccountsResponse} returns this
 */
proto.datanode.api.v2.ListAccountsResponse.prototype.clearAccounts = function() {
  return this.setAccounts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListAccountsResponse.prototype.hasAccounts = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.AccountsConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AccountsConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AccountsConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AccountsConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountsConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.AccountEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AccountsConnection}
 */
proto.datanode.api.v2.AccountsConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AccountsConnection;
  return proto.datanode.api.v2.AccountsConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AccountsConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AccountsConnection}
 */
proto.datanode.api.v2.AccountsConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AccountEdge;
      reader.readMessage(value,proto.datanode.api.v2.AccountEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AccountsConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AccountsConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AccountsConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountsConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.AccountEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AccountEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.AccountEdge>}
 */
proto.datanode.api.v2.AccountsConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.AccountEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.AccountEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.AccountEdge>} value
 * @return {!proto.datanode.api.v2.AccountsConnection} returns this
*/
proto.datanode.api.v2.AccountsConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.AccountEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.AccountEdge}
 */
proto.datanode.api.v2.AccountsConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.AccountEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.AccountsConnection} returns this
 */
proto.datanode.api.v2.AccountsConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.AccountsConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.AccountsConnection} returns this
*/
proto.datanode.api.v2.AccountsConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.AccountsConnection} returns this
 */
proto.datanode.api.v2.AccountsConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AccountsConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AccountEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AccountEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AccountEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.datanode.api.v2.AccountBalance.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AccountEdge}
 */
proto.datanode.api.v2.AccountEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AccountEdge;
  return proto.datanode.api.v2.AccountEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AccountEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AccountEdge}
 */
proto.datanode.api.v2.AccountEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AccountBalance;
      reader.readMessage(value,proto.datanode.api.v2.AccountBalance.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AccountEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AccountEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AccountEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AccountBalance.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional AccountBalance node = 1;
 * @return {?proto.datanode.api.v2.AccountBalance}
 */
proto.datanode.api.v2.AccountEdge.prototype.getNode = function() {
  return /** @type{?proto.datanode.api.v2.AccountBalance} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AccountBalance, 1));
};


/**
 * @param {?proto.datanode.api.v2.AccountBalance|undefined} value
 * @return {!proto.datanode.api.v2.AccountEdge} returns this
*/
proto.datanode.api.v2.AccountEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.AccountEdge} returns this
 */
proto.datanode.api.v2.AccountEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AccountEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.AccountEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AccountEdge} returns this
 */
proto.datanode.api.v2.AccountEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveAccountsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveAccountsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveAccountsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveAccountsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partyId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    asset: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveAccountsRequest}
 */
proto.datanode.api.v2.ObserveAccountsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveAccountsRequest;
  return proto.datanode.api.v2.ObserveAccountsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveAccountsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveAccountsRequest}
 */
proto.datanode.api.v2.ObserveAccountsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAsset(value);
      break;
    case 4:
      var value = /** @type {!proto.vega.AccountType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveAccountsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveAccountsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveAccountsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveAccountsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAsset();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ObserveAccountsRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveAccountsRequest} returns this
 */
proto.datanode.api.v2.ObserveAccountsRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string party_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ObserveAccountsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveAccountsRequest} returns this
 */
proto.datanode.api.v2.ObserveAccountsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string asset = 3;
 * @return {string}
 */
proto.datanode.api.v2.ObserveAccountsRequest.prototype.getAsset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveAccountsRequest} returns this
 */
proto.datanode.api.v2.ObserveAccountsRequest.prototype.setAsset = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional vega.AccountType type = 4;
 * @return {!proto.vega.AccountType}
 */
proto.datanode.api.v2.ObserveAccountsRequest.prototype.getType = function() {
  return /** @type {!proto.vega.AccountType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.vega.AccountType} value
 * @return {!proto.datanode.api.v2.ObserveAccountsRequest} returns this
 */
proto.datanode.api.v2.ObserveAccountsRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.datanode.api.v2.ObserveAccountsResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.datanode.api.v2.ObserveAccountsResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  SNAPSHOT: 1,
  UPDATES: 2
};

/**
 * @return {proto.datanode.api.v2.ObserveAccountsResponse.ResponseCase}
 */
proto.datanode.api.v2.ObserveAccountsResponse.prototype.getResponseCase = function() {
  return /** @type {proto.datanode.api.v2.ObserveAccountsResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.datanode.api.v2.ObserveAccountsResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveAccountsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveAccountsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveAccountsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveAccountsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshot: (f = msg.getSnapshot()) && proto.datanode.api.v2.AccountSnapshotPage.toObject(includeInstance, f),
    updates: (f = msg.getUpdates()) && proto.datanode.api.v2.AccountUpdates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveAccountsResponse}
 */
proto.datanode.api.v2.ObserveAccountsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveAccountsResponse;
  return proto.datanode.api.v2.ObserveAccountsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveAccountsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveAccountsResponse}
 */
proto.datanode.api.v2.ObserveAccountsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AccountSnapshotPage;
      reader.readMessage(value,proto.datanode.api.v2.AccountSnapshotPage.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.AccountUpdates;
      reader.readMessage(value,proto.datanode.api.v2.AccountUpdates.deserializeBinaryFromReader);
      msg.setUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveAccountsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveAccountsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveAccountsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveAccountsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AccountSnapshotPage.serializeBinaryToWriter
    );
  }
  f = message.getUpdates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.AccountUpdates.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountSnapshotPage snapshot = 1;
 * @return {?proto.datanode.api.v2.AccountSnapshotPage}
 */
proto.datanode.api.v2.ObserveAccountsResponse.prototype.getSnapshot = function() {
  return /** @type{?proto.datanode.api.v2.AccountSnapshotPage} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AccountSnapshotPage, 1));
};


/**
 * @param {?proto.datanode.api.v2.AccountSnapshotPage|undefined} value
 * @return {!proto.datanode.api.v2.ObserveAccountsResponse} returns this
*/
proto.datanode.api.v2.ObserveAccountsResponse.prototype.setSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.datanode.api.v2.ObserveAccountsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveAccountsResponse} returns this
 */
proto.datanode.api.v2.ObserveAccountsResponse.prototype.clearSnapshot = function() {
  return this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveAccountsResponse.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AccountUpdates updates = 2;
 * @return {?proto.datanode.api.v2.AccountUpdates}
 */
proto.datanode.api.v2.ObserveAccountsResponse.prototype.getUpdates = function() {
  return /** @type{?proto.datanode.api.v2.AccountUpdates} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AccountUpdates, 2));
};


/**
 * @param {?proto.datanode.api.v2.AccountUpdates|undefined} value
 * @return {!proto.datanode.api.v2.ObserveAccountsResponse} returns this
*/
proto.datanode.api.v2.ObserveAccountsResponse.prototype.setUpdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.datanode.api.v2.ObserveAccountsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveAccountsResponse} returns this
 */
proto.datanode.api.v2.ObserveAccountsResponse.prototype.clearUpdates = function() {
  return this.setUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveAccountsResponse.prototype.hasUpdates = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.AccountSnapshotPage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AccountSnapshotPage.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AccountSnapshotPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AccountSnapshotPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountSnapshotPage.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountsList: jspb.Message.toObjectList(msg.getAccountsList(),
    proto.datanode.api.v2.AccountBalance.toObject, includeInstance),
    lastPage: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AccountSnapshotPage}
 */
proto.datanode.api.v2.AccountSnapshotPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AccountSnapshotPage;
  return proto.datanode.api.v2.AccountSnapshotPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AccountSnapshotPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AccountSnapshotPage}
 */
proto.datanode.api.v2.AccountSnapshotPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AccountBalance;
      reader.readMessage(value,proto.datanode.api.v2.AccountBalance.deserializeBinaryFromReader);
      msg.addAccounts(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLastPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AccountSnapshotPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AccountSnapshotPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AccountSnapshotPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountSnapshotPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.AccountBalance.serializeBinaryToWriter
    );
  }
  f = message.getLastPage();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated AccountBalance accounts = 1;
 * @return {!Array<!proto.datanode.api.v2.AccountBalance>}
 */
proto.datanode.api.v2.AccountSnapshotPage.prototype.getAccountsList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.AccountBalance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.AccountBalance, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.AccountBalance>} value
 * @return {!proto.datanode.api.v2.AccountSnapshotPage} returns this
*/
proto.datanode.api.v2.AccountSnapshotPage.prototype.setAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.AccountBalance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.AccountBalance}
 */
proto.datanode.api.v2.AccountSnapshotPage.prototype.addAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.AccountBalance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.AccountSnapshotPage} returns this
 */
proto.datanode.api.v2.AccountSnapshotPage.prototype.clearAccountsList = function() {
  return this.setAccountsList([]);
};


/**
 * optional bool last_page = 2;
 * @return {boolean}
 */
proto.datanode.api.v2.AccountSnapshotPage.prototype.getLastPage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.AccountSnapshotPage} returns this
 */
proto.datanode.api.v2.AccountSnapshotPage.prototype.setLastPage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.AccountUpdates.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AccountUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AccountUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AccountUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountsList: jspb.Message.toObjectList(msg.getAccountsList(),
    proto.datanode.api.v2.AccountBalance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AccountUpdates}
 */
proto.datanode.api.v2.AccountUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AccountUpdates;
  return proto.datanode.api.v2.AccountUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AccountUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AccountUpdates}
 */
proto.datanode.api.v2.AccountUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AccountBalance;
      reader.readMessage(value,proto.datanode.api.v2.AccountBalance.deserializeBinaryFromReader);
      msg.addAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AccountUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AccountUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AccountUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.AccountBalance.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AccountBalance accounts = 1;
 * @return {!Array<!proto.datanode.api.v2.AccountBalance>}
 */
proto.datanode.api.v2.AccountUpdates.prototype.getAccountsList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.AccountBalance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.AccountBalance, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.AccountBalance>} value
 * @return {!proto.datanode.api.v2.AccountUpdates} returns this
*/
proto.datanode.api.v2.AccountUpdates.prototype.setAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.AccountBalance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.AccountBalance}
 */
proto.datanode.api.v2.AccountUpdates.prototype.addAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.AccountBalance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.AccountUpdates} returns this
 */
proto.datanode.api.v2.AccountUpdates.prototype.clearAccountsList = function() {
  return this.setAccountsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.InfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.InfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.InfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.InfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.InfoRequest}
 */
proto.datanode.api.v2.InfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.InfoRequest;
  return proto.datanode.api.v2.InfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.InfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.InfoRequest}
 */
proto.datanode.api.v2.InfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.InfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.InfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.InfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.InfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.InfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.InfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.InfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.InfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commitHash: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.InfoResponse}
 */
proto.datanode.api.v2.InfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.InfoResponse;
  return proto.datanode.api.v2.InfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.InfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.InfoResponse}
 */
proto.datanode.api.v2.InfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommitHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.InfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.InfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.InfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.InfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommitHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.datanode.api.v2.InfoResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.InfoResponse} returns this
 */
proto.datanode.api.v2.InfoResponse.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string commit_hash = 2;
 * @return {string}
 */
proto.datanode.api.v2.InfoResponse.prototype.getCommitHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.InfoResponse} returns this
 */
proto.datanode.api.v2.InfoResponse.prototype.setCommitHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetOrderRequest}
 */
proto.datanode.api.v2.GetOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetOrderRequest;
  return proto.datanode.api.v2.GetOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetOrderRequest}
 */
proto.datanode.api.v2.GetOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetOrderRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetOrderRequest} returns this
 */
proto.datanode.api.v2.GetOrderRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 version = 2;
 * @return {number}
 */
proto.datanode.api.v2.GetOrderRequest.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.GetOrderRequest} returns this
 */
proto.datanode.api.v2.GetOrderRequest.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.GetOrderRequest} returns this
 */
proto.datanode.api.v2.GetOrderRequest.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetOrderRequest.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    order: (f = msg.getOrder()) && vega_vega_pb.Order.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetOrderResponse}
 */
proto.datanode.api.v2.GetOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetOrderResponse;
  return proto.datanode.api.v2.GetOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetOrderResponse}
 */
proto.datanode.api.v2.GetOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Order;
      reader.readMessage(value,vega_vega_pb.Order.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Order.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Order order = 1;
 * @return {?proto.vega.Order}
 */
proto.datanode.api.v2.GetOrderResponse.prototype.getOrder = function() {
  return /** @type{?proto.vega.Order} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Order, 1));
};


/**
 * @param {?proto.vega.Order|undefined} value
 * @return {!proto.datanode.api.v2.GetOrderResponse} returns this
*/
proto.datanode.api.v2.GetOrderResponse.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetOrderResponse} returns this
 */
proto.datanode.api.v2.GetOrderResponse.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetOrderResponse.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.OrderFilter.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.OrderFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.OrderFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.OrderFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OrderFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    typesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    timeInForcesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    excludeLiquidity: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.OrderFilter}
 */
proto.datanode.api.v2.OrderFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.OrderFilter;
  return proto.datanode.api.v2.OrderFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.OrderFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.OrderFilter}
 */
proto.datanode.api.v2.OrderFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.vega.Order.Status>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatuses(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.vega.Order.Type>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTypes(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<!proto.vega.Order.TimeInForce>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTimeInForces(values[i]);
      }
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcludeLiquidity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.OrderFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.OrderFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.OrderFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OrderFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getTimeInForcesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
  f = message.getExcludeLiquidity();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * repeated vega.Order.Status statuses = 1;
 * @return {!Array<!proto.vega.Order.Status>}
 */
proto.datanode.api.v2.OrderFilter.prototype.getStatusesList = function() {
  return /** @type {!Array<!proto.vega.Order.Status>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.vega.Order.Status>} value
 * @return {!proto.datanode.api.v2.OrderFilter} returns this
 */
proto.datanode.api.v2.OrderFilter.prototype.setStatusesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.vega.Order.Status} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.OrderFilter} returns this
 */
proto.datanode.api.v2.OrderFilter.prototype.addStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.OrderFilter} returns this
 */
proto.datanode.api.v2.OrderFilter.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};


/**
 * repeated vega.Order.Type types = 2;
 * @return {!Array<!proto.vega.Order.Type>}
 */
proto.datanode.api.v2.OrderFilter.prototype.getTypesList = function() {
  return /** @type {!Array<!proto.vega.Order.Type>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.vega.Order.Type>} value
 * @return {!proto.datanode.api.v2.OrderFilter} returns this
 */
proto.datanode.api.v2.OrderFilter.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.vega.Order.Type} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.OrderFilter} returns this
 */
proto.datanode.api.v2.OrderFilter.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.OrderFilter} returns this
 */
proto.datanode.api.v2.OrderFilter.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};


/**
 * repeated vega.Order.TimeInForce time_in_forces = 3;
 * @return {!Array<!proto.vega.Order.TimeInForce>}
 */
proto.datanode.api.v2.OrderFilter.prototype.getTimeInForcesList = function() {
  return /** @type {!Array<!proto.vega.Order.TimeInForce>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<!proto.vega.Order.TimeInForce>} value
 * @return {!proto.datanode.api.v2.OrderFilter} returns this
 */
proto.datanode.api.v2.OrderFilter.prototype.setTimeInForcesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.vega.Order.TimeInForce} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.OrderFilter} returns this
 */
proto.datanode.api.v2.OrderFilter.prototype.addTimeInForces = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.OrderFilter} returns this
 */
proto.datanode.api.v2.OrderFilter.prototype.clearTimeInForcesList = function() {
  return this.setTimeInForcesList([]);
};


/**
 * optional bool exclude_liquidity = 4;
 * @return {boolean}
 */
proto.datanode.api.v2.OrderFilter.prototype.getExcludeLiquidity = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.OrderFilter} returns this
 */
proto.datanode.api.v2.OrderFilter.prototype.setExcludeLiquidity = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListOrdersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListOrdersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOrdersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reference: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f),
    liveOnly: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    dateRange: (f = msg.getDateRange()) && proto.datanode.api.v2.DateRange.toObject(includeInstance, f),
    filter: (f = msg.getFilter()) && proto.datanode.api.v2.OrderFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListOrdersRequest}
 */
proto.datanode.api.v2.ListOrdersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListOrdersRequest;
  return proto.datanode.api.v2.ListOrdersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListOrdersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListOrdersRequest}
 */
proto.datanode.api.v2.ListOrdersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReference(value);
      break;
    case 4:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLiveOnly(value);
      break;
    case 6:
      var value = new proto.datanode.api.v2.DateRange;
      reader.readMessage(value,proto.datanode.api.v2.DateRange.deserializeBinaryFromReader);
      msg.setDateRange(value);
      break;
    case 7:
      var value = new proto.datanode.api.v2.OrderFilter;
      reader.readMessage(value,proto.datanode.api.v2.OrderFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListOrdersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListOrdersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOrdersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getDateRange();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.datanode.api.v2.DateRange.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.datanode.api.v2.OrderFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.clearMarketId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.hasMarketId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string reference = 3;
 * @return {string}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.getReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.setReference = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.clearReference = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.hasReference = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Pagination pagination = 4;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 4));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
*/
proto.datanode.api.v2.ListOrdersRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool live_only = 5;
 * @return {boolean}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.getLiveOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.setLiveOnly = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.clearLiveOnly = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.hasLiveOnly = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DateRange date_range = 6;
 * @return {?proto.datanode.api.v2.DateRange}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.getDateRange = function() {
  return /** @type{?proto.datanode.api.v2.DateRange} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.DateRange, 6));
};


/**
 * @param {?proto.datanode.api.v2.DateRange|undefined} value
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
*/
proto.datanode.api.v2.ListOrdersRequest.prototype.setDateRange = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.clearDateRange = function() {
  return this.setDateRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.hasDateRange = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional OrderFilter filter = 7;
 * @return {?proto.datanode.api.v2.OrderFilter}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.getFilter = function() {
  return /** @type{?proto.datanode.api.v2.OrderFilter} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.OrderFilter, 7));
};


/**
 * @param {?proto.datanode.api.v2.OrderFilter|undefined} value
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
*/
proto.datanode.api.v2.ListOrdersRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListOrdersRequest} returns this
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOrdersRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orders: (f = msg.getOrders()) && proto.datanode.api.v2.OrderConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListOrdersResponse}
 */
proto.datanode.api.v2.ListOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListOrdersResponse;
  return proto.datanode.api.v2.ListOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListOrdersResponse}
 */
proto.datanode.api.v2.ListOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.OrderConnection;
      reader.readMessage(value,proto.datanode.api.v2.OrderConnection.deserializeBinaryFromReader);
      msg.setOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.OrderConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional OrderConnection orders = 1;
 * @return {?proto.datanode.api.v2.OrderConnection}
 */
proto.datanode.api.v2.ListOrdersResponse.prototype.getOrders = function() {
  return /** @type{?proto.datanode.api.v2.OrderConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.OrderConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.OrderConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListOrdersResponse} returns this
*/
proto.datanode.api.v2.ListOrdersResponse.prototype.setOrders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListOrdersResponse} returns this
 */
proto.datanode.api.v2.ListOrdersResponse.prototype.clearOrders = function() {
  return this.setOrders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOrdersResponse.prototype.hasOrders = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListOrderVersionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListOrderVersionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListOrderVersionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOrderVersionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListOrderVersionsRequest}
 */
proto.datanode.api.v2.ListOrderVersionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListOrderVersionsRequest;
  return proto.datanode.api.v2.ListOrderVersionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListOrderVersionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListOrderVersionsRequest}
 */
proto.datanode.api.v2.ListOrderVersionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 4:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListOrderVersionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListOrderVersionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListOrderVersionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOrderVersionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string order_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListOrderVersionsRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListOrderVersionsRequest} returns this
 */
proto.datanode.api.v2.ListOrderVersionsRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Pagination pagination = 4;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListOrderVersionsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 4));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListOrderVersionsRequest} returns this
*/
proto.datanode.api.v2.ListOrderVersionsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListOrderVersionsRequest} returns this
 */
proto.datanode.api.v2.ListOrderVersionsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOrderVersionsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListOrderVersionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListOrderVersionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListOrderVersionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOrderVersionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    orders: (f = msg.getOrders()) && proto.datanode.api.v2.OrderConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListOrderVersionsResponse}
 */
proto.datanode.api.v2.ListOrderVersionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListOrderVersionsResponse;
  return proto.datanode.api.v2.ListOrderVersionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListOrderVersionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListOrderVersionsResponse}
 */
proto.datanode.api.v2.ListOrderVersionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.OrderConnection;
      reader.readMessage(value,proto.datanode.api.v2.OrderConnection.deserializeBinaryFromReader);
      msg.setOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListOrderVersionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListOrderVersionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListOrderVersionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOrderVersionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.OrderConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional OrderConnection orders = 1;
 * @return {?proto.datanode.api.v2.OrderConnection}
 */
proto.datanode.api.v2.ListOrderVersionsResponse.prototype.getOrders = function() {
  return /** @type{?proto.datanode.api.v2.OrderConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.OrderConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.OrderConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListOrderVersionsResponse} returns this
*/
proto.datanode.api.v2.ListOrderVersionsResponse.prototype.setOrders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListOrderVersionsResponse} returns this
 */
proto.datanode.api.v2.ListOrderVersionsResponse.prototype.clearOrders = function() {
  return this.setOrders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOrderVersionsResponse.prototype.hasOrders = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveOrdersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveOrdersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveOrdersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partyId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    excludeLiquidity: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveOrdersRequest}
 */
proto.datanode.api.v2.ObserveOrdersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveOrdersRequest;
  return proto.datanode.api.v2.ObserveOrdersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveOrdersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveOrdersRequest}
 */
proto.datanode.api.v2.ObserveOrdersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcludeLiquidity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveOrdersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveOrdersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveOrdersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveOrdersRequest} returns this
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveOrdersRequest} returns this
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.clearMarketId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.hasMarketId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string party_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveOrdersRequest} returns this
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveOrdersRequest} returns this
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool exclude_liquidity = 3;
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.getExcludeLiquidity = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.ObserveOrdersRequest} returns this
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.setExcludeLiquidity = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveOrdersRequest} returns this
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.clearExcludeLiquidity = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveOrdersRequest.prototype.hasExcludeLiquidity = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.datanode.api.v2.ObserveOrdersResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.datanode.api.v2.ObserveOrdersResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  SNAPSHOT: 1,
  UPDATES: 2
};

/**
 * @return {proto.datanode.api.v2.ObserveOrdersResponse.ResponseCase}
 */
proto.datanode.api.v2.ObserveOrdersResponse.prototype.getResponseCase = function() {
  return /** @type {proto.datanode.api.v2.ObserveOrdersResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.datanode.api.v2.ObserveOrdersResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshot: (f = msg.getSnapshot()) && proto.datanode.api.v2.OrderSnapshotPage.toObject(includeInstance, f),
    updates: (f = msg.getUpdates()) && proto.datanode.api.v2.OrderUpdates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveOrdersResponse}
 */
proto.datanode.api.v2.ObserveOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveOrdersResponse;
  return proto.datanode.api.v2.ObserveOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveOrdersResponse}
 */
proto.datanode.api.v2.ObserveOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.OrderSnapshotPage;
      reader.readMessage(value,proto.datanode.api.v2.OrderSnapshotPage.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.OrderUpdates;
      reader.readMessage(value,proto.datanode.api.v2.OrderUpdates.deserializeBinaryFromReader);
      msg.setUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.OrderSnapshotPage.serializeBinaryToWriter
    );
  }
  f = message.getUpdates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.OrderUpdates.serializeBinaryToWriter
    );
  }
};


/**
 * optional OrderSnapshotPage snapshot = 1;
 * @return {?proto.datanode.api.v2.OrderSnapshotPage}
 */
proto.datanode.api.v2.ObserveOrdersResponse.prototype.getSnapshot = function() {
  return /** @type{?proto.datanode.api.v2.OrderSnapshotPage} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.OrderSnapshotPage, 1));
};


/**
 * @param {?proto.datanode.api.v2.OrderSnapshotPage|undefined} value
 * @return {!proto.datanode.api.v2.ObserveOrdersResponse} returns this
*/
proto.datanode.api.v2.ObserveOrdersResponse.prototype.setSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.datanode.api.v2.ObserveOrdersResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveOrdersResponse} returns this
 */
proto.datanode.api.v2.ObserveOrdersResponse.prototype.clearSnapshot = function() {
  return this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveOrdersResponse.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional OrderUpdates updates = 2;
 * @return {?proto.datanode.api.v2.OrderUpdates}
 */
proto.datanode.api.v2.ObserveOrdersResponse.prototype.getUpdates = function() {
  return /** @type{?proto.datanode.api.v2.OrderUpdates} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.OrderUpdates, 2));
};


/**
 * @param {?proto.datanode.api.v2.OrderUpdates|undefined} value
 * @return {!proto.datanode.api.v2.ObserveOrdersResponse} returns this
*/
proto.datanode.api.v2.ObserveOrdersResponse.prototype.setUpdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.datanode.api.v2.ObserveOrdersResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveOrdersResponse} returns this
 */
proto.datanode.api.v2.ObserveOrdersResponse.prototype.clearUpdates = function() {
  return this.setUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveOrdersResponse.prototype.hasUpdates = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.OrderSnapshotPage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.OrderSnapshotPage.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.OrderSnapshotPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.OrderSnapshotPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OrderSnapshotPage.toObject = function(includeInstance, msg) {
  var f, obj = {
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    vega_vega_pb.Order.toObject, includeInstance),
    lastPage: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.OrderSnapshotPage}
 */
proto.datanode.api.v2.OrderSnapshotPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.OrderSnapshotPage;
  return proto.datanode.api.v2.OrderSnapshotPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.OrderSnapshotPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.OrderSnapshotPage}
 */
proto.datanode.api.v2.OrderSnapshotPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Order;
      reader.readMessage(value,vega_vega_pb.Order.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLastPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.OrderSnapshotPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.OrderSnapshotPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.OrderSnapshotPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OrderSnapshotPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.Order.serializeBinaryToWriter
    );
  }
  f = message.getLastPage();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated vega.Order orders = 1;
 * @return {!Array<!proto.vega.Order>}
 */
proto.datanode.api.v2.OrderSnapshotPage.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.vega.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.Order, 1));
};


/**
 * @param {!Array<!proto.vega.Order>} value
 * @return {!proto.datanode.api.v2.OrderSnapshotPage} returns this
*/
proto.datanode.api.v2.OrderSnapshotPage.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.Order}
 */
proto.datanode.api.v2.OrderSnapshotPage.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.OrderSnapshotPage} returns this
 */
proto.datanode.api.v2.OrderSnapshotPage.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};


/**
 * optional bool last_page = 2;
 * @return {boolean}
 */
proto.datanode.api.v2.OrderSnapshotPage.prototype.getLastPage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.OrderSnapshotPage} returns this
 */
proto.datanode.api.v2.OrderSnapshotPage.prototype.setLastPage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.OrderUpdates.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.OrderUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.OrderUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.OrderUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OrderUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    vega_vega_pb.Order.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.OrderUpdates}
 */
proto.datanode.api.v2.OrderUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.OrderUpdates;
  return proto.datanode.api.v2.OrderUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.OrderUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.OrderUpdates}
 */
proto.datanode.api.v2.OrderUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Order;
      reader.readMessage(value,vega_vega_pb.Order.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.OrderUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.OrderUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.OrderUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OrderUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.Order.serializeBinaryToWriter
    );
  }
};


/**
 * repeated vega.Order orders = 1;
 * @return {!Array<!proto.vega.Order>}
 */
proto.datanode.api.v2.OrderUpdates.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.vega.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.Order, 1));
};


/**
 * @param {!Array<!proto.vega.Order>} value
 * @return {!proto.datanode.api.v2.OrderUpdates} returns this
*/
proto.datanode.api.v2.OrderUpdates.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.Order}
 */
proto.datanode.api.v2.OrderUpdates.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.OrderUpdates} returns this
 */
proto.datanode.api.v2.OrderUpdates.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListPositionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListPositionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListPositionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListPositionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListPositionsRequest}
 */
proto.datanode.api.v2.ListPositionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListPositionsRequest;
  return proto.datanode.api.v2.ListPositionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListPositionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListPositionsRequest}
 */
proto.datanode.api.v2.ListPositionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListPositionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListPositionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListPositionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListPositionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListPositionsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListPositionsRequest} returns this
 */
proto.datanode.api.v2.ListPositionsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListPositionsRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListPositionsRequest} returns this
 */
proto.datanode.api.v2.ListPositionsRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListPositionsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 3));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListPositionsRequest} returns this
*/
proto.datanode.api.v2.ListPositionsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListPositionsRequest} returns this
 */
proto.datanode.api.v2.ListPositionsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListPositionsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListPositionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListPositionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListPositionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListPositionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    positions: (f = msg.getPositions()) && proto.datanode.api.v2.PositionConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListPositionsResponse}
 */
proto.datanode.api.v2.ListPositionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListPositionsResponse;
  return proto.datanode.api.v2.ListPositionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListPositionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListPositionsResponse}
 */
proto.datanode.api.v2.ListPositionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.PositionConnection;
      reader.readMessage(value,proto.datanode.api.v2.PositionConnection.deserializeBinaryFromReader);
      msg.setPositions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListPositionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListPositionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListPositionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListPositionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.PositionConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional PositionConnection positions = 1;
 * @return {?proto.datanode.api.v2.PositionConnection}
 */
proto.datanode.api.v2.ListPositionsResponse.prototype.getPositions = function() {
  return /** @type{?proto.datanode.api.v2.PositionConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PositionConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.PositionConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListPositionsResponse} returns this
*/
proto.datanode.api.v2.ListPositionsResponse.prototype.setPositions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListPositionsResponse} returns this
 */
proto.datanode.api.v2.ListPositionsResponse.prototype.clearPositions = function() {
  return this.setPositions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListPositionsResponse.prototype.hasPositions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.PositionEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.PositionEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.PositionEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PositionEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.Position.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.PositionEdge}
 */
proto.datanode.api.v2.PositionEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.PositionEdge;
  return proto.datanode.api.v2.PositionEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.PositionEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.PositionEdge}
 */
proto.datanode.api.v2.PositionEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Position;
      reader.readMessage(value,vega_vega_pb.Position.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.PositionEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.PositionEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.PositionEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PositionEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Position.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Position node = 1;
 * @return {?proto.vega.Position}
 */
proto.datanode.api.v2.PositionEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Position} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Position, 1));
};


/**
 * @param {?proto.vega.Position|undefined} value
 * @return {!proto.datanode.api.v2.PositionEdge} returns this
*/
proto.datanode.api.v2.PositionEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.PositionEdge} returns this
 */
proto.datanode.api.v2.PositionEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.PositionEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.PositionEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.PositionEdge} returns this
 */
proto.datanode.api.v2.PositionEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.PositionConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.PositionConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.PositionConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.PositionConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PositionConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.PositionEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.PositionConnection}
 */
proto.datanode.api.v2.PositionConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.PositionConnection;
  return proto.datanode.api.v2.PositionConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.PositionConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.PositionConnection}
 */
proto.datanode.api.v2.PositionConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.PositionEdge;
      reader.readMessage(value,proto.datanode.api.v2.PositionEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.PositionConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.PositionConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.PositionConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PositionConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.PositionEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PositionEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.PositionEdge>}
 */
proto.datanode.api.v2.PositionConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.PositionEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.PositionEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.PositionEdge>} value
 * @return {!proto.datanode.api.v2.PositionConnection} returns this
*/
proto.datanode.api.v2.PositionConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.PositionEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.PositionEdge}
 */
proto.datanode.api.v2.PositionConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.PositionEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.PositionConnection} returns this
 */
proto.datanode.api.v2.PositionConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.PositionConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.PositionConnection} returns this
*/
proto.datanode.api.v2.PositionConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.PositionConnection} returns this
 */
proto.datanode.api.v2.PositionConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.PositionConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObservePositionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObservePositionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObservePositionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObservePositionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObservePositionsRequest}
 */
proto.datanode.api.v2.ObservePositionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObservePositionsRequest;
  return proto.datanode.api.v2.ObservePositionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObservePositionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObservePositionsRequest}
 */
proto.datanode.api.v2.ObservePositionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObservePositionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObservePositionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObservePositionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObservePositionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ObservePositionsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObservePositionsRequest} returns this
 */
proto.datanode.api.v2.ObservePositionsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObservePositionsRequest} returns this
 */
proto.datanode.api.v2.ObservePositionsRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObservePositionsRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ObservePositionsRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObservePositionsRequest} returns this
 */
proto.datanode.api.v2.ObservePositionsRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObservePositionsRequest} returns this
 */
proto.datanode.api.v2.ObservePositionsRequest.prototype.clearMarketId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObservePositionsRequest.prototype.hasMarketId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.datanode.api.v2.ObservePositionsResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.datanode.api.v2.ObservePositionsResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  SNAPSHOT: 1,
  UPDATES: 2
};

/**
 * @return {proto.datanode.api.v2.ObservePositionsResponse.ResponseCase}
 */
proto.datanode.api.v2.ObservePositionsResponse.prototype.getResponseCase = function() {
  return /** @type {proto.datanode.api.v2.ObservePositionsResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.datanode.api.v2.ObservePositionsResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObservePositionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObservePositionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObservePositionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObservePositionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshot: (f = msg.getSnapshot()) && proto.datanode.api.v2.PositionSnapshotPage.toObject(includeInstance, f),
    updates: (f = msg.getUpdates()) && proto.datanode.api.v2.PositionUpdates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObservePositionsResponse}
 */
proto.datanode.api.v2.ObservePositionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObservePositionsResponse;
  return proto.datanode.api.v2.ObservePositionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObservePositionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObservePositionsResponse}
 */
proto.datanode.api.v2.ObservePositionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.PositionSnapshotPage;
      reader.readMessage(value,proto.datanode.api.v2.PositionSnapshotPage.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PositionUpdates;
      reader.readMessage(value,proto.datanode.api.v2.PositionUpdates.deserializeBinaryFromReader);
      msg.setUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObservePositionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObservePositionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObservePositionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObservePositionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.PositionSnapshotPage.serializeBinaryToWriter
    );
  }
  f = message.getUpdates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PositionUpdates.serializeBinaryToWriter
    );
  }
};


/**
 * optional PositionSnapshotPage snapshot = 1;
 * @return {?proto.datanode.api.v2.PositionSnapshotPage}
 */
proto.datanode.api.v2.ObservePositionsResponse.prototype.getSnapshot = function() {
  return /** @type{?proto.datanode.api.v2.PositionSnapshotPage} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PositionSnapshotPage, 1));
};


/**
 * @param {?proto.datanode.api.v2.PositionSnapshotPage|undefined} value
 * @return {!proto.datanode.api.v2.ObservePositionsResponse} returns this
*/
proto.datanode.api.v2.ObservePositionsResponse.prototype.setSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.datanode.api.v2.ObservePositionsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObservePositionsResponse} returns this
 */
proto.datanode.api.v2.ObservePositionsResponse.prototype.clearSnapshot = function() {
  return this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObservePositionsResponse.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PositionUpdates updates = 2;
 * @return {?proto.datanode.api.v2.PositionUpdates}
 */
proto.datanode.api.v2.ObservePositionsResponse.prototype.getUpdates = function() {
  return /** @type{?proto.datanode.api.v2.PositionUpdates} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PositionUpdates, 2));
};


/**
 * @param {?proto.datanode.api.v2.PositionUpdates|undefined} value
 * @return {!proto.datanode.api.v2.ObservePositionsResponse} returns this
*/
proto.datanode.api.v2.ObservePositionsResponse.prototype.setUpdates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.datanode.api.v2.ObservePositionsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObservePositionsResponse} returns this
 */
proto.datanode.api.v2.ObservePositionsResponse.prototype.clearUpdates = function() {
  return this.setUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObservePositionsResponse.prototype.hasUpdates = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.PositionSnapshotPage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.PositionSnapshotPage.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.PositionSnapshotPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.PositionSnapshotPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PositionSnapshotPage.toObject = function(includeInstance, msg) {
  var f, obj = {
    positionsList: jspb.Message.toObjectList(msg.getPositionsList(),
    vega_vega_pb.Position.toObject, includeInstance),
    lastPage: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.PositionSnapshotPage}
 */
proto.datanode.api.v2.PositionSnapshotPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.PositionSnapshotPage;
  return proto.datanode.api.v2.PositionSnapshotPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.PositionSnapshotPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.PositionSnapshotPage}
 */
proto.datanode.api.v2.PositionSnapshotPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Position;
      reader.readMessage(value,vega_vega_pb.Position.deserializeBinaryFromReader);
      msg.addPositions(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLastPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.PositionSnapshotPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.PositionSnapshotPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.PositionSnapshotPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PositionSnapshotPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.Position.serializeBinaryToWriter
    );
  }
  f = message.getLastPage();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated vega.Position positions = 1;
 * @return {!Array<!proto.vega.Position>}
 */
proto.datanode.api.v2.PositionSnapshotPage.prototype.getPositionsList = function() {
  return /** @type{!Array<!proto.vega.Position>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.Position, 1));
};


/**
 * @param {!Array<!proto.vega.Position>} value
 * @return {!proto.datanode.api.v2.PositionSnapshotPage} returns this
*/
proto.datanode.api.v2.PositionSnapshotPage.prototype.setPositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.Position=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.Position}
 */
proto.datanode.api.v2.PositionSnapshotPage.prototype.addPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.Position, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.PositionSnapshotPage} returns this
 */
proto.datanode.api.v2.PositionSnapshotPage.prototype.clearPositionsList = function() {
  return this.setPositionsList([]);
};


/**
 * optional bool last_page = 2;
 * @return {boolean}
 */
proto.datanode.api.v2.PositionSnapshotPage.prototype.getLastPage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.PositionSnapshotPage} returns this
 */
proto.datanode.api.v2.PositionSnapshotPage.prototype.setLastPage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.PositionUpdates.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.PositionUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.PositionUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.PositionUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PositionUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {
    positionsList: jspb.Message.toObjectList(msg.getPositionsList(),
    vega_vega_pb.Position.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.PositionUpdates}
 */
proto.datanode.api.v2.PositionUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.PositionUpdates;
  return proto.datanode.api.v2.PositionUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.PositionUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.PositionUpdates}
 */
proto.datanode.api.v2.PositionUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Position;
      reader.readMessage(value,vega_vega_pb.Position.deserializeBinaryFromReader);
      msg.addPositions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.PositionUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.PositionUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.PositionUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PositionUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.Position.serializeBinaryToWriter
    );
  }
};


/**
 * repeated vega.Position positions = 1;
 * @return {!Array<!proto.vega.Position>}
 */
proto.datanode.api.v2.PositionUpdates.prototype.getPositionsList = function() {
  return /** @type{!Array<!proto.vega.Position>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.Position, 1));
};


/**
 * @param {!Array<!proto.vega.Position>} value
 * @return {!proto.datanode.api.v2.PositionUpdates} returns this
*/
proto.datanode.api.v2.PositionUpdates.prototype.setPositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.Position=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.Position}
 */
proto.datanode.api.v2.PositionUpdates.prototype.addPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.Position, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.PositionUpdates} returns this
 */
proto.datanode.api.v2.PositionUpdates.prototype.clearPositionsList = function() {
  return this.setPositionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.LedgerEntryFilter.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.LedgerEntryFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.LedgerEntryFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.LedgerEntryFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    closeOnAccountFilters: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    fromAccountFilter: (f = msg.getFromAccountFilter()) && proto.datanode.api.v2.AccountFilter.toObject(includeInstance, f),
    toAccountFilter: (f = msg.getToAccountFilter()) && proto.datanode.api.v2.AccountFilter.toObject(includeInstance, f),
    transferTypesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.LedgerEntryFilter}
 */
proto.datanode.api.v2.LedgerEntryFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.LedgerEntryFilter;
  return proto.datanode.api.v2.LedgerEntryFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.LedgerEntryFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.LedgerEntryFilter}
 */
proto.datanode.api.v2.LedgerEntryFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCloseOnAccountFilters(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.AccountFilter;
      reader.readMessage(value,proto.datanode.api.v2.AccountFilter.deserializeBinaryFromReader);
      msg.setFromAccountFilter(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.AccountFilter;
      reader.readMessage(value,proto.datanode.api.v2.AccountFilter.deserializeBinaryFromReader);
      msg.setToAccountFilter(value);
      break;
    case 5:
      var values = /** @type {!Array<!proto.vega.TransferType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTransferTypes(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.LedgerEntryFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.LedgerEntryFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.LedgerEntryFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCloseOnAccountFilters();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getFromAccountFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.AccountFilter.serializeBinaryToWriter
    );
  }
  f = message.getToAccountFilter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.AccountFilter.serializeBinaryToWriter
    );
  }
  f = message.getTransferTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
};


/**
 * optional bool close_on_account_filters = 1;
 * @return {boolean}
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.getCloseOnAccountFilters = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.LedgerEntryFilter} returns this
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.setCloseOnAccountFilters = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional AccountFilter from_account_filter = 2;
 * @return {?proto.datanode.api.v2.AccountFilter}
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.getFromAccountFilter = function() {
  return /** @type{?proto.datanode.api.v2.AccountFilter} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AccountFilter, 2));
};


/**
 * @param {?proto.datanode.api.v2.AccountFilter|undefined} value
 * @return {!proto.datanode.api.v2.LedgerEntryFilter} returns this
*/
proto.datanode.api.v2.LedgerEntryFilter.prototype.setFromAccountFilter = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.LedgerEntryFilter} returns this
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.clearFromAccountFilter = function() {
  return this.setFromAccountFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.hasFromAccountFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AccountFilter to_account_filter = 3;
 * @return {?proto.datanode.api.v2.AccountFilter}
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.getToAccountFilter = function() {
  return /** @type{?proto.datanode.api.v2.AccountFilter} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AccountFilter, 3));
};


/**
 * @param {?proto.datanode.api.v2.AccountFilter|undefined} value
 * @return {!proto.datanode.api.v2.LedgerEntryFilter} returns this
*/
proto.datanode.api.v2.LedgerEntryFilter.prototype.setToAccountFilter = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.LedgerEntryFilter} returns this
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.clearToAccountFilter = function() {
  return this.setToAccountFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.hasToAccountFilter = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated vega.TransferType transfer_types = 5;
 * @return {!Array<!proto.vega.TransferType>}
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.getTransferTypesList = function() {
  return /** @type {!Array<!proto.vega.TransferType>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.vega.TransferType>} value
 * @return {!proto.datanode.api.v2.LedgerEntryFilter} returns this
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.setTransferTypesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.vega.TransferType} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.LedgerEntryFilter} returns this
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.addTransferTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.LedgerEntryFilter} returns this
 */
proto.datanode.api.v2.LedgerEntryFilter.prototype.clearTransferTypesList = function() {
  return this.setTransferTypesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AggregatedLedgerEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AggregatedLedgerEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedLedgerEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    quantity: jspb.Message.getFieldWithDefault(msg, 3, ""),
    transferType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    assetId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fromAccountType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    toAccountType: jspb.Message.getFieldWithDefault(msg, 7, 0),
    fromAccountPartyId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    toAccountPartyId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    fromAccountMarketId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    toAccountMarketId: jspb.Message.getFieldWithDefault(msg, 11, ""),
    fromAccountBalance: jspb.Message.getFieldWithDefault(msg, 12, ""),
    toAccountBalance: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AggregatedLedgerEntry;
  return proto.datanode.api.v2.AggregatedLedgerEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AggregatedLedgerEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuantity(value);
      break;
    case 4:
      var value = /** @type {!proto.vega.TransferType} */ (reader.readEnum());
      msg.setTransferType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 6:
      var value = /** @type {!proto.vega.AccountType} */ (reader.readEnum());
      msg.setFromAccountType(value);
      break;
    case 7:
      var value = /** @type {!proto.vega.AccountType} */ (reader.readEnum());
      msg.setToAccountType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromAccountPartyId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setToAccountPartyId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromAccountMarketId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setToAccountMarketId(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromAccountBalance(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setToAccountBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AggregatedLedgerEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AggregatedLedgerEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedLedgerEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getQuantity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTransferType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFromAccountType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getToAccountType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getFromAccountBalance();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getToAccountBalance();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional int64 timestamp = 2;
 * @return {number}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string quantity = 3;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getQuantity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional vega.TransferType transfer_type = 4;
 * @return {!proto.vega.TransferType}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getTransferType = function() {
  return /** @type {!proto.vega.TransferType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.vega.TransferType} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setTransferType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string asset_id = 5;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setAssetId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.clearAssetId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.hasAssetId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional vega.AccountType from_account_type = 6;
 * @return {!proto.vega.AccountType}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getFromAccountType = function() {
  return /** @type {!proto.vega.AccountType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.vega.AccountType} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setFromAccountType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional vega.AccountType to_account_type = 7;
 * @return {!proto.vega.AccountType}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getToAccountType = function() {
  return /** @type {!proto.vega.AccountType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.vega.AccountType} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setToAccountType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string from_account_party_id = 8;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getFromAccountPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setFromAccountPartyId = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.clearFromAccountPartyId = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.hasFromAccountPartyId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string to_account_party_id = 9;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getToAccountPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setToAccountPartyId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.clearToAccountPartyId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.hasToAccountPartyId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string from_account_market_id = 10;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getFromAccountMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setFromAccountMarketId = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.clearFromAccountMarketId = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.hasFromAccountMarketId = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string to_account_market_id = 11;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getToAccountMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setToAccountMarketId = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.clearToAccountMarketId = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.hasToAccountMarketId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string from_account_balance = 12;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getFromAccountBalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setFromAccountBalance = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string to_account_balance = 13;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.getToAccountBalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntry} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntry.prototype.setToAccountBalance = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListLedgerEntriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListLedgerEntriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.datanode.api.v2.LedgerEntryFilter.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f),
    dateRange: (f = msg.getDateRange()) && proto.datanode.api.v2.DateRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListLedgerEntriesRequest}
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListLedgerEntriesRequest;
  return proto.datanode.api.v2.ListLedgerEntriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListLedgerEntriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListLedgerEntriesRequest}
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.LedgerEntryFilter;
      reader.readMessage(value,proto.datanode.api.v2.LedgerEntryFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.DateRange;
      reader.readMessage(value,proto.datanode.api.v2.DateRange.deserializeBinaryFromReader);
      msg.setDateRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListLedgerEntriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListLedgerEntriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.LedgerEntryFilter.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getDateRange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.DateRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional LedgerEntryFilter filter = 1;
 * @return {?proto.datanode.api.v2.LedgerEntryFilter}
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.getFilter = function() {
  return /** @type{?proto.datanode.api.v2.LedgerEntryFilter} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.LedgerEntryFilter, 1));
};


/**
 * @param {?proto.datanode.api.v2.LedgerEntryFilter|undefined} value
 * @return {!proto.datanode.api.v2.ListLedgerEntriesRequest} returns this
*/
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListLedgerEntriesRequest} returns this
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListLedgerEntriesRequest} returns this
*/
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListLedgerEntriesRequest} returns this
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DateRange date_range = 3;
 * @return {?proto.datanode.api.v2.DateRange}
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.getDateRange = function() {
  return /** @type{?proto.datanode.api.v2.DateRange} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.DateRange, 3));
};


/**
 * @param {?proto.datanode.api.v2.DateRange|undefined} value
 * @return {!proto.datanode.api.v2.ListLedgerEntriesRequest} returns this
*/
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.setDateRange = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListLedgerEntriesRequest} returns this
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.clearDateRange = function() {
  return this.setDateRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListLedgerEntriesRequest.prototype.hasDateRange = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ExportLedgerEntriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ExportLedgerEntriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    assetId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f),
    dateRange: (f = msg.getDateRange()) && proto.datanode.api.v2.DateRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesRequest}
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ExportLedgerEntriesRequest;
  return proto.datanode.api.v2.ExportLedgerEntriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ExportLedgerEntriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesRequest}
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 4:
      var value = new proto.datanode.api.v2.DateRange;
      reader.readMessage(value,proto.datanode.api.v2.DateRange.deserializeBinaryFromReader);
      msg.setDateRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ExportLedgerEntriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ExportLedgerEntriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getDateRange();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.datanode.api.v2.DateRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesRequest} returns this
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string asset_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesRequest} returns this
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 3));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesRequest} returns this
*/
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesRequest} returns this
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DateRange date_range = 4;
 * @return {?proto.datanode.api.v2.DateRange}
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.getDateRange = function() {
  return /** @type{?proto.datanode.api.v2.DateRange} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.DateRange, 4));
};


/**
 * @param {?proto.datanode.api.v2.DateRange|undefined} value
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesRequest} returns this
*/
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.setDateRange = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesRequest} returns this
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.clearDateRange = function() {
  return this.setDateRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ExportLedgerEntriesRequest.prototype.hasDateRange = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListLedgerEntriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListLedgerEntriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListLedgerEntriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLedgerEntriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ledgerEntries: (f = msg.getLedgerEntries()) && proto.datanode.api.v2.AggregatedLedgerEntriesConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListLedgerEntriesResponse}
 */
proto.datanode.api.v2.ListLedgerEntriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListLedgerEntriesResponse;
  return proto.datanode.api.v2.ListLedgerEntriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListLedgerEntriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListLedgerEntriesResponse}
 */
proto.datanode.api.v2.ListLedgerEntriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AggregatedLedgerEntriesConnection;
      reader.readMessage(value,proto.datanode.api.v2.AggregatedLedgerEntriesConnection.deserializeBinaryFromReader);
      msg.setLedgerEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListLedgerEntriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListLedgerEntriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListLedgerEntriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLedgerEntriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLedgerEntries();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AggregatedLedgerEntriesConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional AggregatedLedgerEntriesConnection ledger_entries = 1;
 * @return {?proto.datanode.api.v2.AggregatedLedgerEntriesConnection}
 */
proto.datanode.api.v2.ListLedgerEntriesResponse.prototype.getLedgerEntries = function() {
  return /** @type{?proto.datanode.api.v2.AggregatedLedgerEntriesConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AggregatedLedgerEntriesConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.AggregatedLedgerEntriesConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListLedgerEntriesResponse} returns this
*/
proto.datanode.api.v2.ListLedgerEntriesResponse.prototype.setLedgerEntries = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListLedgerEntriesResponse} returns this
 */
proto.datanode.api.v2.ListLedgerEntriesResponse.prototype.clearLedgerEntries = function() {
  return this.setLedgerEntries(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListLedgerEntriesResponse.prototype.hasLedgerEntries = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ExportLedgerEntriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ExportLedgerEntriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesResponse}
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ExportLedgerEntriesResponse;
  return proto.datanode.api.v2.ExportLedgerEntriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ExportLedgerEntriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesResponse}
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ExportLedgerEntriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ExportLedgerEntriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesResponse} returns this
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesResponse} returns this
*/
proto.datanode.api.v2.ExportLedgerEntriesResponse.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ExportLedgerEntriesResponse} returns this
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ExportLedgerEntriesResponse.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AggregatedLedgerEntriesEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AggregatedLedgerEntriesEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.datanode.api.v2.AggregatedLedgerEntry.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesEdge}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AggregatedLedgerEntriesEdge;
  return proto.datanode.api.v2.AggregatedLedgerEntriesEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AggregatedLedgerEntriesEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesEdge}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AggregatedLedgerEntry;
      reader.readMessage(value,proto.datanode.api.v2.AggregatedLedgerEntry.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AggregatedLedgerEntriesEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AggregatedLedgerEntriesEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AggregatedLedgerEntry.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional AggregatedLedgerEntry node = 1;
 * @return {?proto.datanode.api.v2.AggregatedLedgerEntry}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.prototype.getNode = function() {
  return /** @type{?proto.datanode.api.v2.AggregatedLedgerEntry} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AggregatedLedgerEntry, 1));
};


/**
 * @param {?proto.datanode.api.v2.AggregatedLedgerEntry|undefined} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesEdge} returns this
*/
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesEdge} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesEdge} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntriesEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AggregatedLedgerEntriesConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AggregatedLedgerEntriesConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.AggregatedLedgerEntriesEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesConnection}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AggregatedLedgerEntriesConnection;
  return proto.datanode.api.v2.AggregatedLedgerEntriesConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AggregatedLedgerEntriesConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesConnection}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AggregatedLedgerEntriesEdge;
      reader.readMessage(value,proto.datanode.api.v2.AggregatedLedgerEntriesEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AggregatedLedgerEntriesConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AggregatedLedgerEntriesConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.AggregatedLedgerEntriesEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AggregatedLedgerEntriesEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.AggregatedLedgerEntriesEdge>}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.AggregatedLedgerEntriesEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.AggregatedLedgerEntriesEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.AggregatedLedgerEntriesEdge>} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesConnection} returns this
*/
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.AggregatedLedgerEntriesEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesEdge}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.AggregatedLedgerEntriesEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesConnection} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesConnection} returns this
*/
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedLedgerEntriesConnection} returns this
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedLedgerEntriesConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListBalanceChangesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListBalanceChangesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListBalanceChangesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.datanode.api.v2.AccountFilter.toObject(includeInstance, f),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f),
    dateRange: (f = msg.getDateRange()) && proto.datanode.api.v2.DateRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListBalanceChangesRequest}
 */
proto.datanode.api.v2.ListBalanceChangesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListBalanceChangesRequest;
  return proto.datanode.api.v2.ListBalanceChangesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListBalanceChangesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListBalanceChangesRequest}
 */
proto.datanode.api.v2.ListBalanceChangesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AccountFilter;
      reader.readMessage(value,proto.datanode.api.v2.AccountFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 5:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 6:
      var value = new proto.datanode.api.v2.DateRange;
      reader.readMessage(value,proto.datanode.api.v2.DateRange.deserializeBinaryFromReader);
      msg.setDateRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListBalanceChangesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListBalanceChangesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListBalanceChangesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AccountFilter.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getDateRange();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.datanode.api.v2.DateRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountFilter filter = 1;
 * @return {?proto.datanode.api.v2.AccountFilter}
 */
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.getFilter = function() {
  return /** @type{?proto.datanode.api.v2.AccountFilter} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AccountFilter, 1));
};


/**
 * @param {?proto.datanode.api.v2.AccountFilter|undefined} value
 * @return {!proto.datanode.api.v2.ListBalanceChangesRequest} returns this
*/
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListBalanceChangesRequest} returns this
 */
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Pagination pagination = 5;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 5));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListBalanceChangesRequest} returns this
*/
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListBalanceChangesRequest} returns this
 */
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DateRange date_range = 6;
 * @return {?proto.datanode.api.v2.DateRange}
 */
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.getDateRange = function() {
  return /** @type{?proto.datanode.api.v2.DateRange} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.DateRange, 6));
};


/**
 * @param {?proto.datanode.api.v2.DateRange|undefined} value
 * @return {!proto.datanode.api.v2.ListBalanceChangesRequest} returns this
*/
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.setDateRange = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListBalanceChangesRequest} returns this
 */
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.clearDateRange = function() {
  return this.setDateRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListBalanceChangesRequest.prototype.hasDateRange = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListBalanceChangesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListBalanceChangesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListBalanceChangesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListBalanceChangesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    balances: (f = msg.getBalances()) && proto.datanode.api.v2.AggregatedBalanceConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListBalanceChangesResponse}
 */
proto.datanode.api.v2.ListBalanceChangesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListBalanceChangesResponse;
  return proto.datanode.api.v2.ListBalanceChangesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListBalanceChangesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListBalanceChangesResponse}
 */
proto.datanode.api.v2.ListBalanceChangesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AggregatedBalanceConnection;
      reader.readMessage(value,proto.datanode.api.v2.AggregatedBalanceConnection.deserializeBinaryFromReader);
      msg.setBalances(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListBalanceChangesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListBalanceChangesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListBalanceChangesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListBalanceChangesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalances();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AggregatedBalanceConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional AggregatedBalanceConnection balances = 1;
 * @return {?proto.datanode.api.v2.AggregatedBalanceConnection}
 */
proto.datanode.api.v2.ListBalanceChangesResponse.prototype.getBalances = function() {
  return /** @type{?proto.datanode.api.v2.AggregatedBalanceConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AggregatedBalanceConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.AggregatedBalanceConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListBalanceChangesResponse} returns this
*/
proto.datanode.api.v2.ListBalanceChangesResponse.prototype.setBalances = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListBalanceChangesResponse} returns this
 */
proto.datanode.api.v2.ListBalanceChangesResponse.prototype.clearBalances = function() {
  return this.setBalances(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListBalanceChangesResponse.prototype.hasBalances = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetBalanceHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetBalanceHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.datanode.api.v2.AccountFilter.toObject(includeInstance, f),
    groupByList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f),
    dateRange: (f = msg.getDateRange()) && proto.datanode.api.v2.DateRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetBalanceHistoryRequest}
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetBalanceHistoryRequest;
  return proto.datanode.api.v2.GetBalanceHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetBalanceHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetBalanceHistoryRequest}
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AccountFilter;
      reader.readMessage(value,proto.datanode.api.v2.AccountFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.datanode.api.v2.AccountField>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addGroupBy(values[i]);
      }
      break;
    case 3:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 4:
      var value = new proto.datanode.api.v2.DateRange;
      reader.readMessage(value,proto.datanode.api.v2.DateRange.deserializeBinaryFromReader);
      msg.setDateRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetBalanceHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetBalanceHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AccountFilter.serializeBinaryToWriter
    );
  }
  f = message.getGroupByList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getDateRange();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.datanode.api.v2.DateRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountFilter filter = 1;
 * @return {?proto.datanode.api.v2.AccountFilter}
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.getFilter = function() {
  return /** @type{?proto.datanode.api.v2.AccountFilter} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AccountFilter, 1));
};


/**
 * @param {?proto.datanode.api.v2.AccountFilter|undefined} value
 * @return {!proto.datanode.api.v2.GetBalanceHistoryRequest} returns this
*/
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetBalanceHistoryRequest} returns this
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated AccountField group_by = 2;
 * @return {!Array<!proto.datanode.api.v2.AccountField>}
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.getGroupByList = function() {
  return /** @type {!Array<!proto.datanode.api.v2.AccountField>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.datanode.api.v2.AccountField>} value
 * @return {!proto.datanode.api.v2.GetBalanceHistoryRequest} returns this
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.setGroupByList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.datanode.api.v2.AccountField} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.GetBalanceHistoryRequest} returns this
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.addGroupBy = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.GetBalanceHistoryRequest} returns this
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.clearGroupByList = function() {
  return this.setGroupByList([]);
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 3));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.GetBalanceHistoryRequest} returns this
*/
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetBalanceHistoryRequest} returns this
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DateRange date_range = 4;
 * @return {?proto.datanode.api.v2.DateRange}
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.getDateRange = function() {
  return /** @type{?proto.datanode.api.v2.DateRange} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.DateRange, 4));
};


/**
 * @param {?proto.datanode.api.v2.DateRange|undefined} value
 * @return {!proto.datanode.api.v2.GetBalanceHistoryRequest} returns this
*/
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.setDateRange = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetBalanceHistoryRequest} returns this
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.clearDateRange = function() {
  return this.setDateRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetBalanceHistoryRequest.prototype.hasDateRange = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetBalanceHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetBalanceHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetBalanceHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetBalanceHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    balances: (f = msg.getBalances()) && proto.datanode.api.v2.AggregatedBalanceConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetBalanceHistoryResponse}
 */
proto.datanode.api.v2.GetBalanceHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetBalanceHistoryResponse;
  return proto.datanode.api.v2.GetBalanceHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetBalanceHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetBalanceHistoryResponse}
 */
proto.datanode.api.v2.GetBalanceHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AggregatedBalanceConnection;
      reader.readMessage(value,proto.datanode.api.v2.AggregatedBalanceConnection.deserializeBinaryFromReader);
      msg.setBalances(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetBalanceHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetBalanceHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetBalanceHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetBalanceHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalances();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AggregatedBalanceConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional AggregatedBalanceConnection balances = 1;
 * @return {?proto.datanode.api.v2.AggregatedBalanceConnection}
 */
proto.datanode.api.v2.GetBalanceHistoryResponse.prototype.getBalances = function() {
  return /** @type{?proto.datanode.api.v2.AggregatedBalanceConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AggregatedBalanceConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.AggregatedBalanceConnection|undefined} value
 * @return {!proto.datanode.api.v2.GetBalanceHistoryResponse} returns this
*/
proto.datanode.api.v2.GetBalanceHistoryResponse.prototype.setBalances = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetBalanceHistoryResponse} returns this
 */
proto.datanode.api.v2.GetBalanceHistoryResponse.prototype.clearBalances = function() {
  return this.setBalances(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetBalanceHistoryResponse.prototype.hasBalances = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AggregatedBalanceEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AggregatedBalanceEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AggregatedBalanceEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedBalanceEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.datanode.api.v2.AggregatedBalance.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AggregatedBalanceEdge}
 */
proto.datanode.api.v2.AggregatedBalanceEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AggregatedBalanceEdge;
  return proto.datanode.api.v2.AggregatedBalanceEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AggregatedBalanceEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AggregatedBalanceEdge}
 */
proto.datanode.api.v2.AggregatedBalanceEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AggregatedBalance;
      reader.readMessage(value,proto.datanode.api.v2.AggregatedBalance.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AggregatedBalanceEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AggregatedBalanceEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AggregatedBalanceEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedBalanceEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AggregatedBalance.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional AggregatedBalance node = 1;
 * @return {?proto.datanode.api.v2.AggregatedBalance}
 */
proto.datanode.api.v2.AggregatedBalanceEdge.prototype.getNode = function() {
  return /** @type{?proto.datanode.api.v2.AggregatedBalance} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AggregatedBalance, 1));
};


/**
 * @param {?proto.datanode.api.v2.AggregatedBalance|undefined} value
 * @return {!proto.datanode.api.v2.AggregatedBalanceEdge} returns this
*/
proto.datanode.api.v2.AggregatedBalanceEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedBalanceEdge} returns this
 */
proto.datanode.api.v2.AggregatedBalanceEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedBalanceEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedBalanceEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedBalanceEdge} returns this
 */
proto.datanode.api.v2.AggregatedBalanceEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.AggregatedBalanceConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AggregatedBalanceConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AggregatedBalanceConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AggregatedBalanceConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedBalanceConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.AggregatedBalanceEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AggregatedBalanceConnection}
 */
proto.datanode.api.v2.AggregatedBalanceConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AggregatedBalanceConnection;
  return proto.datanode.api.v2.AggregatedBalanceConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AggregatedBalanceConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AggregatedBalanceConnection}
 */
proto.datanode.api.v2.AggregatedBalanceConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AggregatedBalanceEdge;
      reader.readMessage(value,proto.datanode.api.v2.AggregatedBalanceEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AggregatedBalanceConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AggregatedBalanceConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AggregatedBalanceConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedBalanceConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.AggregatedBalanceEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AggregatedBalanceEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.AggregatedBalanceEdge>}
 */
proto.datanode.api.v2.AggregatedBalanceConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.AggregatedBalanceEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.AggregatedBalanceEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.AggregatedBalanceEdge>} value
 * @return {!proto.datanode.api.v2.AggregatedBalanceConnection} returns this
*/
proto.datanode.api.v2.AggregatedBalanceConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.AggregatedBalanceEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.AggregatedBalanceEdge}
 */
proto.datanode.api.v2.AggregatedBalanceConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.AggregatedBalanceEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.AggregatedBalanceConnection} returns this
 */
proto.datanode.api.v2.AggregatedBalanceConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.AggregatedBalanceConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.AggregatedBalanceConnection} returns this
*/
proto.datanode.api.v2.AggregatedBalanceConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedBalanceConnection} returns this
 */
proto.datanode.api.v2.AggregatedBalanceConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedBalanceConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.AccountFilter.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AccountFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AccountFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AccountFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partyIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    marketIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    accountTypesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AccountFilter}
 */
proto.datanode.api.v2.AccountFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AccountFilter;
  return proto.datanode.api.v2.AccountFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AccountFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AccountFilter}
 */
proto.datanode.api.v2.AccountFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPartyIds(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addMarketIds(value);
      break;
    case 4:
      var values = /** @type {!Array<!proto.vega.AccountType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAccountTypes(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AccountFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AccountFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AccountFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AccountFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartyIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getMarketIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getAccountTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.AccountFilter.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AccountFilter} returns this
 */
proto.datanode.api.v2.AccountFilter.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string party_ids = 2;
 * @return {!Array<string>}
 */
proto.datanode.api.v2.AccountFilter.prototype.getPartyIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.datanode.api.v2.AccountFilter} returns this
 */
proto.datanode.api.v2.AccountFilter.prototype.setPartyIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.AccountFilter} returns this
 */
proto.datanode.api.v2.AccountFilter.prototype.addPartyIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.AccountFilter} returns this
 */
proto.datanode.api.v2.AccountFilter.prototype.clearPartyIdsList = function() {
  return this.setPartyIdsList([]);
};


/**
 * repeated string market_ids = 3;
 * @return {!Array<string>}
 */
proto.datanode.api.v2.AccountFilter.prototype.getMarketIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.datanode.api.v2.AccountFilter} returns this
 */
proto.datanode.api.v2.AccountFilter.prototype.setMarketIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.AccountFilter} returns this
 */
proto.datanode.api.v2.AccountFilter.prototype.addMarketIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.AccountFilter} returns this
 */
proto.datanode.api.v2.AccountFilter.prototype.clearMarketIdsList = function() {
  return this.setMarketIdsList([]);
};


/**
 * repeated vega.AccountType account_types = 4;
 * @return {!Array<!proto.vega.AccountType>}
 */
proto.datanode.api.v2.AccountFilter.prototype.getAccountTypesList = function() {
  return /** @type {!Array<!proto.vega.AccountType>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.vega.AccountType>} value
 * @return {!proto.datanode.api.v2.AccountFilter} returns this
 */
proto.datanode.api.v2.AccountFilter.prototype.setAccountTypesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.vega.AccountType} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.AccountFilter} returns this
 */
proto.datanode.api.v2.AccountFilter.prototype.addAccountTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.AccountFilter} returns this
 */
proto.datanode.api.v2.AccountFilter.prototype.clearAccountTypesList = function() {
  return this.setAccountTypesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AggregatedBalance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AggregatedBalance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedBalance.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    balance: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partyId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    assetId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    accountType: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AggregatedBalance}
 */
proto.datanode.api.v2.AggregatedBalance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AggregatedBalance;
  return proto.datanode.api.v2.AggregatedBalance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AggregatedBalance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AggregatedBalance}
 */
proto.datanode.api.v2.AggregatedBalance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBalance(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 7:
      var value = /** @type {!proto.vega.AccountType} */ (reader.readEnum());
      msg.setAccountType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AggregatedBalance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AggregatedBalance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AggregatedBalance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBalance();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {!proto.vega.AccountType} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * optional int64 timestamp = 1;
 * @return {number}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.AggregatedBalance} returns this
 */
proto.datanode.api.v2.AggregatedBalance.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string balance = 2;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.getBalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedBalance} returns this
 */
proto.datanode.api.v2.AggregatedBalance.prototype.setBalance = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string party_id = 4;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedBalance} returns this
 */
proto.datanode.api.v2.AggregatedBalance.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedBalance} returns this
 */
proto.datanode.api.v2.AggregatedBalance.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string asset_id = 5;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedBalance} returns this
 */
proto.datanode.api.v2.AggregatedBalance.prototype.setAssetId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedBalance} returns this
 */
proto.datanode.api.v2.AggregatedBalance.prototype.clearAssetId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.hasAssetId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string market_id = 6;
 * @return {string}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AggregatedBalance} returns this
 */
proto.datanode.api.v2.AggregatedBalance.prototype.setMarketId = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedBalance} returns this
 */
proto.datanode.api.v2.AggregatedBalance.prototype.clearMarketId = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.hasMarketId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional vega.AccountType account_type = 7;
 * @return {!proto.vega.AccountType}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.getAccountType = function() {
  return /** @type {!proto.vega.AccountType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.vega.AccountType} value
 * @return {!proto.datanode.api.v2.AggregatedBalance} returns this
 */
proto.datanode.api.v2.AggregatedBalance.prototype.setAccountType = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.AggregatedBalance} returns this
 */
proto.datanode.api.v2.AggregatedBalance.prototype.clearAccountType = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AggregatedBalance.prototype.hasAccountType = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveMarketsDepthRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthRequest}
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveMarketsDepthRequest;
  return proto.datanode.api.v2.ObserveMarketsDepthRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthRequest}
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMarketIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveMarketsDepthRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string market_ids = 1;
 * @return {!Array<string>}
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest.prototype.getMarketIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthRequest} returns this
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest.prototype.setMarketIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthRequest} returns this
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest.prototype.addMarketIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthRequest} returns this
 */
proto.datanode.api.v2.ObserveMarketsDepthRequest.prototype.clearMarketIdsList = function() {
  return this.setMarketIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ObserveMarketsDepthResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveMarketsDepthResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveMarketsDepthResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDepthResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketDepthList: jspb.Message.toObjectList(msg.getMarketDepthList(),
    vega_vega_pb.MarketDepth.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthResponse}
 */
proto.datanode.api.v2.ObserveMarketsDepthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveMarketsDepthResponse;
  return proto.datanode.api.v2.ObserveMarketsDepthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthResponse}
 */
proto.datanode.api.v2.ObserveMarketsDepthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.MarketDepth;
      reader.readMessage(value,vega_vega_pb.MarketDepth.deserializeBinaryFromReader);
      msg.addMarketDepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveMarketsDepthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveMarketsDepthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDepthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketDepthList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.MarketDepth.serializeBinaryToWriter
    );
  }
};


/**
 * repeated vega.MarketDepth market_depth = 1;
 * @return {!Array<!proto.vega.MarketDepth>}
 */
proto.datanode.api.v2.ObserveMarketsDepthResponse.prototype.getMarketDepthList = function() {
  return /** @type{!Array<!proto.vega.MarketDepth>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.MarketDepth, 1));
};


/**
 * @param {!Array<!proto.vega.MarketDepth>} value
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthResponse} returns this
*/
proto.datanode.api.v2.ObserveMarketsDepthResponse.prototype.setMarketDepthList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.MarketDepth=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.MarketDepth}
 */
proto.datanode.api.v2.ObserveMarketsDepthResponse.prototype.addMarketDepth = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.MarketDepth, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthResponse} returns this
 */
proto.datanode.api.v2.ObserveMarketsDepthResponse.prototype.clearMarketDepthList = function() {
  return this.setMarketDepthList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest}
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest;
  return proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest}
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMarketIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string market_ids = 1;
 * @return {!Array<string>}
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.prototype.getMarketIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest} returns this
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.prototype.setMarketIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest} returns this
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.prototype.addMarketIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest} returns this
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesRequest.prototype.clearMarketIdsList = function() {
  return this.setMarketIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    updateList: jspb.Message.toObjectList(msg.getUpdateList(),
    vega_vega_pb.MarketDepthUpdate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse}
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse;
  return proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse}
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.MarketDepthUpdate;
      reader.readMessage(value,vega_vega_pb.MarketDepthUpdate.deserializeBinaryFromReader);
      msg.addUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.MarketDepthUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated vega.MarketDepthUpdate update = 1;
 * @return {!Array<!proto.vega.MarketDepthUpdate>}
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.prototype.getUpdateList = function() {
  return /** @type{!Array<!proto.vega.MarketDepthUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.MarketDepthUpdate, 1));
};


/**
 * @param {!Array<!proto.vega.MarketDepthUpdate>} value
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse} returns this
*/
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.prototype.setUpdateList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.MarketDepthUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.MarketDepthUpdate}
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.prototype.addUpdate = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.MarketDepthUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse} returns this
 */
proto.datanode.api.v2.ObserveMarketsDepthUpdatesResponse.prototype.clearUpdateList = function() {
  return this.setUpdateList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ObserveMarketsDataRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveMarketsDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveMarketsDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveMarketsDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveMarketsDataRequest}
 */
proto.datanode.api.v2.ObserveMarketsDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveMarketsDataRequest;
  return proto.datanode.api.v2.ObserveMarketsDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveMarketsDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveMarketsDataRequest}
 */
proto.datanode.api.v2.ObserveMarketsDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMarketIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveMarketsDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveMarketsDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveMarketsDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string market_ids = 1;
 * @return {!Array<string>}
 */
proto.datanode.api.v2.ObserveMarketsDataRequest.prototype.getMarketIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.datanode.api.v2.ObserveMarketsDataRequest} returns this
 */
proto.datanode.api.v2.ObserveMarketsDataRequest.prototype.setMarketIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.ObserveMarketsDataRequest} returns this
 */
proto.datanode.api.v2.ObserveMarketsDataRequest.prototype.addMarketIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ObserveMarketsDataRequest} returns this
 */
proto.datanode.api.v2.ObserveMarketsDataRequest.prototype.clearMarketIdsList = function() {
  return this.setMarketIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ObserveMarketsDataResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveMarketsDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveMarketsDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveMarketsDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketDataList: jspb.Message.toObjectList(msg.getMarketDataList(),
    vega_vega_pb.MarketData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveMarketsDataResponse}
 */
proto.datanode.api.v2.ObserveMarketsDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveMarketsDataResponse;
  return proto.datanode.api.v2.ObserveMarketsDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveMarketsDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveMarketsDataResponse}
 */
proto.datanode.api.v2.ObserveMarketsDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.MarketData;
      reader.readMessage(value,vega_vega_pb.MarketData.deserializeBinaryFromReader);
      msg.addMarketData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveMarketsDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveMarketsDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveMarketsDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarketsDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.MarketData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated vega.MarketData market_data = 1;
 * @return {!Array<!proto.vega.MarketData>}
 */
proto.datanode.api.v2.ObserveMarketsDataResponse.prototype.getMarketDataList = function() {
  return /** @type{!Array<!proto.vega.MarketData>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.MarketData, 1));
};


/**
 * @param {!Array<!proto.vega.MarketData>} value
 * @return {!proto.datanode.api.v2.ObserveMarketsDataResponse} returns this
*/
proto.datanode.api.v2.ObserveMarketsDataResponse.prototype.setMarketDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.MarketData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.MarketData}
 */
proto.datanode.api.v2.ObserveMarketsDataResponse.prototype.addMarketData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.MarketData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ObserveMarketsDataResponse} returns this
 */
proto.datanode.api.v2.ObserveMarketsDataResponse.prototype.clearMarketDataList = function() {
  return this.setMarketDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetLatestMarketDepthRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetLatestMarketDepthRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    maxDepth: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthRequest}
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetLatestMarketDepthRequest;
  return proto.datanode.api.v2.GetLatestMarketDepthRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetLatestMarketDepthRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthRequest}
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxDepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetLatestMarketDepthRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetLatestMarketDepthRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthRequest} returns this
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 max_depth = 2;
 * @return {number}
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.prototype.getMaxDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthRequest} returns this
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.prototype.setMaxDepth = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthRequest} returns this
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.prototype.clearMaxDepth = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetLatestMarketDepthRequest.prototype.hasMaxDepth = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetLatestMarketDepthResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetLatestMarketDepthResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    buyList: jspb.Message.toObjectList(msg.getBuyList(),
    vega_vega_pb.PriceLevel.toObject, includeInstance),
    sellList: jspb.Message.toObjectList(msg.getSellList(),
    vega_vega_pb.PriceLevel.toObject, includeInstance),
    lastTrade: (f = msg.getLastTrade()) && vega_vega_pb.Trade.toObject(includeInstance, f),
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthResponse}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetLatestMarketDepthResponse;
  return proto.datanode.api.v2.GetLatestMarketDepthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetLatestMarketDepthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthResponse}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = new vega_vega_pb.PriceLevel;
      reader.readMessage(value,vega_vega_pb.PriceLevel.deserializeBinaryFromReader);
      msg.addBuy(value);
      break;
    case 3:
      var value = new vega_vega_pb.PriceLevel;
      reader.readMessage(value,vega_vega_pb.PriceLevel.deserializeBinaryFromReader);
      msg.addSell(value);
      break;
    case 4:
      var value = new vega_vega_pb.Trade;
      reader.readMessage(value,vega_vega_pb.Trade.deserializeBinaryFromReader);
      msg.setLastTrade(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetLatestMarketDepthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetLatestMarketDepthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBuyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      vega_vega_pb.PriceLevel.serializeBinaryToWriter
    );
  }
  f = message.getSellList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      vega_vega_pb.PriceLevel.serializeBinaryToWriter
    );
  }
  f = message.getLastTrade();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      vega_vega_pb.Trade.serializeBinaryToWriter
    );
  }
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthResponse} returns this
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated vega.PriceLevel buy = 2;
 * @return {!Array<!proto.vega.PriceLevel>}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.getBuyList = function() {
  return /** @type{!Array<!proto.vega.PriceLevel>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.PriceLevel, 2));
};


/**
 * @param {!Array<!proto.vega.PriceLevel>} value
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthResponse} returns this
*/
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.setBuyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.vega.PriceLevel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.PriceLevel}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.addBuy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.vega.PriceLevel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthResponse} returns this
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.clearBuyList = function() {
  return this.setBuyList([]);
};


/**
 * repeated vega.PriceLevel sell = 3;
 * @return {!Array<!proto.vega.PriceLevel>}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.getSellList = function() {
  return /** @type{!Array<!proto.vega.PriceLevel>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.PriceLevel, 3));
};


/**
 * @param {!Array<!proto.vega.PriceLevel>} value
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthResponse} returns this
*/
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.setSellList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.vega.PriceLevel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.PriceLevel}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.addSell = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.vega.PriceLevel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthResponse} returns this
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.clearSellList = function() {
  return this.setSellList([]);
};


/**
 * optional vega.Trade last_trade = 4;
 * @return {?proto.vega.Trade}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.getLastTrade = function() {
  return /** @type{?proto.vega.Trade} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Trade, 4));
};


/**
 * @param {?proto.vega.Trade|undefined} value
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthResponse} returns this
*/
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.setLastTrade = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthResponse} returns this
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.clearLastTrade = function() {
  return this.setLastTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.hasLastTrade = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 sequence_number = 5;
 * @return {number}
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.GetLatestMarketDepthResponse} returns this
 */
proto.datanode.api.v2.GetLatestMarketDepthResponse.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListLatestMarketDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListLatestMarketDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListLatestMarketDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLatestMarketDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListLatestMarketDataRequest}
 */
proto.datanode.api.v2.ListLatestMarketDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListLatestMarketDataRequest;
  return proto.datanode.api.v2.ListLatestMarketDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListLatestMarketDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListLatestMarketDataRequest}
 */
proto.datanode.api.v2.ListLatestMarketDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListLatestMarketDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListLatestMarketDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListLatestMarketDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLatestMarketDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ListLatestMarketDataResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListLatestMarketDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListLatestMarketDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListLatestMarketDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLatestMarketDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketsDataList: jspb.Message.toObjectList(msg.getMarketsDataList(),
    vega_vega_pb.MarketData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListLatestMarketDataResponse}
 */
proto.datanode.api.v2.ListLatestMarketDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListLatestMarketDataResponse;
  return proto.datanode.api.v2.ListLatestMarketDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListLatestMarketDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListLatestMarketDataResponse}
 */
proto.datanode.api.v2.ListLatestMarketDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.MarketData;
      reader.readMessage(value,vega_vega_pb.MarketData.deserializeBinaryFromReader);
      msg.addMarketsData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListLatestMarketDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListLatestMarketDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListLatestMarketDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLatestMarketDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketsDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.MarketData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated vega.MarketData markets_data = 1;
 * @return {!Array<!proto.vega.MarketData>}
 */
proto.datanode.api.v2.ListLatestMarketDataResponse.prototype.getMarketsDataList = function() {
  return /** @type{!Array<!proto.vega.MarketData>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.MarketData, 1));
};


/**
 * @param {!Array<!proto.vega.MarketData>} value
 * @return {!proto.datanode.api.v2.ListLatestMarketDataResponse} returns this
*/
proto.datanode.api.v2.ListLatestMarketDataResponse.prototype.setMarketsDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.MarketData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.MarketData}
 */
proto.datanode.api.v2.ListLatestMarketDataResponse.prototype.addMarketsData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.MarketData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ListLatestMarketDataResponse} returns this
 */
proto.datanode.api.v2.ListLatestMarketDataResponse.prototype.clearMarketsDataList = function() {
  return this.setMarketsDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetLatestMarketDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetLatestMarketDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetLatestMarketDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLatestMarketDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetLatestMarketDataRequest}
 */
proto.datanode.api.v2.GetLatestMarketDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetLatestMarketDataRequest;
  return proto.datanode.api.v2.GetLatestMarketDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetLatestMarketDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetLatestMarketDataRequest}
 */
proto.datanode.api.v2.GetLatestMarketDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetLatestMarketDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetLatestMarketDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetLatestMarketDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLatestMarketDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetLatestMarketDataRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetLatestMarketDataRequest} returns this
 */
proto.datanode.api.v2.GetLatestMarketDataRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetLatestMarketDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetLatestMarketDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetLatestMarketDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLatestMarketDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketData: (f = msg.getMarketData()) && vega_vega_pb.MarketData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetLatestMarketDataResponse}
 */
proto.datanode.api.v2.GetLatestMarketDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetLatestMarketDataResponse;
  return proto.datanode.api.v2.GetLatestMarketDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetLatestMarketDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetLatestMarketDataResponse}
 */
proto.datanode.api.v2.GetLatestMarketDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.MarketData;
      reader.readMessage(value,vega_vega_pb.MarketData.deserializeBinaryFromReader);
      msg.setMarketData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetLatestMarketDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetLatestMarketDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetLatestMarketDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLatestMarketDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.MarketData.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.MarketData market_data = 1;
 * @return {?proto.vega.MarketData}
 */
proto.datanode.api.v2.GetLatestMarketDataResponse.prototype.getMarketData = function() {
  return /** @type{?proto.vega.MarketData} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.MarketData, 1));
};


/**
 * @param {?proto.vega.MarketData|undefined} value
 * @return {!proto.datanode.api.v2.GetLatestMarketDataResponse} returns this
*/
proto.datanode.api.v2.GetLatestMarketDataResponse.prototype.setMarketData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetLatestMarketDataResponse} returns this
 */
proto.datanode.api.v2.GetLatestMarketDataResponse.prototype.clearMarketData = function() {
  return this.setMarketData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetLatestMarketDataResponse.prototype.hasMarketData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    startTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    endTimestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f),
    offsetPagination: (f = msg.getOffsetPagination()) && proto.datanode.api.v2.OffsetPagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetMarketDataHistoryByIDRequest;
  return proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTimestamp(value);
      break;
    case 4:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 5:
      var value = new proto.datanode.api.v2.OffsetPagination;
      reader.readMessage(value,proto.datanode.api.v2.OffsetPagination.deserializeBinaryFromReader);
      msg.setOffsetPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getOffsetPagination();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.datanode.api.v2.OffsetPagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} returns this
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 start_timestamp = 2;
 * @return {number}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.getStartTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} returns this
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.setStartTimestamp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} returns this
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.clearStartTimestamp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.hasStartTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 end_timestamp = 3;
 * @return {number}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.getEndTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} returns this
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.setEndTimestamp = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} returns this
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.clearEndTimestamp = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.hasEndTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Pagination pagination = 4;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 4));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} returns this
*/
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} returns this
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional OffsetPagination offset_pagination = 5;
 * @return {?proto.datanode.api.v2.OffsetPagination}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.getOffsetPagination = function() {
  return /** @type{?proto.datanode.api.v2.OffsetPagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.OffsetPagination, 5));
};


/**
 * @param {?proto.datanode.api.v2.OffsetPagination|undefined} value
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} returns this
*/
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.setOffsetPagination = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDRequest} returns this
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.clearOffsetPagination = function() {
  return this.setOffsetPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDRequest.prototype.hasOffsetPagination = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetMarketDataHistoryByIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketData: (f = msg.getMarketData()) && proto.datanode.api.v2.MarketDataConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDResponse}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetMarketDataHistoryByIDResponse;
  return proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetMarketDataHistoryByIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDResponse}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.MarketDataConnection;
      reader.readMessage(value,proto.datanode.api.v2.MarketDataConnection.deserializeBinaryFromReader);
      msg.setMarketData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetMarketDataHistoryByIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.MarketDataConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional MarketDataConnection market_data = 1;
 * @return {?proto.datanode.api.v2.MarketDataConnection}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.prototype.getMarketData = function() {
  return /** @type{?proto.datanode.api.v2.MarketDataConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.MarketDataConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.MarketDataConnection|undefined} value
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDResponse} returns this
*/
proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.prototype.setMarketData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetMarketDataHistoryByIDResponse} returns this
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.prototype.clearMarketData = function() {
  return this.setMarketData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetMarketDataHistoryByIDResponse.prototype.hasMarketData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.MarketDataEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.MarketDataEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.MarketDataEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketDataEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.MarketData.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.MarketDataEdge}
 */
proto.datanode.api.v2.MarketDataEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.MarketDataEdge;
  return proto.datanode.api.v2.MarketDataEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.MarketDataEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.MarketDataEdge}
 */
proto.datanode.api.v2.MarketDataEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.MarketData;
      reader.readMessage(value,vega_vega_pb.MarketData.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.MarketDataEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.MarketDataEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.MarketDataEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketDataEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.MarketData.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.MarketData node = 1;
 * @return {?proto.vega.MarketData}
 */
proto.datanode.api.v2.MarketDataEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.MarketData} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.MarketData, 1));
};


/**
 * @param {?proto.vega.MarketData|undefined} value
 * @return {!proto.datanode.api.v2.MarketDataEdge} returns this
*/
proto.datanode.api.v2.MarketDataEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.MarketDataEdge} returns this
 */
proto.datanode.api.v2.MarketDataEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.MarketDataEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.MarketDataEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.MarketDataEdge} returns this
 */
proto.datanode.api.v2.MarketDataEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.MarketDataConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.MarketDataConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.MarketDataConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.MarketDataConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketDataConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.MarketDataEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.MarketDataConnection}
 */
proto.datanode.api.v2.MarketDataConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.MarketDataConnection;
  return proto.datanode.api.v2.MarketDataConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.MarketDataConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.MarketDataConnection}
 */
proto.datanode.api.v2.MarketDataConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.MarketDataEdge;
      reader.readMessage(value,proto.datanode.api.v2.MarketDataEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.MarketDataConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.MarketDataConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.MarketDataConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketDataConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.MarketDataEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MarketDataEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.MarketDataEdge>}
 */
proto.datanode.api.v2.MarketDataConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.MarketDataEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.MarketDataEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.MarketDataEdge>} value
 * @return {!proto.datanode.api.v2.MarketDataConnection} returns this
*/
proto.datanode.api.v2.MarketDataConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.MarketDataEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.MarketDataEdge}
 */
proto.datanode.api.v2.MarketDataConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.MarketDataEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.MarketDataConnection} returns this
 */
proto.datanode.api.v2.MarketDataConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.MarketDataConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.MarketDataConnection} returns this
*/
proto.datanode.api.v2.MarketDataConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.MarketDataConnection} returns this
 */
proto.datanode.api.v2.MarketDataConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.MarketDataConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.MarketsDataSubscribeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.MarketsDataSubscribeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.MarketsDataSubscribeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketsDataSubscribeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.MarketsDataSubscribeRequest}
 */
proto.datanode.api.v2.MarketsDataSubscribeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.MarketsDataSubscribeRequest;
  return proto.datanode.api.v2.MarketsDataSubscribeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.MarketsDataSubscribeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.MarketsDataSubscribeRequest}
 */
proto.datanode.api.v2.MarketsDataSubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.MarketsDataSubscribeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.MarketsDataSubscribeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.MarketsDataSubscribeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketsDataSubscribeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.MarketsDataSubscribeRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.MarketsDataSubscribeRequest} returns this
 */
proto.datanode.api.v2.MarketsDataSubscribeRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.MarketsDataSubscribeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.MarketsDataSubscribeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.MarketsDataSubscribeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.MarketsDataSubscribeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketsDataSubscribeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketDataList: jspb.Message.toObjectList(msg.getMarketDataList(),
    vega_vega_pb.MarketData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.MarketsDataSubscribeResponse}
 */
proto.datanode.api.v2.MarketsDataSubscribeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.MarketsDataSubscribeResponse;
  return proto.datanode.api.v2.MarketsDataSubscribeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.MarketsDataSubscribeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.MarketsDataSubscribeResponse}
 */
proto.datanode.api.v2.MarketsDataSubscribeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.MarketData;
      reader.readMessage(value,vega_vega_pb.MarketData.deserializeBinaryFromReader);
      msg.addMarketData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.MarketsDataSubscribeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.MarketsDataSubscribeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.MarketsDataSubscribeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketsDataSubscribeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.MarketData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated vega.MarketData market_data = 1;
 * @return {!Array<!proto.vega.MarketData>}
 */
proto.datanode.api.v2.MarketsDataSubscribeResponse.prototype.getMarketDataList = function() {
  return /** @type{!Array<!proto.vega.MarketData>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.MarketData, 1));
};


/**
 * @param {!Array<!proto.vega.MarketData>} value
 * @return {!proto.datanode.api.v2.MarketsDataSubscribeResponse} returns this
*/
proto.datanode.api.v2.MarketsDataSubscribeResponse.prototype.setMarketDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.MarketData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.MarketData}
 */
proto.datanode.api.v2.MarketsDataSubscribeResponse.prototype.addMarketData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.MarketData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.MarketsDataSubscribeResponse} returns this
 */
proto.datanode.api.v2.MarketsDataSubscribeResponse.prototype.clearMarketDataList = function() {
  return this.setMarketDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListTransfersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListTransfersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListTransfersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListTransfersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubkey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListTransfersRequest}
 */
proto.datanode.api.v2.ListTransfersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListTransfersRequest;
  return proto.datanode.api.v2.ListTransfersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListTransfersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListTransfersRequest}
 */
proto.datanode.api.v2.ListTransfersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPubkey(value);
      break;
    case 2:
      var value = /** @type {!proto.datanode.api.v2.TransferDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListTransfersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListTransfersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListTransfersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListTransfersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string pubkey = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListTransfersRequest.prototype.getPubkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListTransfersRequest} returns this
 */
proto.datanode.api.v2.ListTransfersRequest.prototype.setPubkey = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListTransfersRequest} returns this
 */
proto.datanode.api.v2.ListTransfersRequest.prototype.clearPubkey = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListTransfersRequest.prototype.hasPubkey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TransferDirection direction = 2;
 * @return {!proto.datanode.api.v2.TransferDirection}
 */
proto.datanode.api.v2.ListTransfersRequest.prototype.getDirection = function() {
  return /** @type {!proto.datanode.api.v2.TransferDirection} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.datanode.api.v2.TransferDirection} value
 * @return {!proto.datanode.api.v2.ListTransfersRequest} returns this
 */
proto.datanode.api.v2.ListTransfersRequest.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListTransfersRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 3));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListTransfersRequest} returns this
*/
proto.datanode.api.v2.ListTransfersRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListTransfersRequest} returns this
 */
proto.datanode.api.v2.ListTransfersRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListTransfersRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListTransfersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListTransfersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListTransfersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListTransfersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transfers: (f = msg.getTransfers()) && proto.datanode.api.v2.TransferConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListTransfersResponse}
 */
proto.datanode.api.v2.ListTransfersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListTransfersResponse;
  return proto.datanode.api.v2.ListTransfersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListTransfersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListTransfersResponse}
 */
proto.datanode.api.v2.ListTransfersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.TransferConnection;
      reader.readMessage(value,proto.datanode.api.v2.TransferConnection.deserializeBinaryFromReader);
      msg.setTransfers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListTransfersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListTransfersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListTransfersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListTransfersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransfers();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.TransferConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional TransferConnection transfers = 1;
 * @return {?proto.datanode.api.v2.TransferConnection}
 */
proto.datanode.api.v2.ListTransfersResponse.prototype.getTransfers = function() {
  return /** @type{?proto.datanode.api.v2.TransferConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.TransferConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.TransferConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListTransfersResponse} returns this
*/
proto.datanode.api.v2.ListTransfersResponse.prototype.setTransfers = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListTransfersResponse} returns this
 */
proto.datanode.api.v2.ListTransfersResponse.prototype.clearTransfers = function() {
  return this.setTransfers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListTransfersResponse.prototype.hasTransfers = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.TransferEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.TransferEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.TransferEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.TransferEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_events_v1_events_pb.Transfer.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.TransferEdge}
 */
proto.datanode.api.v2.TransferEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.TransferEdge;
  return proto.datanode.api.v2.TransferEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.TransferEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.TransferEdge}
 */
proto.datanode.api.v2.TransferEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_events_v1_events_pb.Transfer;
      reader.readMessage(value,vega_events_v1_events_pb.Transfer.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.TransferEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.TransferEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.TransferEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.TransferEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_events_v1_events_pb.Transfer.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.events.v1.Transfer node = 1;
 * @return {?proto.vega.events.v1.Transfer}
 */
proto.datanode.api.v2.TransferEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.events.v1.Transfer} */ (
    jspb.Message.getWrapperField(this, vega_events_v1_events_pb.Transfer, 1));
};


/**
 * @param {?proto.vega.events.v1.Transfer|undefined} value
 * @return {!proto.datanode.api.v2.TransferEdge} returns this
*/
proto.datanode.api.v2.TransferEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.TransferEdge} returns this
 */
proto.datanode.api.v2.TransferEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.TransferEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.TransferEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.TransferEdge} returns this
 */
proto.datanode.api.v2.TransferEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.TransferConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.TransferConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.TransferConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.TransferConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.TransferConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.TransferEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.TransferConnection}
 */
proto.datanode.api.v2.TransferConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.TransferConnection;
  return proto.datanode.api.v2.TransferConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.TransferConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.TransferConnection}
 */
proto.datanode.api.v2.TransferConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.TransferEdge;
      reader.readMessage(value,proto.datanode.api.v2.TransferEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.TransferConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.TransferConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.TransferConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.TransferConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.TransferEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TransferEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.TransferEdge>}
 */
proto.datanode.api.v2.TransferConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.TransferEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.TransferEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.TransferEdge>} value
 * @return {!proto.datanode.api.v2.TransferConnection} returns this
*/
proto.datanode.api.v2.TransferConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.TransferEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.TransferEdge}
 */
proto.datanode.api.v2.TransferConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.TransferEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.TransferConnection} returns this
 */
proto.datanode.api.v2.TransferConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.TransferConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.TransferConnection} returns this
*/
proto.datanode.api.v2.TransferConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.TransferConnection} returns this
 */
proto.datanode.api.v2.TransferConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.TransferConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetNetworkLimitsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetNetworkLimitsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetNetworkLimitsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkLimitsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetNetworkLimitsRequest}
 */
proto.datanode.api.v2.GetNetworkLimitsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetNetworkLimitsRequest;
  return proto.datanode.api.v2.GetNetworkLimitsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetNetworkLimitsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetNetworkLimitsRequest}
 */
proto.datanode.api.v2.GetNetworkLimitsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetNetworkLimitsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetNetworkLimitsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetNetworkLimitsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkLimitsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetNetworkLimitsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetNetworkLimitsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetNetworkLimitsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkLimitsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    limits: (f = msg.getLimits()) && vega_vega_pb.NetworkLimits.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetNetworkLimitsResponse}
 */
proto.datanode.api.v2.GetNetworkLimitsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetNetworkLimitsResponse;
  return proto.datanode.api.v2.GetNetworkLimitsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetNetworkLimitsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetNetworkLimitsResponse}
 */
proto.datanode.api.v2.GetNetworkLimitsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.NetworkLimits;
      reader.readMessage(value,vega_vega_pb.NetworkLimits.deserializeBinaryFromReader);
      msg.setLimits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetNetworkLimitsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetNetworkLimitsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetNetworkLimitsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkLimitsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimits();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.NetworkLimits.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.NetworkLimits limits = 1;
 * @return {?proto.vega.NetworkLimits}
 */
proto.datanode.api.v2.GetNetworkLimitsResponse.prototype.getLimits = function() {
  return /** @type{?proto.vega.NetworkLimits} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.NetworkLimits, 1));
};


/**
 * @param {?proto.vega.NetworkLimits|undefined} value
 * @return {!proto.datanode.api.v2.GetNetworkLimitsResponse} returns this
*/
proto.datanode.api.v2.GetNetworkLimitsResponse.prototype.setLimits = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetNetworkLimitsResponse} returns this
 */
proto.datanode.api.v2.GetNetworkLimitsResponse.prototype.clearLimits = function() {
  return this.setLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetNetworkLimitsResponse.prototype.hasLimits = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListCandleIntervalsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListCandleIntervalsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListCandleIntervalsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCandleIntervalsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListCandleIntervalsRequest}
 */
proto.datanode.api.v2.ListCandleIntervalsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListCandleIntervalsRequest;
  return proto.datanode.api.v2.ListCandleIntervalsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListCandleIntervalsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListCandleIntervalsRequest}
 */
proto.datanode.api.v2.ListCandleIntervalsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListCandleIntervalsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListCandleIntervalsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListCandleIntervalsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCandleIntervalsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListCandleIntervalsRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListCandleIntervalsRequest} returns this
 */
proto.datanode.api.v2.ListCandleIntervalsRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.IntervalToCandleId.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.IntervalToCandleId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.IntervalToCandleId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.IntervalToCandleId.toObject = function(includeInstance, msg) {
  var f, obj = {
    interval: jspb.Message.getFieldWithDefault(msg, 1, ""),
    candleId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.IntervalToCandleId}
 */
proto.datanode.api.v2.IntervalToCandleId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.IntervalToCandleId;
  return proto.datanode.api.v2.IntervalToCandleId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.IntervalToCandleId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.IntervalToCandleId}
 */
proto.datanode.api.v2.IntervalToCandleId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterval(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCandleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.IntervalToCandleId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.IntervalToCandleId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.IntervalToCandleId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.IntervalToCandleId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterval();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCandleId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string interval = 1;
 * @return {string}
 */
proto.datanode.api.v2.IntervalToCandleId.prototype.getInterval = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.IntervalToCandleId} returns this
 */
proto.datanode.api.v2.IntervalToCandleId.prototype.setInterval = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string candle_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.IntervalToCandleId.prototype.getCandleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.IntervalToCandleId} returns this
 */
proto.datanode.api.v2.IntervalToCandleId.prototype.setCandleId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ListCandleIntervalsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListCandleIntervalsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListCandleIntervalsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListCandleIntervalsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCandleIntervalsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    intervalToCandleIdList: jspb.Message.toObjectList(msg.getIntervalToCandleIdList(),
    proto.datanode.api.v2.IntervalToCandleId.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListCandleIntervalsResponse}
 */
proto.datanode.api.v2.ListCandleIntervalsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListCandleIntervalsResponse;
  return proto.datanode.api.v2.ListCandleIntervalsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListCandleIntervalsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListCandleIntervalsResponse}
 */
proto.datanode.api.v2.ListCandleIntervalsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.IntervalToCandleId;
      reader.readMessage(value,proto.datanode.api.v2.IntervalToCandleId.deserializeBinaryFromReader);
      msg.addIntervalToCandleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListCandleIntervalsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListCandleIntervalsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListCandleIntervalsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCandleIntervalsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntervalToCandleIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.IntervalToCandleId.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IntervalToCandleId interval_to_candle_id = 1;
 * @return {!Array<!proto.datanode.api.v2.IntervalToCandleId>}
 */
proto.datanode.api.v2.ListCandleIntervalsResponse.prototype.getIntervalToCandleIdList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.IntervalToCandleId>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.IntervalToCandleId, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.IntervalToCandleId>} value
 * @return {!proto.datanode.api.v2.ListCandleIntervalsResponse} returns this
*/
proto.datanode.api.v2.ListCandleIntervalsResponse.prototype.setIntervalToCandleIdList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.IntervalToCandleId=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.IntervalToCandleId}
 */
proto.datanode.api.v2.ListCandleIntervalsResponse.prototype.addIntervalToCandleId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.IntervalToCandleId, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ListCandleIntervalsResponse} returns this
 */
proto.datanode.api.v2.ListCandleIntervalsResponse.prototype.clearIntervalToCandleIdList = function() {
  return this.setIntervalToCandleIdList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.Candle.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.Candle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.Candle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.Candle.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lastUpdate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    high: jspb.Message.getFieldWithDefault(msg, 3, ""),
    low: jspb.Message.getFieldWithDefault(msg, 4, ""),
    open: jspb.Message.getFieldWithDefault(msg, 5, ""),
    close: jspb.Message.getFieldWithDefault(msg, 6, ""),
    volume: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.Candle}
 */
proto.datanode.api.v2.Candle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.Candle;
  return proto.datanode.api.v2.Candle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.Candle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.Candle}
 */
proto.datanode.api.v2.Candle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastUpdate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHigh(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLow(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpen(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClose(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.Candle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.Candle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.Candle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.Candle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLastUpdate();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getHigh();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLow();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOpen();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getClose();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
};


/**
 * optional int64 start = 1;
 * @return {number}
 */
proto.datanode.api.v2.Candle.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.Candle} returns this
 */
proto.datanode.api.v2.Candle.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 last_update = 2;
 * @return {number}
 */
proto.datanode.api.v2.Candle.prototype.getLastUpdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.Candle} returns this
 */
proto.datanode.api.v2.Candle.prototype.setLastUpdate = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string high = 3;
 * @return {string}
 */
proto.datanode.api.v2.Candle.prototype.getHigh = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.Candle} returns this
 */
proto.datanode.api.v2.Candle.prototype.setHigh = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string low = 4;
 * @return {string}
 */
proto.datanode.api.v2.Candle.prototype.getLow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.Candle} returns this
 */
proto.datanode.api.v2.Candle.prototype.setLow = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string open = 5;
 * @return {string}
 */
proto.datanode.api.v2.Candle.prototype.getOpen = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.Candle} returns this
 */
proto.datanode.api.v2.Candle.prototype.setOpen = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string close = 6;
 * @return {string}
 */
proto.datanode.api.v2.Candle.prototype.getClose = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.Candle} returns this
 */
proto.datanode.api.v2.Candle.prototype.setClose = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 volume = 7;
 * @return {number}
 */
proto.datanode.api.v2.Candle.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.Candle} returns this
 */
proto.datanode.api.v2.Candle.prototype.setVolume = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveCandleDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveCandleDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveCandleDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveCandleDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    candleId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveCandleDataRequest}
 */
proto.datanode.api.v2.ObserveCandleDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveCandleDataRequest;
  return proto.datanode.api.v2.ObserveCandleDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveCandleDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveCandleDataRequest}
 */
proto.datanode.api.v2.ObserveCandleDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCandleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveCandleDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveCandleDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveCandleDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveCandleDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string candle_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ObserveCandleDataRequest.prototype.getCandleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveCandleDataRequest} returns this
 */
proto.datanode.api.v2.ObserveCandleDataRequest.prototype.setCandleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveCandleDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveCandleDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveCandleDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveCandleDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    candle: (f = msg.getCandle()) && proto.datanode.api.v2.Candle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveCandleDataResponse}
 */
proto.datanode.api.v2.ObserveCandleDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveCandleDataResponse;
  return proto.datanode.api.v2.ObserveCandleDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveCandleDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveCandleDataResponse}
 */
proto.datanode.api.v2.ObserveCandleDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.Candle;
      reader.readMessage(value,proto.datanode.api.v2.Candle.deserializeBinaryFromReader);
      msg.setCandle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveCandleDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveCandleDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveCandleDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveCandleDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandle();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.Candle.serializeBinaryToWriter
    );
  }
};


/**
 * optional Candle candle = 1;
 * @return {?proto.datanode.api.v2.Candle}
 */
proto.datanode.api.v2.ObserveCandleDataResponse.prototype.getCandle = function() {
  return /** @type{?proto.datanode.api.v2.Candle} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Candle, 1));
};


/**
 * @param {?proto.datanode.api.v2.Candle|undefined} value
 * @return {!proto.datanode.api.v2.ObserveCandleDataResponse} returns this
*/
proto.datanode.api.v2.ObserveCandleDataResponse.prototype.setCandle = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveCandleDataResponse} returns this
 */
proto.datanode.api.v2.ObserveCandleDataResponse.prototype.clearCandle = function() {
  return this.setCandle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveCandleDataResponse.prototype.hasCandle = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListCandleDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListCandleDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCandleDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    candleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    toTimestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    interval: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListCandleDataRequest}
 */
proto.datanode.api.v2.ListCandleDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListCandleDataRequest;
  return proto.datanode.api.v2.ListCandleDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListCandleDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListCandleDataRequest}
 */
proto.datanode.api.v2.ListCandleDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCandleId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFromTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setToTimestamp(value);
      break;
    case 4:
      var value = /** @type {!proto.vega.Interval} */ (reader.readEnum());
      msg.setInterval(value);
      break;
    case 5:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListCandleDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListCandleDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCandleDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFromTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getToTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getInterval();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string candle_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.getCandleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListCandleDataRequest} returns this
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.setCandleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 from_timestamp = 2;
 * @return {number}
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.getFromTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.ListCandleDataRequest} returns this
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.setFromTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 to_timestamp = 3;
 * @return {number}
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.getToTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.ListCandleDataRequest} returns this
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.setToTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional vega.Interval interval = 4;
 * @return {!proto.vega.Interval}
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.getInterval = function() {
  return /** @type {!proto.vega.Interval} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.vega.Interval} value
 * @return {!proto.datanode.api.v2.ListCandleDataRequest} returns this
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.setInterval = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Pagination pagination = 5;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 5));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListCandleDataRequest} returns this
*/
proto.datanode.api.v2.ListCandleDataRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListCandleDataRequest} returns this
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListCandleDataRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListCandleDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListCandleDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListCandleDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCandleDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    candles: (f = msg.getCandles()) && proto.datanode.api.v2.CandleDataConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListCandleDataResponse}
 */
proto.datanode.api.v2.ListCandleDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListCandleDataResponse;
  return proto.datanode.api.v2.ListCandleDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListCandleDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListCandleDataResponse}
 */
proto.datanode.api.v2.ListCandleDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.CandleDataConnection;
      reader.readMessage(value,proto.datanode.api.v2.CandleDataConnection.deserializeBinaryFromReader);
      msg.setCandles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListCandleDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListCandleDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListCandleDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCandleDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandles();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.CandleDataConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional CandleDataConnection candles = 1;
 * @return {?proto.datanode.api.v2.CandleDataConnection}
 */
proto.datanode.api.v2.ListCandleDataResponse.prototype.getCandles = function() {
  return /** @type{?proto.datanode.api.v2.CandleDataConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.CandleDataConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.CandleDataConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListCandleDataResponse} returns this
*/
proto.datanode.api.v2.ListCandleDataResponse.prototype.setCandles = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListCandleDataResponse} returns this
 */
proto.datanode.api.v2.ListCandleDataResponse.prototype.clearCandles = function() {
  return this.setCandles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListCandleDataResponse.prototype.hasCandles = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.CandleEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.CandleEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.CandleEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CandleEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.datanode.api.v2.Candle.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.CandleEdge}
 */
proto.datanode.api.v2.CandleEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.CandleEdge;
  return proto.datanode.api.v2.CandleEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.CandleEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.CandleEdge}
 */
proto.datanode.api.v2.CandleEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.Candle;
      reader.readMessage(value,proto.datanode.api.v2.Candle.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.CandleEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.CandleEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.CandleEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CandleEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.Candle.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Candle node = 1;
 * @return {?proto.datanode.api.v2.Candle}
 */
proto.datanode.api.v2.CandleEdge.prototype.getNode = function() {
  return /** @type{?proto.datanode.api.v2.Candle} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Candle, 1));
};


/**
 * @param {?proto.datanode.api.v2.Candle|undefined} value
 * @return {!proto.datanode.api.v2.CandleEdge} returns this
*/
proto.datanode.api.v2.CandleEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.CandleEdge} returns this
 */
proto.datanode.api.v2.CandleEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.CandleEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.CandleEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.CandleEdge} returns this
 */
proto.datanode.api.v2.CandleEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.CandleDataConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.CandleDataConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.CandleDataConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.CandleDataConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CandleDataConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.CandleEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.CandleDataConnection}
 */
proto.datanode.api.v2.CandleDataConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.CandleDataConnection;
  return proto.datanode.api.v2.CandleDataConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.CandleDataConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.CandleDataConnection}
 */
proto.datanode.api.v2.CandleDataConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.CandleEdge;
      reader.readMessage(value,proto.datanode.api.v2.CandleEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.CandleDataConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.CandleDataConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.CandleDataConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CandleDataConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.CandleEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CandleEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.CandleEdge>}
 */
proto.datanode.api.v2.CandleDataConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.CandleEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.CandleEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.CandleEdge>} value
 * @return {!proto.datanode.api.v2.CandleDataConnection} returns this
*/
proto.datanode.api.v2.CandleDataConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.CandleEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.CandleEdge}
 */
proto.datanode.api.v2.CandleDataConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.CandleEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.CandleDataConnection} returns this
 */
proto.datanode.api.v2.CandleDataConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.CandleDataConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.CandleDataConnection} returns this
*/
proto.datanode.api.v2.CandleDataConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.CandleDataConnection} returns this
 */
proto.datanode.api.v2.CandleDataConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.CandleDataConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListVotesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListVotesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListVotesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListVotesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    proposalId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListVotesRequest}
 */
proto.datanode.api.v2.ListVotesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListVotesRequest;
  return proto.datanode.api.v2.ListVotesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListVotesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListVotesRequest}
 */
proto.datanode.api.v2.ListVotesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposalId(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListVotesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListVotesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListVotesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListVotesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListVotesRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListVotesRequest} returns this
 */
proto.datanode.api.v2.ListVotesRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListVotesRequest} returns this
 */
proto.datanode.api.v2.ListVotesRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListVotesRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string proposal_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListVotesRequest.prototype.getProposalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListVotesRequest} returns this
 */
proto.datanode.api.v2.ListVotesRequest.prototype.setProposalId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListVotesRequest} returns this
 */
proto.datanode.api.v2.ListVotesRequest.prototype.clearProposalId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListVotesRequest.prototype.hasProposalId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListVotesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 3));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListVotesRequest} returns this
*/
proto.datanode.api.v2.ListVotesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListVotesRequest} returns this
 */
proto.datanode.api.v2.ListVotesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListVotesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListVotesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListVotesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListVotesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListVotesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    votes: (f = msg.getVotes()) && proto.datanode.api.v2.VoteConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListVotesResponse}
 */
proto.datanode.api.v2.ListVotesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListVotesResponse;
  return proto.datanode.api.v2.ListVotesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListVotesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListVotesResponse}
 */
proto.datanode.api.v2.ListVotesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.VoteConnection;
      reader.readMessage(value,proto.datanode.api.v2.VoteConnection.deserializeBinaryFromReader);
      msg.setVotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListVotesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListVotesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListVotesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListVotesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVotes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.VoteConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional VoteConnection votes = 1;
 * @return {?proto.datanode.api.v2.VoteConnection}
 */
proto.datanode.api.v2.ListVotesResponse.prototype.getVotes = function() {
  return /** @type{?proto.datanode.api.v2.VoteConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.VoteConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.VoteConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListVotesResponse} returns this
*/
proto.datanode.api.v2.ListVotesResponse.prototype.setVotes = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListVotesResponse} returns this
 */
proto.datanode.api.v2.ListVotesResponse.prototype.clearVotes = function() {
  return this.setVotes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListVotesResponse.prototype.hasVotes = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.VoteEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.VoteEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.VoteEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.VoteEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_governance_pb.Vote.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.VoteEdge}
 */
proto.datanode.api.v2.VoteEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.VoteEdge;
  return proto.datanode.api.v2.VoteEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.VoteEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.VoteEdge}
 */
proto.datanode.api.v2.VoteEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_governance_pb.Vote;
      reader.readMessage(value,vega_governance_pb.Vote.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.VoteEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.VoteEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.VoteEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.VoteEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_governance_pb.Vote.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Vote node = 1;
 * @return {?proto.vega.Vote}
 */
proto.datanode.api.v2.VoteEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Vote} */ (
    jspb.Message.getWrapperField(this, vega_governance_pb.Vote, 1));
};


/**
 * @param {?proto.vega.Vote|undefined} value
 * @return {!proto.datanode.api.v2.VoteEdge} returns this
*/
proto.datanode.api.v2.VoteEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.VoteEdge} returns this
 */
proto.datanode.api.v2.VoteEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.VoteEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.VoteEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.VoteEdge} returns this
 */
proto.datanode.api.v2.VoteEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.VoteConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.VoteConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.VoteConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.VoteConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.VoteConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.VoteEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.VoteConnection}
 */
proto.datanode.api.v2.VoteConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.VoteConnection;
  return proto.datanode.api.v2.VoteConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.VoteConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.VoteConnection}
 */
proto.datanode.api.v2.VoteConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.VoteEdge;
      reader.readMessage(value,proto.datanode.api.v2.VoteEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.VoteConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.VoteConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.VoteConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.VoteConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.VoteEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VoteEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.VoteEdge>}
 */
proto.datanode.api.v2.VoteConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.VoteEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.VoteEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.VoteEdge>} value
 * @return {!proto.datanode.api.v2.VoteConnection} returns this
*/
proto.datanode.api.v2.VoteConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.VoteEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.VoteEdge}
 */
proto.datanode.api.v2.VoteConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.VoteEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.VoteConnection} returns this
 */
proto.datanode.api.v2.VoteConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.VoteConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.VoteConnection} returns this
*/
proto.datanode.api.v2.VoteConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.VoteConnection} returns this
 */
proto.datanode.api.v2.VoteConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.VoteConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveVotesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveVotesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveVotesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveVotesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    proposalId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveVotesRequest}
 */
proto.datanode.api.v2.ObserveVotesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveVotesRequest;
  return proto.datanode.api.v2.ObserveVotesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveVotesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveVotesRequest}
 */
proto.datanode.api.v2.ObserveVotesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveVotesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveVotesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveVotesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveVotesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ObserveVotesRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveVotesRequest} returns this
 */
proto.datanode.api.v2.ObserveVotesRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveVotesRequest} returns this
 */
proto.datanode.api.v2.ObserveVotesRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveVotesRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string proposal_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ObserveVotesRequest.prototype.getProposalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveVotesRequest} returns this
 */
proto.datanode.api.v2.ObserveVotesRequest.prototype.setProposalId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveVotesRequest} returns this
 */
proto.datanode.api.v2.ObserveVotesRequest.prototype.clearProposalId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveVotesRequest.prototype.hasProposalId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveVotesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveVotesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveVotesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveVotesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    vote: (f = msg.getVote()) && vega_governance_pb.Vote.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveVotesResponse}
 */
proto.datanode.api.v2.ObserveVotesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveVotesResponse;
  return proto.datanode.api.v2.ObserveVotesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveVotesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveVotesResponse}
 */
proto.datanode.api.v2.ObserveVotesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_governance_pb.Vote;
      reader.readMessage(value,vega_governance_pb.Vote.deserializeBinaryFromReader);
      msg.setVote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveVotesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveVotesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveVotesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveVotesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_governance_pb.Vote.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Vote vote = 1;
 * @return {?proto.vega.Vote}
 */
proto.datanode.api.v2.ObserveVotesResponse.prototype.getVote = function() {
  return /** @type{?proto.vega.Vote} */ (
    jspb.Message.getWrapperField(this, vega_governance_pb.Vote, 1));
};


/**
 * @param {?proto.vega.Vote|undefined} value
 * @return {!proto.datanode.api.v2.ObserveVotesResponse} returns this
*/
proto.datanode.api.v2.ObserveVotesResponse.prototype.setVote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveVotesResponse} returns this
 */
proto.datanode.api.v2.ObserveVotesResponse.prototype.clearVote = function() {
  return this.setVote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveVotesResponse.prototype.hasVote = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    submitter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    epochSeq: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest;
  return proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmitter(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpochSeq(value);
      break;
    case 4:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubmitter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEpochSeq();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest} returns this
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string submitter = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.getSubmitter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest} returns this
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.setSubmitter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string epoch_seq = 3;
 * @return {string}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.getEpochSeq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest} returns this
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.setEpochSeq = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Pagination pagination = 4;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 4));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest} returns this
*/
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest} returns this
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bundles: (f = msg.getBundles()) && proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse;
  return proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection;
      reader.readMessage(value,proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.deserializeBinaryFromReader);
      msg.setBundles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBundles();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional ERC20MultiSigSignerAddedConnection bundles = 1;
 * @return {?proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.prototype.getBundles = function() {
  return /** @type{?proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse} returns this
*/
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.prototype.setBundles = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse} returns this
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.prototype.clearBundles = function() {
  return this.setBundles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerAddedBundlesResponse.prototype.hasBundles = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_events_v1_events_pb.ERC20MultiSigSignerAdded.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge;
  return proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_events_v1_events_pb.ERC20MultiSigSignerAdded;
      reader.readMessage(value,vega_events_v1_events_pb.ERC20MultiSigSignerAdded.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_events_v1_events_pb.ERC20MultiSigSignerAdded.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.events.v1.ERC20MultiSigSignerAdded node = 1;
 * @return {?proto.vega.events.v1.ERC20MultiSigSignerAdded}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.events.v1.ERC20MultiSigSignerAdded} */ (
    jspb.Message.getWrapperField(this, vega_events_v1_events_pb.ERC20MultiSigSignerAdded, 1));
};


/**
 * @param {?proto.vega.events.v1.ERC20MultiSigSignerAdded|undefined} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge} returns this
*/
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge;
  return proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle;
      reader.readMessage(value,proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ERC20MultiSigSignerAddedBundle node = 1;
 * @return {?proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.prototype.getNode = function() {
  return /** @type{?proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle, 1));
};


/**
 * @param {?proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle|undefined} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge} returns this
*/
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection;
  return proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge;
      reader.readMessage(value,proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ERC20MultiSigSignerAddedBundleEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge>}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge>} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection} returns this
*/
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.ERC20MultiSigSignerAddedBundleEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection} returns this
*/
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.toObject = function(includeInstance, msg) {
  var f, obj = {
    newSigner: jspb.Message.getFieldWithDefault(msg, 1, ""),
    submitter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nonce: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    signatures: jspb.Message.getFieldWithDefault(msg, 6, ""),
    epochSeq: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle;
  return proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewSigner(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmitter(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNonce(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatures(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpochSeq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewSigner();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubmitter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNonce();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getSignatures();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEpochSeq();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string new_signer = 1;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.getNewSigner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.setNewSigner = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string submitter = 2;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.getSubmitter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.setSubmitter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nonce = 4;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.getNonce = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.setNonce = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 timestamp = 5;
 * @return {number}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string signatures = 6;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.getSignatures = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.setSignatures = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string epoch_seq = 3;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.getEpochSeq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerAddedBundle.prototype.setEpochSeq = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    submitter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    epochSeq: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest;
  return proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmitter(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpochSeq(value);
      break;
    case 4:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubmitter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEpochSeq();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest} returns this
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string submitter = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.getSubmitter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest} returns this
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.setSubmitter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string epoch_seq = 3;
 * @return {string}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.getEpochSeq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest} returns this
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.setEpochSeq = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Pagination pagination = 4;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 4));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest} returns this
*/
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest} returns this
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bundles: (f = msg.getBundles()) && proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse;
  return proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection;
      reader.readMessage(value,proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.deserializeBinaryFromReader);
      msg.setBundles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBundles();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional ERC20MultiSigSignerRemovedConnection bundles = 1;
 * @return {?proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.prototype.getBundles = function() {
  return /** @type{?proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse} returns this
*/
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.prototype.setBundles = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse} returns this
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.prototype.clearBundles = function() {
  return this.setBundles(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListERC20MultiSigSignerRemovedBundlesResponse.prototype.hasBundles = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_events_v1_events_pb.ERC20MultiSigSignerRemoved.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge;
  return proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_events_v1_events_pb.ERC20MultiSigSignerRemoved;
      reader.readMessage(value,vega_events_v1_events_pb.ERC20MultiSigSignerRemoved.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_events_v1_events_pb.ERC20MultiSigSignerRemoved.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.events.v1.ERC20MultiSigSignerRemoved node = 1;
 * @return {?proto.vega.events.v1.ERC20MultiSigSignerRemoved}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.events.v1.ERC20MultiSigSignerRemoved} */ (
    jspb.Message.getWrapperField(this, vega_events_v1_events_pb.ERC20MultiSigSignerRemoved, 1));
};


/**
 * @param {?proto.vega.events.v1.ERC20MultiSigSignerRemoved|undefined} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge} returns this
*/
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge;
  return proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle;
      reader.readMessage(value,proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ERC20MultiSigSignerRemovedBundle node = 1;
 * @return {?proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.prototype.getNode = function() {
  return /** @type{?proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle, 1));
};


/**
 * @param {?proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle|undefined} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge} returns this
*/
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection;
  return proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge;
      reader.readMessage(value,proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ERC20MultiSigSignerRemovedBundleEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge>}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge>} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection} returns this
*/
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundleEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection} returns this
*/
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.toObject = function(includeInstance, msg) {
  var f, obj = {
    oldSigner: jspb.Message.getFieldWithDefault(msg, 1, ""),
    submitter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nonce: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 5, 0),
    signatures: jspb.Message.getFieldWithDefault(msg, 6, ""),
    epochSeq: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle;
  return proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldSigner(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubmitter(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNonce(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatures(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpochSeq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOldSigner();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubmitter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNonce();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getSignatures();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEpochSeq();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string old_signer = 1;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.getOldSigner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.setOldSigner = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string submitter = 2;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.getSubmitter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.setSubmitter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nonce = 4;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.getNonce = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.setNonce = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 timestamp = 5;
 * @return {number}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string signatures = 6;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.getSignatures = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.setSignatures = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string epoch_seq = 7;
 * @return {string}
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.getEpochSeq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle} returns this
 */
proto.datanode.api.v2.ERC20MultiSigSignerRemovedBundle.prototype.setEpochSeq = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetERC20ListAssetBundleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetERC20ListAssetBundleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20ListAssetBundleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetERC20ListAssetBundleRequest}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetERC20ListAssetBundleRequest;
  return proto.datanode.api.v2.GetERC20ListAssetBundleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetERC20ListAssetBundleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetERC20ListAssetBundleRequest}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetERC20ListAssetBundleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetERC20ListAssetBundleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20ListAssetBundleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20ListAssetBundleRequest} returns this
 */
proto.datanode.api.v2.GetERC20ListAssetBundleRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetERC20ListAssetBundleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetERC20ListAssetBundleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetSource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vegaAssetId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nonce: jspb.Message.getFieldWithDefault(msg, 3, ""),
    signatures: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetERC20ListAssetBundleResponse}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetERC20ListAssetBundleResponse;
  return proto.datanode.api.v2.GetERC20ListAssetBundleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetERC20ListAssetBundleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetERC20ListAssetBundleResponse}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVegaAssetId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNonce(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetERC20ListAssetBundleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetERC20ListAssetBundleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVegaAssetId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNonce();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSignatures();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string asset_source = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.prototype.getAssetSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20ListAssetBundleResponse} returns this
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.prototype.setAssetSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string vega_asset_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.prototype.getVegaAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20ListAssetBundleResponse} returns this
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.prototype.setVegaAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nonce = 3;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.prototype.getNonce = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20ListAssetBundleResponse} returns this
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.prototype.setNonce = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string signatures = 4;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.prototype.getSignatures = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20ListAssetBundleResponse} returns this
 */
proto.datanode.api.v2.GetERC20ListAssetBundleResponse.prototype.setSignatures = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest;
  return proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProposalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string proposal_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.prototype.getProposalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest} returns this
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleRequest.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetSource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vegaAssetId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nonce: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lifetimeLimit: jspb.Message.getFieldWithDefault(msg, 4, ""),
    threshold: jspb.Message.getFieldWithDefault(msg, 5, ""),
    signatures: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse;
  return proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVegaAssetId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNonce(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLifetimeLimit(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setThreshold(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVegaAssetId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNonce();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLifetimeLimit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getThreshold();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSignatures();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string asset_source = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.getAssetSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse} returns this
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.setAssetSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string vega_asset_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.getVegaAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse} returns this
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.setVegaAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nonce = 3;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.getNonce = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse} returns this
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.setNonce = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string lifetime_limit = 4;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.getLifetimeLimit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse} returns this
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.setLifetimeLimit = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string threshold = 5;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.getThreshold = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse} returns this
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.setThreshold = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string signatures = 6;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.getSignatures = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse} returns this
 */
proto.datanode.api.v2.GetERC20SetAssetLimitsBundleResponse.prototype.setSignatures = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    withdrawalId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest;
  return proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWithdrawalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string withdrawal_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.prototype.getWithdrawalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest} returns this
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalRequest.prototype.setWithdrawalId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetSource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nonce: jspb.Message.getFieldWithDefault(msg, 4, ""),
    signatures: jspb.Message.getFieldWithDefault(msg, 5, ""),
    targetAddress: jspb.Message.getFieldWithDefault(msg, 6, ""),
    creation: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse;
  return proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetSource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNonce(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatures(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetAddress(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetSource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNonce();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSignatures();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTargetAddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreation();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional string asset_source = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.getAssetSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse} returns this
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.setAssetSource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse} returns this
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nonce = 4;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.getNonce = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse} returns this
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.setNonce = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string signatures = 5;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.getSignatures = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse} returns this
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.setSignatures = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string target_address = 6;
 * @return {string}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.getTargetAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse} returns this
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.setTargetAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 creation = 7;
 * @return {number}
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.getCreation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse} returns this
 */
proto.datanode.api.v2.GetERC20WithdrawalApprovalResponse.prototype.setCreation = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetLastTradeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetLastTradeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetLastTradeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLastTradeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetLastTradeRequest}
 */
proto.datanode.api.v2.GetLastTradeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetLastTradeRequest;
  return proto.datanode.api.v2.GetLastTradeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetLastTradeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetLastTradeRequest}
 */
proto.datanode.api.v2.GetLastTradeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetLastTradeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetLastTradeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetLastTradeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLastTradeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetLastTradeRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetLastTradeRequest} returns this
 */
proto.datanode.api.v2.GetLastTradeRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetLastTradeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetLastTradeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetLastTradeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLastTradeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    trade: (f = msg.getTrade()) && vega_vega_pb.Trade.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetLastTradeResponse}
 */
proto.datanode.api.v2.GetLastTradeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetLastTradeResponse;
  return proto.datanode.api.v2.GetLastTradeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetLastTradeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetLastTradeResponse}
 */
proto.datanode.api.v2.GetLastTradeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Trade;
      reader.readMessage(value,vega_vega_pb.Trade.deserializeBinaryFromReader);
      msg.setTrade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetLastTradeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetLastTradeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetLastTradeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetLastTradeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrade();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Trade.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Trade trade = 1;
 * @return {?proto.vega.Trade}
 */
proto.datanode.api.v2.GetLastTradeResponse.prototype.getTrade = function() {
  return /** @type{?proto.vega.Trade} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Trade, 1));
};


/**
 * @param {?proto.vega.Trade|undefined} value
 * @return {!proto.datanode.api.v2.GetLastTradeResponse} returns this
*/
proto.datanode.api.v2.GetLastTradeResponse.prototype.setTrade = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetLastTradeResponse} returns this
 */
proto.datanode.api.v2.GetLastTradeResponse.prototype.clearTrade = function() {
  return this.setTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetLastTradeResponse.prototype.hasTrade = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListTradesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListTradesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListTradesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    orderId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partyId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f),
    dateRange: (f = msg.getDateRange()) && proto.datanode.api.v2.DateRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListTradesRequest}
 */
proto.datanode.api.v2.ListTradesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListTradesRequest;
  return proto.datanode.api.v2.ListTradesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListTradesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListTradesRequest}
 */
proto.datanode.api.v2.ListTradesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 4:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 5:
      var value = new proto.datanode.api.v2.DateRange;
      reader.readMessage(value,proto.datanode.api.v2.DateRange.deserializeBinaryFromReader);
      msg.setDateRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListTradesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListTradesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListTradesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getDateRange();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.datanode.api.v2.DateRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListTradesRequest} returns this
 */
proto.datanode.api.v2.ListTradesRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListTradesRequest} returns this
 */
proto.datanode.api.v2.ListTradesRequest.prototype.clearMarketId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.hasMarketId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string order_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListTradesRequest} returns this
 */
proto.datanode.api.v2.ListTradesRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListTradesRequest} returns this
 */
proto.datanode.api.v2.ListTradesRequest.prototype.clearOrderId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.hasOrderId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string party_id = 3;
 * @return {string}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListTradesRequest} returns this
 */
proto.datanode.api.v2.ListTradesRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListTradesRequest} returns this
 */
proto.datanode.api.v2.ListTradesRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Pagination pagination = 4;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 4));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListTradesRequest} returns this
*/
proto.datanode.api.v2.ListTradesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListTradesRequest} returns this
 */
proto.datanode.api.v2.ListTradesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DateRange date_range = 5;
 * @return {?proto.datanode.api.v2.DateRange}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.getDateRange = function() {
  return /** @type{?proto.datanode.api.v2.DateRange} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.DateRange, 5));
};


/**
 * @param {?proto.datanode.api.v2.DateRange|undefined} value
 * @return {!proto.datanode.api.v2.ListTradesRequest} returns this
*/
proto.datanode.api.v2.ListTradesRequest.prototype.setDateRange = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListTradesRequest} returns this
 */
proto.datanode.api.v2.ListTradesRequest.prototype.clearDateRange = function() {
  return this.setDateRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListTradesRequest.prototype.hasDateRange = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListTradesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListTradesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListTradesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListTradesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    trades: (f = msg.getTrades()) && proto.datanode.api.v2.TradeConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListTradesResponse}
 */
proto.datanode.api.v2.ListTradesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListTradesResponse;
  return proto.datanode.api.v2.ListTradesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListTradesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListTradesResponse}
 */
proto.datanode.api.v2.ListTradesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.TradeConnection;
      reader.readMessage(value,proto.datanode.api.v2.TradeConnection.deserializeBinaryFromReader);
      msg.setTrades(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListTradesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListTradesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListTradesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListTradesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrades();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.TradeConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional TradeConnection trades = 1;
 * @return {?proto.datanode.api.v2.TradeConnection}
 */
proto.datanode.api.v2.ListTradesResponse.prototype.getTrades = function() {
  return /** @type{?proto.datanode.api.v2.TradeConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.TradeConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.TradeConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListTradesResponse} returns this
*/
proto.datanode.api.v2.ListTradesResponse.prototype.setTrades = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListTradesResponse} returns this
 */
proto.datanode.api.v2.ListTradesResponse.prototype.clearTrades = function() {
  return this.setTrades(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListTradesResponse.prototype.hasTrades = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.TradeConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.TradeConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.TradeConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.TradeConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.TradeConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.TradeEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.TradeConnection}
 */
proto.datanode.api.v2.TradeConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.TradeConnection;
  return proto.datanode.api.v2.TradeConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.TradeConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.TradeConnection}
 */
proto.datanode.api.v2.TradeConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.TradeEdge;
      reader.readMessage(value,proto.datanode.api.v2.TradeEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.TradeConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.TradeConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.TradeConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.TradeConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.TradeEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TradeEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.TradeEdge>}
 */
proto.datanode.api.v2.TradeConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.TradeEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.TradeEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.TradeEdge>} value
 * @return {!proto.datanode.api.v2.TradeConnection} returns this
*/
proto.datanode.api.v2.TradeConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.TradeEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.TradeEdge}
 */
proto.datanode.api.v2.TradeConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.TradeEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.TradeConnection} returns this
 */
proto.datanode.api.v2.TradeConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.TradeConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.TradeConnection} returns this
*/
proto.datanode.api.v2.TradeConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.TradeConnection} returns this
 */
proto.datanode.api.v2.TradeConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.TradeConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.TradeEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.TradeEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.TradeEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.TradeEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.Trade.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.TradeEdge}
 */
proto.datanode.api.v2.TradeEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.TradeEdge;
  return proto.datanode.api.v2.TradeEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.TradeEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.TradeEdge}
 */
proto.datanode.api.v2.TradeEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Trade;
      reader.readMessage(value,vega_vega_pb.Trade.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.TradeEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.TradeEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.TradeEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.TradeEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Trade.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Trade node = 1;
 * @return {?proto.vega.Trade}
 */
proto.datanode.api.v2.TradeEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Trade} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Trade, 1));
};


/**
 * @param {?proto.vega.Trade|undefined} value
 * @return {!proto.datanode.api.v2.TradeEdge} returns this
*/
proto.datanode.api.v2.TradeEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.TradeEdge} returns this
 */
proto.datanode.api.v2.TradeEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.TradeEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.TradeEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.TradeEdge} returns this
 */
proto.datanode.api.v2.TradeEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveTradesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveTradesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveTradesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveTradesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partyId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveTradesRequest}
 */
proto.datanode.api.v2.ObserveTradesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveTradesRequest;
  return proto.datanode.api.v2.ObserveTradesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveTradesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveTradesRequest}
 */
proto.datanode.api.v2.ObserveTradesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveTradesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveTradesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveTradesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveTradesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ObserveTradesRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveTradesRequest} returns this
 */
proto.datanode.api.v2.ObserveTradesRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveTradesRequest} returns this
 */
proto.datanode.api.v2.ObserveTradesRequest.prototype.clearMarketId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveTradesRequest.prototype.hasMarketId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string party_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ObserveTradesRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveTradesRequest} returns this
 */
proto.datanode.api.v2.ObserveTradesRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveTradesRequest} returns this
 */
proto.datanode.api.v2.ObserveTradesRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveTradesRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ObserveTradesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveTradesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveTradesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveTradesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveTradesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradesList: jspb.Message.toObjectList(msg.getTradesList(),
    vega_vega_pb.Trade.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveTradesResponse}
 */
proto.datanode.api.v2.ObserveTradesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveTradesResponse;
  return proto.datanode.api.v2.ObserveTradesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveTradesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveTradesResponse}
 */
proto.datanode.api.v2.ObserveTradesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Trade;
      reader.readMessage(value,vega_vega_pb.Trade.deserializeBinaryFromReader);
      msg.addTrades(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveTradesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveTradesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveTradesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveTradesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.Trade.serializeBinaryToWriter
    );
  }
};


/**
 * repeated vega.Trade trades = 1;
 * @return {!Array<!proto.vega.Trade>}
 */
proto.datanode.api.v2.ObserveTradesResponse.prototype.getTradesList = function() {
  return /** @type{!Array<!proto.vega.Trade>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.Trade, 1));
};


/**
 * @param {!Array<!proto.vega.Trade>} value
 * @return {!proto.datanode.api.v2.ObserveTradesResponse} returns this
*/
proto.datanode.api.v2.ObserveTradesResponse.prototype.setTradesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.Trade=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.Trade}
 */
proto.datanode.api.v2.ObserveTradesResponse.prototype.addTrades = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.Trade, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ObserveTradesResponse} returns this
 */
proto.datanode.api.v2.ObserveTradesResponse.prototype.clearTradesList = function() {
  return this.setTradesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetOracleSpecRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetOracleSpecRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetOracleSpecRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetOracleSpecRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    oracleSpecId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetOracleSpecRequest}
 */
proto.datanode.api.v2.GetOracleSpecRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetOracleSpecRequest;
  return proto.datanode.api.v2.GetOracleSpecRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetOracleSpecRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetOracleSpecRequest}
 */
proto.datanode.api.v2.GetOracleSpecRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleSpecId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetOracleSpecRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetOracleSpecRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetOracleSpecRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetOracleSpecRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOracleSpecId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string oracle_spec_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetOracleSpecRequest.prototype.getOracleSpecId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetOracleSpecRequest} returns this
 */
proto.datanode.api.v2.GetOracleSpecRequest.prototype.setOracleSpecId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetOracleSpecResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetOracleSpecResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetOracleSpecResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetOracleSpecResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    oracleSpec: (f = msg.getOracleSpec()) && vega_oracle_pb.OracleSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetOracleSpecResponse}
 */
proto.datanode.api.v2.GetOracleSpecResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetOracleSpecResponse;
  return proto.datanode.api.v2.GetOracleSpecResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetOracleSpecResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetOracleSpecResponse}
 */
proto.datanode.api.v2.GetOracleSpecResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_oracle_pb.OracleSpec;
      reader.readMessage(value,vega_oracle_pb.OracleSpec.deserializeBinaryFromReader);
      msg.setOracleSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetOracleSpecResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetOracleSpecResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetOracleSpecResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetOracleSpecResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOracleSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_oracle_pb.OracleSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.OracleSpec oracle_spec = 1;
 * @return {?proto.vega.OracleSpec}
 */
proto.datanode.api.v2.GetOracleSpecResponse.prototype.getOracleSpec = function() {
  return /** @type{?proto.vega.OracleSpec} */ (
    jspb.Message.getWrapperField(this, vega_oracle_pb.OracleSpec, 1));
};


/**
 * @param {?proto.vega.OracleSpec|undefined} value
 * @return {!proto.datanode.api.v2.GetOracleSpecResponse} returns this
*/
proto.datanode.api.v2.GetOracleSpecResponse.prototype.setOracleSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetOracleSpecResponse} returns this
 */
proto.datanode.api.v2.GetOracleSpecResponse.prototype.clearOracleSpec = function() {
  return this.setOracleSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetOracleSpecResponse.prototype.hasOracleSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListOracleSpecsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListOracleSpecsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListOracleSpecsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOracleSpecsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListOracleSpecsRequest}
 */
proto.datanode.api.v2.ListOracleSpecsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListOracleSpecsRequest;
  return proto.datanode.api.v2.ListOracleSpecsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListOracleSpecsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListOracleSpecsRequest}
 */
proto.datanode.api.v2.ListOracleSpecsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListOracleSpecsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListOracleSpecsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListOracleSpecsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOracleSpecsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListOracleSpecsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListOracleSpecsRequest} returns this
*/
proto.datanode.api.v2.ListOracleSpecsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListOracleSpecsRequest} returns this
 */
proto.datanode.api.v2.ListOracleSpecsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOracleSpecsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListOracleSpecsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListOracleSpecsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListOracleSpecsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOracleSpecsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    oracleSpecs: (f = msg.getOracleSpecs()) && proto.datanode.api.v2.OracleSpecsConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListOracleSpecsResponse}
 */
proto.datanode.api.v2.ListOracleSpecsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListOracleSpecsResponse;
  return proto.datanode.api.v2.ListOracleSpecsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListOracleSpecsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListOracleSpecsResponse}
 */
proto.datanode.api.v2.ListOracleSpecsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.OracleSpecsConnection;
      reader.readMessage(value,proto.datanode.api.v2.OracleSpecsConnection.deserializeBinaryFromReader);
      msg.setOracleSpecs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListOracleSpecsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListOracleSpecsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListOracleSpecsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOracleSpecsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOracleSpecs();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.OracleSpecsConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional OracleSpecsConnection oracle_specs = 1;
 * @return {?proto.datanode.api.v2.OracleSpecsConnection}
 */
proto.datanode.api.v2.ListOracleSpecsResponse.prototype.getOracleSpecs = function() {
  return /** @type{?proto.datanode.api.v2.OracleSpecsConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.OracleSpecsConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.OracleSpecsConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListOracleSpecsResponse} returns this
*/
proto.datanode.api.v2.ListOracleSpecsResponse.prototype.setOracleSpecs = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListOracleSpecsResponse} returns this
 */
proto.datanode.api.v2.ListOracleSpecsResponse.prototype.clearOracleSpecs = function() {
  return this.setOracleSpecs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOracleSpecsResponse.prototype.hasOracleSpecs = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListOracleDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListOracleDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListOracleDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOracleDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    oracleSpecId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListOracleDataRequest}
 */
proto.datanode.api.v2.ListOracleDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListOracleDataRequest;
  return proto.datanode.api.v2.ListOracleDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListOracleDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListOracleDataRequest}
 */
proto.datanode.api.v2.ListOracleDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOracleSpecId(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListOracleDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListOracleDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListOracleDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOracleDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string oracle_spec_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListOracleDataRequest.prototype.getOracleSpecId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListOracleDataRequest} returns this
 */
proto.datanode.api.v2.ListOracleDataRequest.prototype.setOracleSpecId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListOracleDataRequest} returns this
 */
proto.datanode.api.v2.ListOracleDataRequest.prototype.clearOracleSpecId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOracleDataRequest.prototype.hasOracleSpecId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListOracleDataRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListOracleDataRequest} returns this
*/
proto.datanode.api.v2.ListOracleDataRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListOracleDataRequest} returns this
 */
proto.datanode.api.v2.ListOracleDataRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOracleDataRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListOracleDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListOracleDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListOracleDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOracleDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    oracleData: (f = msg.getOracleData()) && proto.datanode.api.v2.OracleDataConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListOracleDataResponse}
 */
proto.datanode.api.v2.ListOracleDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListOracleDataResponse;
  return proto.datanode.api.v2.ListOracleDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListOracleDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListOracleDataResponse}
 */
proto.datanode.api.v2.ListOracleDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.OracleDataConnection;
      reader.readMessage(value,proto.datanode.api.v2.OracleDataConnection.deserializeBinaryFromReader);
      msg.setOracleData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListOracleDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListOracleDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListOracleDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListOracleDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOracleData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.OracleDataConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional OracleDataConnection oracle_data = 1;
 * @return {?proto.datanode.api.v2.OracleDataConnection}
 */
proto.datanode.api.v2.ListOracleDataResponse.prototype.getOracleData = function() {
  return /** @type{?proto.datanode.api.v2.OracleDataConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.OracleDataConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.OracleDataConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListOracleDataResponse} returns this
*/
proto.datanode.api.v2.ListOracleDataResponse.prototype.setOracleData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListOracleDataResponse} returns this
 */
proto.datanode.api.v2.ListOracleDataResponse.prototype.clearOracleData = function() {
  return this.setOracleData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListOracleDataResponse.prototype.hasOracleData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.OracleSpecEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.OracleSpecEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.OracleSpecEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OracleSpecEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_oracle_pb.OracleSpec.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.OracleSpecEdge}
 */
proto.datanode.api.v2.OracleSpecEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.OracleSpecEdge;
  return proto.datanode.api.v2.OracleSpecEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.OracleSpecEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.OracleSpecEdge}
 */
proto.datanode.api.v2.OracleSpecEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_oracle_pb.OracleSpec;
      reader.readMessage(value,vega_oracle_pb.OracleSpec.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.OracleSpecEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.OracleSpecEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.OracleSpecEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OracleSpecEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_oracle_pb.OracleSpec.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.OracleSpec node = 1;
 * @return {?proto.vega.OracleSpec}
 */
proto.datanode.api.v2.OracleSpecEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.OracleSpec} */ (
    jspb.Message.getWrapperField(this, vega_oracle_pb.OracleSpec, 1));
};


/**
 * @param {?proto.vega.OracleSpec|undefined} value
 * @return {!proto.datanode.api.v2.OracleSpecEdge} returns this
*/
proto.datanode.api.v2.OracleSpecEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.OracleSpecEdge} returns this
 */
proto.datanode.api.v2.OracleSpecEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.OracleSpecEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.OracleSpecEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.OracleSpecEdge} returns this
 */
proto.datanode.api.v2.OracleSpecEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.OracleSpecsConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.OracleSpecsConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.OracleSpecsConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.OracleSpecsConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OracleSpecsConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.OracleSpecEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.OracleSpecsConnection}
 */
proto.datanode.api.v2.OracleSpecsConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.OracleSpecsConnection;
  return proto.datanode.api.v2.OracleSpecsConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.OracleSpecsConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.OracleSpecsConnection}
 */
proto.datanode.api.v2.OracleSpecsConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.OracleSpecEdge;
      reader.readMessage(value,proto.datanode.api.v2.OracleSpecEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.OracleSpecsConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.OracleSpecsConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.OracleSpecsConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OracleSpecsConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.OracleSpecEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OracleSpecEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.OracleSpecEdge>}
 */
proto.datanode.api.v2.OracleSpecsConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.OracleSpecEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.OracleSpecEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.OracleSpecEdge>} value
 * @return {!proto.datanode.api.v2.OracleSpecsConnection} returns this
*/
proto.datanode.api.v2.OracleSpecsConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.OracleSpecEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.OracleSpecEdge}
 */
proto.datanode.api.v2.OracleSpecsConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.OracleSpecEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.OracleSpecsConnection} returns this
 */
proto.datanode.api.v2.OracleSpecsConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.OracleSpecsConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.OracleSpecsConnection} returns this
*/
proto.datanode.api.v2.OracleSpecsConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.OracleSpecsConnection} returns this
 */
proto.datanode.api.v2.OracleSpecsConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.OracleSpecsConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.OracleDataEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.OracleDataEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.OracleDataEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OracleDataEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_oracle_pb.OracleData.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.OracleDataEdge}
 */
proto.datanode.api.v2.OracleDataEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.OracleDataEdge;
  return proto.datanode.api.v2.OracleDataEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.OracleDataEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.OracleDataEdge}
 */
proto.datanode.api.v2.OracleDataEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_oracle_pb.OracleData;
      reader.readMessage(value,vega_oracle_pb.OracleData.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.OracleDataEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.OracleDataEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.OracleDataEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OracleDataEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_oracle_pb.OracleData.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.OracleData node = 1;
 * @return {?proto.vega.OracleData}
 */
proto.datanode.api.v2.OracleDataEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.OracleData} */ (
    jspb.Message.getWrapperField(this, vega_oracle_pb.OracleData, 1));
};


/**
 * @param {?proto.vega.OracleData|undefined} value
 * @return {!proto.datanode.api.v2.OracleDataEdge} returns this
*/
proto.datanode.api.v2.OracleDataEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.OracleDataEdge} returns this
 */
proto.datanode.api.v2.OracleDataEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.OracleDataEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.OracleDataEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.OracleDataEdge} returns this
 */
proto.datanode.api.v2.OracleDataEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.OracleDataConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.OracleDataConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.OracleDataConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.OracleDataConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OracleDataConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.OracleDataEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.OracleDataConnection}
 */
proto.datanode.api.v2.OracleDataConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.OracleDataConnection;
  return proto.datanode.api.v2.OracleDataConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.OracleDataConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.OracleDataConnection}
 */
proto.datanode.api.v2.OracleDataConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.OracleDataEdge;
      reader.readMessage(value,proto.datanode.api.v2.OracleDataEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.OracleDataConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.OracleDataConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.OracleDataConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OracleDataConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.OracleDataEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OracleDataEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.OracleDataEdge>}
 */
proto.datanode.api.v2.OracleDataConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.OracleDataEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.OracleDataEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.OracleDataEdge>} value
 * @return {!proto.datanode.api.v2.OracleDataConnection} returns this
*/
proto.datanode.api.v2.OracleDataConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.OracleDataEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.OracleDataEdge}
 */
proto.datanode.api.v2.OracleDataConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.OracleDataEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.OracleDataConnection} returns this
 */
proto.datanode.api.v2.OracleDataConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.OracleDataConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.OracleDataConnection} returns this
*/
proto.datanode.api.v2.OracleDataConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.OracleDataConnection} returns this
 */
proto.datanode.api.v2.OracleDataConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.OracleDataConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetMarketRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetMarketRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetMarketRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMarketRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetMarketRequest}
 */
proto.datanode.api.v2.GetMarketRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetMarketRequest;
  return proto.datanode.api.v2.GetMarketRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetMarketRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetMarketRequest}
 */
proto.datanode.api.v2.GetMarketRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetMarketRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetMarketRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetMarketRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMarketRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetMarketRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetMarketRequest} returns this
 */
proto.datanode.api.v2.GetMarketRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetMarketResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetMarketResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetMarketResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMarketResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    market: (f = msg.getMarket()) && vega_markets_pb.Market.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetMarketResponse}
 */
proto.datanode.api.v2.GetMarketResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetMarketResponse;
  return proto.datanode.api.v2.GetMarketResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetMarketResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetMarketResponse}
 */
proto.datanode.api.v2.GetMarketResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_markets_pb.Market;
      reader.readMessage(value,vega_markets_pb.Market.deserializeBinaryFromReader);
      msg.setMarket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetMarketResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetMarketResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetMarketResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMarketResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarket();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_markets_pb.Market.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Market market = 1;
 * @return {?proto.vega.Market}
 */
proto.datanode.api.v2.GetMarketResponse.prototype.getMarket = function() {
  return /** @type{?proto.vega.Market} */ (
    jspb.Message.getWrapperField(this, vega_markets_pb.Market, 1));
};


/**
 * @param {?proto.vega.Market|undefined} value
 * @return {!proto.datanode.api.v2.GetMarketResponse} returns this
*/
proto.datanode.api.v2.GetMarketResponse.prototype.setMarket = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetMarketResponse} returns this
 */
proto.datanode.api.v2.GetMarketResponse.prototype.clearMarket = function() {
  return this.setMarket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetMarketResponse.prototype.hasMarket = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListMarketsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListMarketsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListMarketsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListMarketsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListMarketsRequest}
 */
proto.datanode.api.v2.ListMarketsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListMarketsRequest;
  return proto.datanode.api.v2.ListMarketsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListMarketsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListMarketsRequest}
 */
proto.datanode.api.v2.ListMarketsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListMarketsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListMarketsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListMarketsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListMarketsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListMarketsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListMarketsRequest} returns this
*/
proto.datanode.api.v2.ListMarketsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListMarketsRequest} returns this
 */
proto.datanode.api.v2.ListMarketsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListMarketsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListMarketsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListMarketsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListMarketsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListMarketsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    markets: (f = msg.getMarkets()) && proto.datanode.api.v2.MarketConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListMarketsResponse}
 */
proto.datanode.api.v2.ListMarketsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListMarketsResponse;
  return proto.datanode.api.v2.ListMarketsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListMarketsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListMarketsResponse}
 */
proto.datanode.api.v2.ListMarketsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.MarketConnection;
      reader.readMessage(value,proto.datanode.api.v2.MarketConnection.deserializeBinaryFromReader);
      msg.setMarkets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListMarketsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListMarketsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListMarketsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListMarketsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarkets();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.MarketConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional MarketConnection markets = 1;
 * @return {?proto.datanode.api.v2.MarketConnection}
 */
proto.datanode.api.v2.ListMarketsResponse.prototype.getMarkets = function() {
  return /** @type{?proto.datanode.api.v2.MarketConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.MarketConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.MarketConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListMarketsResponse} returns this
*/
proto.datanode.api.v2.ListMarketsResponse.prototype.setMarkets = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListMarketsResponse} returns this
 */
proto.datanode.api.v2.ListMarketsResponse.prototype.clearMarkets = function() {
  return this.setMarkets(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListMarketsResponse.prototype.hasMarkets = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.MarketEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.MarketEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.MarketEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_markets_pb.Market.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.MarketEdge}
 */
proto.datanode.api.v2.MarketEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.MarketEdge;
  return proto.datanode.api.v2.MarketEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.MarketEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.MarketEdge}
 */
proto.datanode.api.v2.MarketEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_markets_pb.Market;
      reader.readMessage(value,vega_markets_pb.Market.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.MarketEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.MarketEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.MarketEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_markets_pb.Market.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Market node = 1;
 * @return {?proto.vega.Market}
 */
proto.datanode.api.v2.MarketEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Market} */ (
    jspb.Message.getWrapperField(this, vega_markets_pb.Market, 1));
};


/**
 * @param {?proto.vega.Market|undefined} value
 * @return {!proto.datanode.api.v2.MarketEdge} returns this
*/
proto.datanode.api.v2.MarketEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.MarketEdge} returns this
 */
proto.datanode.api.v2.MarketEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.MarketEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.MarketEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.MarketEdge} returns this
 */
proto.datanode.api.v2.MarketEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.MarketConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.MarketConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.MarketConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.MarketConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.MarketEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.MarketConnection}
 */
proto.datanode.api.v2.MarketConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.MarketConnection;
  return proto.datanode.api.v2.MarketConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.MarketConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.MarketConnection}
 */
proto.datanode.api.v2.MarketConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.MarketEdge;
      reader.readMessage(value,proto.datanode.api.v2.MarketEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.MarketConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.MarketConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.MarketConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarketConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.MarketEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MarketEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.MarketEdge>}
 */
proto.datanode.api.v2.MarketConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.MarketEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.MarketEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.MarketEdge>} value
 * @return {!proto.datanode.api.v2.MarketConnection} returns this
*/
proto.datanode.api.v2.MarketConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.MarketEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.MarketEdge}
 */
proto.datanode.api.v2.MarketConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.MarketEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.MarketConnection} returns this
 */
proto.datanode.api.v2.MarketConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.MarketConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.MarketConnection} returns this
*/
proto.datanode.api.v2.MarketConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.MarketConnection} returns this
 */
proto.datanode.api.v2.MarketConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.MarketConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetPartyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetPartyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetPartyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetPartyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetPartyRequest}
 */
proto.datanode.api.v2.GetPartyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetPartyRequest;
  return proto.datanode.api.v2.GetPartyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetPartyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetPartyRequest}
 */
proto.datanode.api.v2.GetPartyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetPartyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetPartyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetPartyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetPartyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetPartyRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetPartyRequest} returns this
 */
proto.datanode.api.v2.GetPartyRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetPartyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetPartyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetPartyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetPartyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    party: (f = msg.getParty()) && vega_vega_pb.Party.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetPartyResponse}
 */
proto.datanode.api.v2.GetPartyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetPartyResponse;
  return proto.datanode.api.v2.GetPartyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetPartyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetPartyResponse}
 */
proto.datanode.api.v2.GetPartyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Party;
      reader.readMessage(value,vega_vega_pb.Party.deserializeBinaryFromReader);
      msg.setParty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetPartyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetPartyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetPartyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetPartyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParty();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Party.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Party party = 1;
 * @return {?proto.vega.Party}
 */
proto.datanode.api.v2.GetPartyResponse.prototype.getParty = function() {
  return /** @type{?proto.vega.Party} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Party, 1));
};


/**
 * @param {?proto.vega.Party|undefined} value
 * @return {!proto.datanode.api.v2.GetPartyResponse} returns this
*/
proto.datanode.api.v2.GetPartyResponse.prototype.setParty = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetPartyResponse} returns this
 */
proto.datanode.api.v2.GetPartyResponse.prototype.clearParty = function() {
  return this.setParty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetPartyResponse.prototype.hasParty = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListPartiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListPartiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListPartiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListPartiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListPartiesRequest}
 */
proto.datanode.api.v2.ListPartiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListPartiesRequest;
  return proto.datanode.api.v2.ListPartiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListPartiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListPartiesRequest}
 */
proto.datanode.api.v2.ListPartiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListPartiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListPartiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListPartiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListPartiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListPartiesRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListPartiesRequest} returns this
 */
proto.datanode.api.v2.ListPartiesRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListPartiesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListPartiesRequest} returns this
*/
proto.datanode.api.v2.ListPartiesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListPartiesRequest} returns this
 */
proto.datanode.api.v2.ListPartiesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListPartiesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListPartiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListPartiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListPartiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListPartiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    parties: (f = msg.getParties()) && proto.datanode.api.v2.PartyConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListPartiesResponse}
 */
proto.datanode.api.v2.ListPartiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListPartiesResponse;
  return proto.datanode.api.v2.ListPartiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListPartiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListPartiesResponse}
 */
proto.datanode.api.v2.ListPartiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.PartyConnection;
      reader.readMessage(value,proto.datanode.api.v2.PartyConnection.deserializeBinaryFromReader);
      msg.setParties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListPartiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListPartiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListPartiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListPartiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParties();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.PartyConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional PartyConnection parties = 1;
 * @return {?proto.datanode.api.v2.PartyConnection}
 */
proto.datanode.api.v2.ListPartiesResponse.prototype.getParties = function() {
  return /** @type{?proto.datanode.api.v2.PartyConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PartyConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.PartyConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListPartiesResponse} returns this
*/
proto.datanode.api.v2.ListPartiesResponse.prototype.setParties = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListPartiesResponse} returns this
 */
proto.datanode.api.v2.ListPartiesResponse.prototype.clearParties = function() {
  return this.setParties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListPartiesResponse.prototype.hasParties = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.PartyEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.PartyEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.PartyEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PartyEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.Party.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.PartyEdge}
 */
proto.datanode.api.v2.PartyEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.PartyEdge;
  return proto.datanode.api.v2.PartyEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.PartyEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.PartyEdge}
 */
proto.datanode.api.v2.PartyEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Party;
      reader.readMessage(value,vega_vega_pb.Party.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.PartyEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.PartyEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.PartyEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PartyEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Party.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Party node = 1;
 * @return {?proto.vega.Party}
 */
proto.datanode.api.v2.PartyEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Party} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Party, 1));
};


/**
 * @param {?proto.vega.Party|undefined} value
 * @return {!proto.datanode.api.v2.PartyEdge} returns this
*/
proto.datanode.api.v2.PartyEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.PartyEdge} returns this
 */
proto.datanode.api.v2.PartyEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.PartyEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.PartyEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.PartyEdge} returns this
 */
proto.datanode.api.v2.PartyEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.PartyConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.PartyConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.PartyConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.PartyConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PartyConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.PartyEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.PartyConnection}
 */
proto.datanode.api.v2.PartyConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.PartyConnection;
  return proto.datanode.api.v2.PartyConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.PartyConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.PartyConnection}
 */
proto.datanode.api.v2.PartyConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.PartyEdge;
      reader.readMessage(value,proto.datanode.api.v2.PartyEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.PartyConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.PartyConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.PartyConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PartyConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.PartyEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PartyEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.PartyEdge>}
 */
proto.datanode.api.v2.PartyConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.PartyEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.PartyEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.PartyEdge>} value
 * @return {!proto.datanode.api.v2.PartyConnection} returns this
*/
proto.datanode.api.v2.PartyConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.PartyEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.PartyEdge}
 */
proto.datanode.api.v2.PartyConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.PartyEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.PartyConnection} returns this
 */
proto.datanode.api.v2.PartyConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.PartyConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.PartyConnection} returns this
*/
proto.datanode.api.v2.PartyConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.PartyConnection} returns this
 */
proto.datanode.api.v2.PartyConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.PartyConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.OrderEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.OrderEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.OrderEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OrderEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.Order.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.OrderEdge}
 */
proto.datanode.api.v2.OrderEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.OrderEdge;
  return proto.datanode.api.v2.OrderEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.OrderEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.OrderEdge}
 */
proto.datanode.api.v2.OrderEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Order;
      reader.readMessage(value,vega_vega_pb.Order.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.OrderEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.OrderEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.OrderEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OrderEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Order.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Order node = 1;
 * @return {?proto.vega.Order}
 */
proto.datanode.api.v2.OrderEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Order} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Order, 1));
};


/**
 * @param {?proto.vega.Order|undefined} value
 * @return {!proto.datanode.api.v2.OrderEdge} returns this
*/
proto.datanode.api.v2.OrderEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.OrderEdge} returns this
 */
proto.datanode.api.v2.OrderEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.OrderEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.OrderEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.OrderEdge} returns this
 */
proto.datanode.api.v2.OrderEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListMarginLevelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListMarginLevelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListMarginLevelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListMarginLevelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListMarginLevelsRequest}
 */
proto.datanode.api.v2.ListMarginLevelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListMarginLevelsRequest;
  return proto.datanode.api.v2.ListMarginLevelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListMarginLevelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListMarginLevelsRequest}
 */
proto.datanode.api.v2.ListMarginLevelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListMarginLevelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListMarginLevelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListMarginLevelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListMarginLevelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListMarginLevelsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListMarginLevelsRequest} returns this
 */
proto.datanode.api.v2.ListMarginLevelsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListMarginLevelsRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListMarginLevelsRequest} returns this
 */
proto.datanode.api.v2.ListMarginLevelsRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListMarginLevelsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 3));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListMarginLevelsRequest} returns this
*/
proto.datanode.api.v2.ListMarginLevelsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListMarginLevelsRequest} returns this
 */
proto.datanode.api.v2.ListMarginLevelsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListMarginLevelsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListMarginLevelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListMarginLevelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListMarginLevelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListMarginLevelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marginLevels: (f = msg.getMarginLevels()) && proto.datanode.api.v2.MarginConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListMarginLevelsResponse}
 */
proto.datanode.api.v2.ListMarginLevelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListMarginLevelsResponse;
  return proto.datanode.api.v2.ListMarginLevelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListMarginLevelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListMarginLevelsResponse}
 */
proto.datanode.api.v2.ListMarginLevelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.MarginConnection;
      reader.readMessage(value,proto.datanode.api.v2.MarginConnection.deserializeBinaryFromReader);
      msg.setMarginLevels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListMarginLevelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListMarginLevelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListMarginLevelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListMarginLevelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarginLevels();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.MarginConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional MarginConnection margin_levels = 1;
 * @return {?proto.datanode.api.v2.MarginConnection}
 */
proto.datanode.api.v2.ListMarginLevelsResponse.prototype.getMarginLevels = function() {
  return /** @type{?proto.datanode.api.v2.MarginConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.MarginConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.MarginConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListMarginLevelsResponse} returns this
*/
proto.datanode.api.v2.ListMarginLevelsResponse.prototype.setMarginLevels = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListMarginLevelsResponse} returns this
 */
proto.datanode.api.v2.ListMarginLevelsResponse.prototype.clearMarginLevels = function() {
  return this.setMarginLevels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListMarginLevelsResponse.prototype.hasMarginLevels = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveMarginLevelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveMarginLevelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    marketId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveMarginLevelsRequest}
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveMarginLevelsRequest;
  return proto.datanode.api.v2.ObserveMarginLevelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveMarginLevelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveMarginLevelsRequest}
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveMarginLevelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveMarginLevelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveMarginLevelsRequest} returns this
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveMarginLevelsRequest} returns this
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveMarginLevelsRequest} returns this
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.prototype.clearMarketId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveMarginLevelsRequest.prototype.hasMarketId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveMarginLevelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveMarginLevelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveMarginLevelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarginLevelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marginLevels: (f = msg.getMarginLevels()) && vega_vega_pb.MarginLevels.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveMarginLevelsResponse}
 */
proto.datanode.api.v2.ObserveMarginLevelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveMarginLevelsResponse;
  return proto.datanode.api.v2.ObserveMarginLevelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveMarginLevelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveMarginLevelsResponse}
 */
proto.datanode.api.v2.ObserveMarginLevelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.MarginLevels;
      reader.readMessage(value,vega_vega_pb.MarginLevels.deserializeBinaryFromReader);
      msg.setMarginLevels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveMarginLevelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveMarginLevelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveMarginLevelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveMarginLevelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarginLevels();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.MarginLevels.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.MarginLevels margin_levels = 1;
 * @return {?proto.vega.MarginLevels}
 */
proto.datanode.api.v2.ObserveMarginLevelsResponse.prototype.getMarginLevels = function() {
  return /** @type{?proto.vega.MarginLevels} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.MarginLevels, 1));
};


/**
 * @param {?proto.vega.MarginLevels|undefined} value
 * @return {!proto.datanode.api.v2.ObserveMarginLevelsResponse} returns this
*/
proto.datanode.api.v2.ObserveMarginLevelsResponse.prototype.setMarginLevels = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveMarginLevelsResponse} returns this
 */
proto.datanode.api.v2.ObserveMarginLevelsResponse.prototype.clearMarginLevels = function() {
  return this.setMarginLevels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveMarginLevelsResponse.prototype.hasMarginLevels = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.OrderConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.OrderConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.OrderConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.OrderConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OrderConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.OrderEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.OrderConnection}
 */
proto.datanode.api.v2.OrderConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.OrderConnection;
  return proto.datanode.api.v2.OrderConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.OrderConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.OrderConnection}
 */
proto.datanode.api.v2.OrderConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.OrderEdge;
      reader.readMessage(value,proto.datanode.api.v2.OrderEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.OrderConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.OrderConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.OrderConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.OrderConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.OrderEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OrderEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.OrderEdge>}
 */
proto.datanode.api.v2.OrderConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.OrderEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.OrderEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.OrderEdge>} value
 * @return {!proto.datanode.api.v2.OrderConnection} returns this
*/
proto.datanode.api.v2.OrderConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.OrderEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.OrderEdge}
 */
proto.datanode.api.v2.OrderConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.OrderEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.OrderConnection} returns this
 */
proto.datanode.api.v2.OrderConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.OrderConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.OrderConnection} returns this
*/
proto.datanode.api.v2.OrderConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.OrderConnection} returns this
 */
proto.datanode.api.v2.OrderConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.OrderConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.MarginEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.MarginEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.MarginEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarginEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.MarginLevels.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.MarginEdge}
 */
proto.datanode.api.v2.MarginEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.MarginEdge;
  return proto.datanode.api.v2.MarginEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.MarginEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.MarginEdge}
 */
proto.datanode.api.v2.MarginEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.MarginLevels;
      reader.readMessage(value,vega_vega_pb.MarginLevels.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.MarginEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.MarginEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.MarginEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarginEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.MarginLevels.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.MarginLevels node = 1;
 * @return {?proto.vega.MarginLevels}
 */
proto.datanode.api.v2.MarginEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.MarginLevels} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.MarginLevels, 1));
};


/**
 * @param {?proto.vega.MarginLevels|undefined} value
 * @return {!proto.datanode.api.v2.MarginEdge} returns this
*/
proto.datanode.api.v2.MarginEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.MarginEdge} returns this
 */
proto.datanode.api.v2.MarginEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.MarginEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.MarginEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.MarginEdge} returns this
 */
proto.datanode.api.v2.MarginEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.MarginConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.MarginConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.MarginConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.MarginConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarginConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.MarginEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.MarginConnection}
 */
proto.datanode.api.v2.MarginConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.MarginConnection;
  return proto.datanode.api.v2.MarginConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.MarginConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.MarginConnection}
 */
proto.datanode.api.v2.MarginConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.MarginEdge;
      reader.readMessage(value,proto.datanode.api.v2.MarginEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.MarginConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.MarginConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.MarginConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.MarginConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.MarginEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MarginEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.MarginEdge>}
 */
proto.datanode.api.v2.MarginConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.MarginEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.MarginEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.MarginEdge>} value
 * @return {!proto.datanode.api.v2.MarginConnection} returns this
*/
proto.datanode.api.v2.MarginConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.MarginEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.MarginEdge}
 */
proto.datanode.api.v2.MarginConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.MarginEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.MarginConnection} returns this
 */
proto.datanode.api.v2.MarginConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.MarginConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.MarginConnection} returns this
*/
proto.datanode.api.v2.MarginConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.MarginConnection} returns this
 */
proto.datanode.api.v2.MarginConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.MarginConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListRewardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListRewardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListRewardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListRewardsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    assetId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListRewardsRequest}
 */
proto.datanode.api.v2.ListRewardsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListRewardsRequest;
  return proto.datanode.api.v2.ListRewardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListRewardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListRewardsRequest}
 */
proto.datanode.api.v2.ListRewardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListRewardsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListRewardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListRewardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListRewardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListRewardsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListRewardsRequest} returns this
 */
proto.datanode.api.v2.ListRewardsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string asset_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListRewardsRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListRewardsRequest} returns this
 */
proto.datanode.api.v2.ListRewardsRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListRewardsRequest} returns this
 */
proto.datanode.api.v2.ListRewardsRequest.prototype.clearAssetId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListRewardsRequest.prototype.hasAssetId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListRewardsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 3));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListRewardsRequest} returns this
*/
proto.datanode.api.v2.ListRewardsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListRewardsRequest} returns this
 */
proto.datanode.api.v2.ListRewardsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListRewardsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListRewardsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListRewardsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListRewardsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListRewardsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rewards: (f = msg.getRewards()) && proto.datanode.api.v2.RewardsConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListRewardsResponse}
 */
proto.datanode.api.v2.ListRewardsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListRewardsResponse;
  return proto.datanode.api.v2.ListRewardsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListRewardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListRewardsResponse}
 */
proto.datanode.api.v2.ListRewardsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.RewardsConnection;
      reader.readMessage(value,proto.datanode.api.v2.RewardsConnection.deserializeBinaryFromReader);
      msg.setRewards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListRewardsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListRewardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListRewardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListRewardsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRewards();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.RewardsConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional RewardsConnection rewards = 1;
 * @return {?proto.datanode.api.v2.RewardsConnection}
 */
proto.datanode.api.v2.ListRewardsResponse.prototype.getRewards = function() {
  return /** @type{?proto.datanode.api.v2.RewardsConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.RewardsConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.RewardsConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListRewardsResponse} returns this
*/
proto.datanode.api.v2.ListRewardsResponse.prototype.setRewards = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListRewardsResponse} returns this
 */
proto.datanode.api.v2.ListRewardsResponse.prototype.clearRewards = function() {
  return this.setRewards(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListRewardsResponse.prototype.hasRewards = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.RewardEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.RewardEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.RewardEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.RewardEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.Reward.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.RewardEdge}
 */
proto.datanode.api.v2.RewardEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.RewardEdge;
  return proto.datanode.api.v2.RewardEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.RewardEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.RewardEdge}
 */
proto.datanode.api.v2.RewardEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Reward;
      reader.readMessage(value,vega_vega_pb.Reward.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.RewardEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.RewardEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.RewardEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.RewardEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Reward.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Reward node = 1;
 * @return {?proto.vega.Reward}
 */
proto.datanode.api.v2.RewardEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Reward} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Reward, 1));
};


/**
 * @param {?proto.vega.Reward|undefined} value
 * @return {!proto.datanode.api.v2.RewardEdge} returns this
*/
proto.datanode.api.v2.RewardEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.RewardEdge} returns this
 */
proto.datanode.api.v2.RewardEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.RewardEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.RewardEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.RewardEdge} returns this
 */
proto.datanode.api.v2.RewardEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.RewardsConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.RewardsConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.RewardsConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.RewardsConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.RewardsConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.RewardEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.RewardsConnection}
 */
proto.datanode.api.v2.RewardsConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.RewardsConnection;
  return proto.datanode.api.v2.RewardsConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.RewardsConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.RewardsConnection}
 */
proto.datanode.api.v2.RewardsConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.RewardEdge;
      reader.readMessage(value,proto.datanode.api.v2.RewardEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.RewardsConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.RewardsConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.RewardsConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.RewardsConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.RewardEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RewardEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.RewardEdge>}
 */
proto.datanode.api.v2.RewardsConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.RewardEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.RewardEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.RewardEdge>} value
 * @return {!proto.datanode.api.v2.RewardsConnection} returns this
*/
proto.datanode.api.v2.RewardsConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.RewardEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.RewardEdge}
 */
proto.datanode.api.v2.RewardsConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.RewardEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.RewardsConnection} returns this
 */
proto.datanode.api.v2.RewardsConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.RewardsConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.RewardsConnection} returns this
*/
proto.datanode.api.v2.RewardsConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.RewardsConnection} returns this
 */
proto.datanode.api.v2.RewardsConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.RewardsConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListRewardSummariesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListRewardSummariesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListRewardSummariesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    assetId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListRewardSummariesRequest}
 */
proto.datanode.api.v2.ListRewardSummariesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListRewardSummariesRequest;
  return proto.datanode.api.v2.ListRewardSummariesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListRewardSummariesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListRewardSummariesRequest}
 */
proto.datanode.api.v2.ListRewardSummariesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListRewardSummariesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListRewardSummariesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListRewardSummariesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListRewardSummariesRequest} returns this
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListRewardSummariesRequest} returns this
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string asset_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListRewardSummariesRequest} returns this
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListRewardSummariesRequest} returns this
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.clearAssetId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.hasAssetId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 3));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListRewardSummariesRequest} returns this
*/
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListRewardSummariesRequest} returns this
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListRewardSummariesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ListRewardSummariesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListRewardSummariesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListRewardSummariesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListRewardSummariesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListRewardSummariesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    summariesList: jspb.Message.toObjectList(msg.getSummariesList(),
    vega_vega_pb.RewardSummary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListRewardSummariesResponse}
 */
proto.datanode.api.v2.ListRewardSummariesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListRewardSummariesResponse;
  return proto.datanode.api.v2.ListRewardSummariesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListRewardSummariesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListRewardSummariesResponse}
 */
proto.datanode.api.v2.ListRewardSummariesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.RewardSummary;
      reader.readMessage(value,vega_vega_pb.RewardSummary.deserializeBinaryFromReader);
      msg.addSummaries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListRewardSummariesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListRewardSummariesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListRewardSummariesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListRewardSummariesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSummariesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.RewardSummary.serializeBinaryToWriter
    );
  }
};


/**
 * repeated vega.RewardSummary summaries = 1;
 * @return {!Array<!proto.vega.RewardSummary>}
 */
proto.datanode.api.v2.ListRewardSummariesResponse.prototype.getSummariesList = function() {
  return /** @type{!Array<!proto.vega.RewardSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.RewardSummary, 1));
};


/**
 * @param {!Array<!proto.vega.RewardSummary>} value
 * @return {!proto.datanode.api.v2.ListRewardSummariesResponse} returns this
*/
proto.datanode.api.v2.ListRewardSummariesResponse.prototype.setSummariesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.RewardSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.RewardSummary}
 */
proto.datanode.api.v2.ListRewardSummariesResponse.prototype.addSummaries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.RewardSummary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ListRewardSummariesResponse} returns this
 */
proto.datanode.api.v2.ListRewardSummariesResponse.prototype.clearSummariesList = function() {
  return this.setSummariesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListEpochRewardSummariesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListEpochRewardSummariesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromEpoch: jspb.Message.getFieldWithDefault(msg, 1, 0),
    toEpoch: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesRequest}
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListEpochRewardSummariesRequest;
  return proto.datanode.api.v2.ListEpochRewardSummariesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListEpochRewardSummariesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesRequest}
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFromEpoch(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setToEpoch(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListEpochRewardSummariesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListEpochRewardSummariesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 from_epoch = 1;
 * @return {number}
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.getFromEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesRequest} returns this
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.setFromEpoch = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesRequest} returns this
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.clearFromEpoch = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.hasFromEpoch = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 to_epoch = 2;
 * @return {number}
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.getToEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesRequest} returns this
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.setToEpoch = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesRequest} returns this
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.clearToEpoch = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.hasToEpoch = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 3));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesRequest} returns this
*/
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesRequest} returns this
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListEpochRewardSummariesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListEpochRewardSummariesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListEpochRewardSummariesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListEpochRewardSummariesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListEpochRewardSummariesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    summaries: (f = msg.getSummaries()) && proto.datanode.api.v2.EpochRewardSummaryConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesResponse}
 */
proto.datanode.api.v2.ListEpochRewardSummariesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListEpochRewardSummariesResponse;
  return proto.datanode.api.v2.ListEpochRewardSummariesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListEpochRewardSummariesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesResponse}
 */
proto.datanode.api.v2.ListEpochRewardSummariesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.EpochRewardSummaryConnection;
      reader.readMessage(value,proto.datanode.api.v2.EpochRewardSummaryConnection.deserializeBinaryFromReader);
      msg.setSummaries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListEpochRewardSummariesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListEpochRewardSummariesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListEpochRewardSummariesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListEpochRewardSummariesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSummaries();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.EpochRewardSummaryConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional EpochRewardSummaryConnection summaries = 1;
 * @return {?proto.datanode.api.v2.EpochRewardSummaryConnection}
 */
proto.datanode.api.v2.ListEpochRewardSummariesResponse.prototype.getSummaries = function() {
  return /** @type{?proto.datanode.api.v2.EpochRewardSummaryConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.EpochRewardSummaryConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.EpochRewardSummaryConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesResponse} returns this
*/
proto.datanode.api.v2.ListEpochRewardSummariesResponse.prototype.setSummaries = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListEpochRewardSummariesResponse} returns this
 */
proto.datanode.api.v2.ListEpochRewardSummariesResponse.prototype.clearSummaries = function() {
  return this.setSummaries(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListEpochRewardSummariesResponse.prototype.hasSummaries = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.EpochRewardSummaryConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.EpochRewardSummaryConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.EpochRewardSummaryEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.EpochRewardSummaryConnection}
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.EpochRewardSummaryConnection;
  return proto.datanode.api.v2.EpochRewardSummaryConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.EpochRewardSummaryConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.EpochRewardSummaryConnection}
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.EpochRewardSummaryEdge;
      reader.readMessage(value,proto.datanode.api.v2.EpochRewardSummaryEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.EpochRewardSummaryConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.EpochRewardSummaryConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.EpochRewardSummaryEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EpochRewardSummaryEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.EpochRewardSummaryEdge>}
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.EpochRewardSummaryEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.EpochRewardSummaryEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.EpochRewardSummaryEdge>} value
 * @return {!proto.datanode.api.v2.EpochRewardSummaryConnection} returns this
*/
proto.datanode.api.v2.EpochRewardSummaryConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.EpochRewardSummaryEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.EpochRewardSummaryEdge}
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.EpochRewardSummaryEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.EpochRewardSummaryConnection} returns this
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.EpochRewardSummaryConnection} returns this
*/
proto.datanode.api.v2.EpochRewardSummaryConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.EpochRewardSummaryConnection} returns this
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.EpochRewardSummaryConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.EpochRewardSummaryEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.EpochRewardSummaryEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.EpochRewardSummaryEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EpochRewardSummaryEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.EpochRewardSummary.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.EpochRewardSummaryEdge}
 */
proto.datanode.api.v2.EpochRewardSummaryEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.EpochRewardSummaryEdge;
  return proto.datanode.api.v2.EpochRewardSummaryEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.EpochRewardSummaryEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.EpochRewardSummaryEdge}
 */
proto.datanode.api.v2.EpochRewardSummaryEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.EpochRewardSummary;
      reader.readMessage(value,vega_vega_pb.EpochRewardSummary.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.EpochRewardSummaryEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.EpochRewardSummaryEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.EpochRewardSummaryEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EpochRewardSummaryEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.EpochRewardSummary.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.EpochRewardSummary node = 1;
 * @return {?proto.vega.EpochRewardSummary}
 */
proto.datanode.api.v2.EpochRewardSummaryEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.EpochRewardSummary} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.EpochRewardSummary, 1));
};


/**
 * @param {?proto.vega.EpochRewardSummary|undefined} value
 * @return {!proto.datanode.api.v2.EpochRewardSummaryEdge} returns this
*/
proto.datanode.api.v2.EpochRewardSummaryEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.EpochRewardSummaryEdge} returns this
 */
proto.datanode.api.v2.EpochRewardSummaryEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.EpochRewardSummaryEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.EpochRewardSummaryEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.EpochRewardSummaryEdge} returns this
 */
proto.datanode.api.v2.EpochRewardSummaryEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveRewardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveRewardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveRewardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveRewardsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partyId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveRewardsRequest}
 */
proto.datanode.api.v2.ObserveRewardsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveRewardsRequest;
  return proto.datanode.api.v2.ObserveRewardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveRewardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveRewardsRequest}
 */
proto.datanode.api.v2.ObserveRewardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveRewardsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveRewardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveRewardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveRewardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ObserveRewardsRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveRewardsRequest} returns this
 */
proto.datanode.api.v2.ObserveRewardsRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveRewardsRequest} returns this
 */
proto.datanode.api.v2.ObserveRewardsRequest.prototype.clearAssetId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveRewardsRequest.prototype.hasAssetId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string party_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ObserveRewardsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveRewardsRequest} returns this
 */
proto.datanode.api.v2.ObserveRewardsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveRewardsRequest} returns this
 */
proto.datanode.api.v2.ObserveRewardsRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveRewardsRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveRewardsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveRewardsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveRewardsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveRewardsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reward: (f = msg.getReward()) && vega_vega_pb.Reward.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveRewardsResponse}
 */
proto.datanode.api.v2.ObserveRewardsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveRewardsResponse;
  return proto.datanode.api.v2.ObserveRewardsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveRewardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveRewardsResponse}
 */
proto.datanode.api.v2.ObserveRewardsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Reward;
      reader.readMessage(value,vega_vega_pb.Reward.deserializeBinaryFromReader);
      msg.setReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveRewardsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveRewardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveRewardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveRewardsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReward();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Reward.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Reward reward = 1;
 * @return {?proto.vega.Reward}
 */
proto.datanode.api.v2.ObserveRewardsResponse.prototype.getReward = function() {
  return /** @type{?proto.vega.Reward} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Reward, 1));
};


/**
 * @param {?proto.vega.Reward|undefined} value
 * @return {!proto.datanode.api.v2.ObserveRewardsResponse} returns this
*/
proto.datanode.api.v2.ObserveRewardsResponse.prototype.setReward = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveRewardsResponse} returns this
 */
proto.datanode.api.v2.ObserveRewardsResponse.prototype.clearReward = function() {
  return this.setReward(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveRewardsResponse.prototype.hasReward = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetDepositRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetDepositRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetDepositRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetDepositRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetDepositRequest}
 */
proto.datanode.api.v2.GetDepositRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetDepositRequest;
  return proto.datanode.api.v2.GetDepositRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetDepositRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetDepositRequest}
 */
proto.datanode.api.v2.GetDepositRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetDepositRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetDepositRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetDepositRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetDepositRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetDepositRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetDepositRequest} returns this
 */
proto.datanode.api.v2.GetDepositRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetDepositResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetDepositResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetDepositResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetDepositResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deposit: (f = msg.getDeposit()) && vega_vega_pb.Deposit.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetDepositResponse}
 */
proto.datanode.api.v2.GetDepositResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetDepositResponse;
  return proto.datanode.api.v2.GetDepositResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetDepositResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetDepositResponse}
 */
proto.datanode.api.v2.GetDepositResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Deposit;
      reader.readMessage(value,vega_vega_pb.Deposit.deserializeBinaryFromReader);
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetDepositResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetDepositResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetDepositResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetDepositResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeposit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Deposit.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Deposit deposit = 1;
 * @return {?proto.vega.Deposit}
 */
proto.datanode.api.v2.GetDepositResponse.prototype.getDeposit = function() {
  return /** @type{?proto.vega.Deposit} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Deposit, 1));
};


/**
 * @param {?proto.vega.Deposit|undefined} value
 * @return {!proto.datanode.api.v2.GetDepositResponse} returns this
*/
proto.datanode.api.v2.GetDepositResponse.prototype.setDeposit = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetDepositResponse} returns this
 */
proto.datanode.api.v2.GetDepositResponse.prototype.clearDeposit = function() {
  return this.setDeposit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetDepositResponse.prototype.hasDeposit = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListDepositsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListDepositsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListDepositsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListDepositsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f),
    dateRange: (f = msg.getDateRange()) && proto.datanode.api.v2.DateRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListDepositsRequest}
 */
proto.datanode.api.v2.ListDepositsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListDepositsRequest;
  return proto.datanode.api.v2.ListDepositsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListDepositsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListDepositsRequest}
 */
proto.datanode.api.v2.ListDepositsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.DateRange;
      reader.readMessage(value,proto.datanode.api.v2.DateRange.deserializeBinaryFromReader);
      msg.setDateRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListDepositsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListDepositsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListDepositsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListDepositsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getDateRange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.DateRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListDepositsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListDepositsRequest} returns this
 */
proto.datanode.api.v2.ListDepositsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListDepositsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListDepositsRequest} returns this
*/
proto.datanode.api.v2.ListDepositsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListDepositsRequest} returns this
 */
proto.datanode.api.v2.ListDepositsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListDepositsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DateRange date_range = 3;
 * @return {?proto.datanode.api.v2.DateRange}
 */
proto.datanode.api.v2.ListDepositsRequest.prototype.getDateRange = function() {
  return /** @type{?proto.datanode.api.v2.DateRange} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.DateRange, 3));
};


/**
 * @param {?proto.datanode.api.v2.DateRange|undefined} value
 * @return {!proto.datanode.api.v2.ListDepositsRequest} returns this
*/
proto.datanode.api.v2.ListDepositsRequest.prototype.setDateRange = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListDepositsRequest} returns this
 */
proto.datanode.api.v2.ListDepositsRequest.prototype.clearDateRange = function() {
  return this.setDateRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListDepositsRequest.prototype.hasDateRange = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListDepositsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListDepositsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListDepositsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListDepositsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deposits: (f = msg.getDeposits()) && proto.datanode.api.v2.DepositsConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListDepositsResponse}
 */
proto.datanode.api.v2.ListDepositsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListDepositsResponse;
  return proto.datanode.api.v2.ListDepositsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListDepositsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListDepositsResponse}
 */
proto.datanode.api.v2.ListDepositsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.DepositsConnection;
      reader.readMessage(value,proto.datanode.api.v2.DepositsConnection.deserializeBinaryFromReader);
      msg.setDeposits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListDepositsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListDepositsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListDepositsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListDepositsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeposits();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.DepositsConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional DepositsConnection deposits = 1;
 * @return {?proto.datanode.api.v2.DepositsConnection}
 */
proto.datanode.api.v2.ListDepositsResponse.prototype.getDeposits = function() {
  return /** @type{?proto.datanode.api.v2.DepositsConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.DepositsConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.DepositsConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListDepositsResponse} returns this
*/
proto.datanode.api.v2.ListDepositsResponse.prototype.setDeposits = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListDepositsResponse} returns this
 */
proto.datanode.api.v2.ListDepositsResponse.prototype.clearDeposits = function() {
  return this.setDeposits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListDepositsResponse.prototype.hasDeposits = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.DepositEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.DepositEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.DepositEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.DepositEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.Deposit.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.DepositEdge}
 */
proto.datanode.api.v2.DepositEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.DepositEdge;
  return proto.datanode.api.v2.DepositEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.DepositEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.DepositEdge}
 */
proto.datanode.api.v2.DepositEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Deposit;
      reader.readMessage(value,vega_vega_pb.Deposit.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.DepositEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.DepositEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.DepositEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.DepositEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Deposit.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Deposit node = 1;
 * @return {?proto.vega.Deposit}
 */
proto.datanode.api.v2.DepositEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Deposit} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Deposit, 1));
};


/**
 * @param {?proto.vega.Deposit|undefined} value
 * @return {!proto.datanode.api.v2.DepositEdge} returns this
*/
proto.datanode.api.v2.DepositEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.DepositEdge} returns this
 */
proto.datanode.api.v2.DepositEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.DepositEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.DepositEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.DepositEdge} returns this
 */
proto.datanode.api.v2.DepositEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.DepositsConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.DepositsConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.DepositsConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.DepositsConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.DepositsConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.DepositEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.DepositsConnection}
 */
proto.datanode.api.v2.DepositsConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.DepositsConnection;
  return proto.datanode.api.v2.DepositsConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.DepositsConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.DepositsConnection}
 */
proto.datanode.api.v2.DepositsConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.DepositEdge;
      reader.readMessage(value,proto.datanode.api.v2.DepositEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.DepositsConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.DepositsConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.DepositsConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.DepositsConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.DepositEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DepositEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.DepositEdge>}
 */
proto.datanode.api.v2.DepositsConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.DepositEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.DepositEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.DepositEdge>} value
 * @return {!proto.datanode.api.v2.DepositsConnection} returns this
*/
proto.datanode.api.v2.DepositsConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.DepositEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.DepositEdge}
 */
proto.datanode.api.v2.DepositsConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.DepositEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.DepositsConnection} returns this
 */
proto.datanode.api.v2.DepositsConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.DepositsConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.DepositsConnection} returns this
*/
proto.datanode.api.v2.DepositsConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.DepositsConnection} returns this
 */
proto.datanode.api.v2.DepositsConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.DepositsConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetWithdrawalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetWithdrawalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetWithdrawalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetWithdrawalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetWithdrawalRequest}
 */
proto.datanode.api.v2.GetWithdrawalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetWithdrawalRequest;
  return proto.datanode.api.v2.GetWithdrawalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetWithdrawalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetWithdrawalRequest}
 */
proto.datanode.api.v2.GetWithdrawalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetWithdrawalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetWithdrawalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetWithdrawalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetWithdrawalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetWithdrawalRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetWithdrawalRequest} returns this
 */
proto.datanode.api.v2.GetWithdrawalRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetWithdrawalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetWithdrawalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetWithdrawalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetWithdrawalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    withdrawal: (f = msg.getWithdrawal()) && vega_vega_pb.Withdrawal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetWithdrawalResponse}
 */
proto.datanode.api.v2.GetWithdrawalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetWithdrawalResponse;
  return proto.datanode.api.v2.GetWithdrawalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetWithdrawalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetWithdrawalResponse}
 */
proto.datanode.api.v2.GetWithdrawalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Withdrawal;
      reader.readMessage(value,vega_vega_pb.Withdrawal.deserializeBinaryFromReader);
      msg.setWithdrawal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetWithdrawalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetWithdrawalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetWithdrawalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetWithdrawalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawal();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Withdrawal.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Withdrawal withdrawal = 1;
 * @return {?proto.vega.Withdrawal}
 */
proto.datanode.api.v2.GetWithdrawalResponse.prototype.getWithdrawal = function() {
  return /** @type{?proto.vega.Withdrawal} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Withdrawal, 1));
};


/**
 * @param {?proto.vega.Withdrawal|undefined} value
 * @return {!proto.datanode.api.v2.GetWithdrawalResponse} returns this
*/
proto.datanode.api.v2.GetWithdrawalResponse.prototype.setWithdrawal = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetWithdrawalResponse} returns this
 */
proto.datanode.api.v2.GetWithdrawalResponse.prototype.clearWithdrawal = function() {
  return this.setWithdrawal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetWithdrawalResponse.prototype.hasWithdrawal = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListWithdrawalsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListWithdrawalsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListWithdrawalsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f),
    dateRange: (f = msg.getDateRange()) && proto.datanode.api.v2.DateRange.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListWithdrawalsRequest}
 */
proto.datanode.api.v2.ListWithdrawalsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListWithdrawalsRequest;
  return proto.datanode.api.v2.ListWithdrawalsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListWithdrawalsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListWithdrawalsRequest}
 */
proto.datanode.api.v2.ListWithdrawalsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.DateRange;
      reader.readMessage(value,proto.datanode.api.v2.DateRange.deserializeBinaryFromReader);
      msg.setDateRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListWithdrawalsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListWithdrawalsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListWithdrawalsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
  f = message.getDateRange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.DateRange.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListWithdrawalsRequest} returns this
 */
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListWithdrawalsRequest} returns this
*/
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListWithdrawalsRequest} returns this
 */
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DateRange date_range = 3;
 * @return {?proto.datanode.api.v2.DateRange}
 */
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.getDateRange = function() {
  return /** @type{?proto.datanode.api.v2.DateRange} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.DateRange, 3));
};


/**
 * @param {?proto.datanode.api.v2.DateRange|undefined} value
 * @return {!proto.datanode.api.v2.ListWithdrawalsRequest} returns this
*/
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.setDateRange = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListWithdrawalsRequest} returns this
 */
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.clearDateRange = function() {
  return this.setDateRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListWithdrawalsRequest.prototype.hasDateRange = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListWithdrawalsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListWithdrawalsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListWithdrawalsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListWithdrawalsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    withdrawals: (f = msg.getWithdrawals()) && proto.datanode.api.v2.WithdrawalsConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListWithdrawalsResponse}
 */
proto.datanode.api.v2.ListWithdrawalsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListWithdrawalsResponse;
  return proto.datanode.api.v2.ListWithdrawalsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListWithdrawalsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListWithdrawalsResponse}
 */
proto.datanode.api.v2.ListWithdrawalsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.WithdrawalsConnection;
      reader.readMessage(value,proto.datanode.api.v2.WithdrawalsConnection.deserializeBinaryFromReader);
      msg.setWithdrawals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListWithdrawalsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListWithdrawalsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListWithdrawalsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListWithdrawalsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawals();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.WithdrawalsConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional WithdrawalsConnection withdrawals = 1;
 * @return {?proto.datanode.api.v2.WithdrawalsConnection}
 */
proto.datanode.api.v2.ListWithdrawalsResponse.prototype.getWithdrawals = function() {
  return /** @type{?proto.datanode.api.v2.WithdrawalsConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.WithdrawalsConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.WithdrawalsConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListWithdrawalsResponse} returns this
*/
proto.datanode.api.v2.ListWithdrawalsResponse.prototype.setWithdrawals = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListWithdrawalsResponse} returns this
 */
proto.datanode.api.v2.ListWithdrawalsResponse.prototype.clearWithdrawals = function() {
  return this.setWithdrawals(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListWithdrawalsResponse.prototype.hasWithdrawals = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.WithdrawalEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.WithdrawalEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.WithdrawalEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.WithdrawalEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.Withdrawal.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.WithdrawalEdge}
 */
proto.datanode.api.v2.WithdrawalEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.WithdrawalEdge;
  return proto.datanode.api.v2.WithdrawalEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.WithdrawalEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.WithdrawalEdge}
 */
proto.datanode.api.v2.WithdrawalEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Withdrawal;
      reader.readMessage(value,vega_vega_pb.Withdrawal.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.WithdrawalEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.WithdrawalEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.WithdrawalEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.WithdrawalEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Withdrawal.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Withdrawal node = 1;
 * @return {?proto.vega.Withdrawal}
 */
proto.datanode.api.v2.WithdrawalEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Withdrawal} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Withdrawal, 1));
};


/**
 * @param {?proto.vega.Withdrawal|undefined} value
 * @return {!proto.datanode.api.v2.WithdrawalEdge} returns this
*/
proto.datanode.api.v2.WithdrawalEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.WithdrawalEdge} returns this
 */
proto.datanode.api.v2.WithdrawalEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.WithdrawalEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.WithdrawalEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.WithdrawalEdge} returns this
 */
proto.datanode.api.v2.WithdrawalEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.WithdrawalsConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.WithdrawalsConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.WithdrawalsConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.WithdrawalsConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.WithdrawalsConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.WithdrawalEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.WithdrawalsConnection}
 */
proto.datanode.api.v2.WithdrawalsConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.WithdrawalsConnection;
  return proto.datanode.api.v2.WithdrawalsConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.WithdrawalsConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.WithdrawalsConnection}
 */
proto.datanode.api.v2.WithdrawalsConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.WithdrawalEdge;
      reader.readMessage(value,proto.datanode.api.v2.WithdrawalEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.WithdrawalsConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.WithdrawalsConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.WithdrawalsConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.WithdrawalsConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.WithdrawalEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WithdrawalEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.WithdrawalEdge>}
 */
proto.datanode.api.v2.WithdrawalsConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.WithdrawalEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.WithdrawalEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.WithdrawalEdge>} value
 * @return {!proto.datanode.api.v2.WithdrawalsConnection} returns this
*/
proto.datanode.api.v2.WithdrawalsConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.WithdrawalEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.WithdrawalEdge}
 */
proto.datanode.api.v2.WithdrawalsConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.WithdrawalEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.WithdrawalsConnection} returns this
 */
proto.datanode.api.v2.WithdrawalsConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.WithdrawalsConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.WithdrawalsConnection} returns this
*/
proto.datanode.api.v2.WithdrawalsConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.WithdrawalsConnection} returns this
 */
proto.datanode.api.v2.WithdrawalsConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.WithdrawalsConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetAssetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetAssetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetAssetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetAssetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetAssetRequest}
 */
proto.datanode.api.v2.GetAssetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetAssetRequest;
  return proto.datanode.api.v2.GetAssetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetAssetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetAssetRequest}
 */
proto.datanode.api.v2.GetAssetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetAssetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetAssetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetAssetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetAssetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetAssetRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetAssetRequest} returns this
 */
proto.datanode.api.v2.GetAssetRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetAssetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetAssetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetAssetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetAssetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    asset: (f = msg.getAsset()) && vega_assets_pb.Asset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetAssetResponse}
 */
proto.datanode.api.v2.GetAssetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetAssetResponse;
  return proto.datanode.api.v2.GetAssetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetAssetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetAssetResponse}
 */
proto.datanode.api.v2.GetAssetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_assets_pb.Asset;
      reader.readMessage(value,vega_assets_pb.Asset.deserializeBinaryFromReader);
      msg.setAsset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetAssetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetAssetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetAssetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetAssetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsset();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_assets_pb.Asset.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Asset asset = 1;
 * @return {?proto.vega.Asset}
 */
proto.datanode.api.v2.GetAssetResponse.prototype.getAsset = function() {
  return /** @type{?proto.vega.Asset} */ (
    jspb.Message.getWrapperField(this, vega_assets_pb.Asset, 1));
};


/**
 * @param {?proto.vega.Asset|undefined} value
 * @return {!proto.datanode.api.v2.GetAssetResponse} returns this
*/
proto.datanode.api.v2.GetAssetResponse.prototype.setAsset = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetAssetResponse} returns this
 */
proto.datanode.api.v2.GetAssetResponse.prototype.clearAsset = function() {
  return this.setAsset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetAssetResponse.prototype.hasAsset = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListAssetsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListAssetsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListAssetsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAssetsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListAssetsRequest}
 */
proto.datanode.api.v2.ListAssetsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListAssetsRequest;
  return proto.datanode.api.v2.ListAssetsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListAssetsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListAssetsRequest}
 */
proto.datanode.api.v2.ListAssetsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetId(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListAssetsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListAssetsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListAssetsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAssetsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string asset_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListAssetsRequest.prototype.getAssetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListAssetsRequest} returns this
 */
proto.datanode.api.v2.ListAssetsRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListAssetsRequest} returns this
 */
proto.datanode.api.v2.ListAssetsRequest.prototype.clearAssetId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListAssetsRequest.prototype.hasAssetId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListAssetsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListAssetsRequest} returns this
*/
proto.datanode.api.v2.ListAssetsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListAssetsRequest} returns this
 */
proto.datanode.api.v2.ListAssetsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListAssetsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListAssetsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListAssetsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListAssetsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAssetsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    assets: (f = msg.getAssets()) && proto.datanode.api.v2.AssetsConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListAssetsResponse}
 */
proto.datanode.api.v2.ListAssetsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListAssetsResponse;
  return proto.datanode.api.v2.ListAssetsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListAssetsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListAssetsResponse}
 */
proto.datanode.api.v2.ListAssetsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AssetsConnection;
      reader.readMessage(value,proto.datanode.api.v2.AssetsConnection.deserializeBinaryFromReader);
      msg.setAssets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListAssetsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListAssetsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListAssetsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAssetsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssets();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.AssetsConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional AssetsConnection assets = 1;
 * @return {?proto.datanode.api.v2.AssetsConnection}
 */
proto.datanode.api.v2.ListAssetsResponse.prototype.getAssets = function() {
  return /** @type{?proto.datanode.api.v2.AssetsConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.AssetsConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.AssetsConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListAssetsResponse} returns this
*/
proto.datanode.api.v2.ListAssetsResponse.prototype.setAssets = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListAssetsResponse} returns this
 */
proto.datanode.api.v2.ListAssetsResponse.prototype.clearAssets = function() {
  return this.setAssets(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListAssetsResponse.prototype.hasAssets = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AssetEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AssetEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AssetEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AssetEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_assets_pb.Asset.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AssetEdge}
 */
proto.datanode.api.v2.AssetEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AssetEdge;
  return proto.datanode.api.v2.AssetEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AssetEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AssetEdge}
 */
proto.datanode.api.v2.AssetEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_assets_pb.Asset;
      reader.readMessage(value,vega_assets_pb.Asset.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AssetEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AssetEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AssetEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AssetEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_assets_pb.Asset.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Asset node = 1;
 * @return {?proto.vega.Asset}
 */
proto.datanode.api.v2.AssetEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Asset} */ (
    jspb.Message.getWrapperField(this, vega_assets_pb.Asset, 1));
};


/**
 * @param {?proto.vega.Asset|undefined} value
 * @return {!proto.datanode.api.v2.AssetEdge} returns this
*/
proto.datanode.api.v2.AssetEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.AssetEdge} returns this
 */
proto.datanode.api.v2.AssetEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AssetEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.AssetEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.AssetEdge} returns this
 */
proto.datanode.api.v2.AssetEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.AssetsConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.AssetsConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.AssetsConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.AssetsConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AssetsConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.AssetEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.AssetsConnection}
 */
proto.datanode.api.v2.AssetsConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.AssetsConnection;
  return proto.datanode.api.v2.AssetsConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.AssetsConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.AssetsConnection}
 */
proto.datanode.api.v2.AssetsConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.AssetEdge;
      reader.readMessage(value,proto.datanode.api.v2.AssetEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.AssetsConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.AssetsConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.AssetsConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.AssetsConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.AssetEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AssetEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.AssetEdge>}
 */
proto.datanode.api.v2.AssetsConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.AssetEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.AssetEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.AssetEdge>} value
 * @return {!proto.datanode.api.v2.AssetsConnection} returns this
*/
proto.datanode.api.v2.AssetsConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.AssetEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.AssetEdge}
 */
proto.datanode.api.v2.AssetsConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.AssetEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.AssetsConnection} returns this
 */
proto.datanode.api.v2.AssetsConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.AssetsConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.AssetsConnection} returns this
*/
proto.datanode.api.v2.AssetsConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.AssetsConnection} returns this
 */
proto.datanode.api.v2.AssetsConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.AssetsConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListLiquidityProvisionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListLiquidityProvisionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partyId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reference: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsRequest}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListLiquidityProvisionsRequest;
  return proto.datanode.api.v2.ListLiquidityProvisionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListLiquidityProvisionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsRequest}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReference(value);
      break;
    case 4:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListLiquidityProvisionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListLiquidityProvisionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsRequest} returns this
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsRequest} returns this
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.clearMarketId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.hasMarketId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string party_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsRequest} returns this
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsRequest} returns this
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string reference = 3;
 * @return {string}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.getReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsRequest} returns this
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.setReference = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsRequest} returns this
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.clearReference = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.hasReference = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Pagination pagination = 4;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 4));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsRequest} returns this
*/
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsRequest} returns this
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListLiquidityProvisionsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListLiquidityProvisionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListLiquidityProvisionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListLiquidityProvisionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLiquidityProvisionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    liquidityProvisions: (f = msg.getLiquidityProvisions()) && proto.datanode.api.v2.LiquidityProvisionsConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsResponse}
 */
proto.datanode.api.v2.ListLiquidityProvisionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListLiquidityProvisionsResponse;
  return proto.datanode.api.v2.ListLiquidityProvisionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListLiquidityProvisionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsResponse}
 */
proto.datanode.api.v2.ListLiquidityProvisionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.LiquidityProvisionsConnection;
      reader.readMessage(value,proto.datanode.api.v2.LiquidityProvisionsConnection.deserializeBinaryFromReader);
      msg.setLiquidityProvisions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListLiquidityProvisionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListLiquidityProvisionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListLiquidityProvisionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListLiquidityProvisionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLiquidityProvisions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.LiquidityProvisionsConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional LiquidityProvisionsConnection liquidity_provisions = 1;
 * @return {?proto.datanode.api.v2.LiquidityProvisionsConnection}
 */
proto.datanode.api.v2.ListLiquidityProvisionsResponse.prototype.getLiquidityProvisions = function() {
  return /** @type{?proto.datanode.api.v2.LiquidityProvisionsConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.LiquidityProvisionsConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.LiquidityProvisionsConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsResponse} returns this
*/
proto.datanode.api.v2.ListLiquidityProvisionsResponse.prototype.setLiquidityProvisions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListLiquidityProvisionsResponse} returns this
 */
proto.datanode.api.v2.ListLiquidityProvisionsResponse.prototype.clearLiquidityProvisions = function() {
  return this.setLiquidityProvisions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListLiquidityProvisionsResponse.prototype.hasLiquidityProvisions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.LiquidityProvisionsEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.LiquidityProvisionsEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.LiquidityProvisionsEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.LiquidityProvisionsEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.LiquidityProvision.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.LiquidityProvisionsEdge}
 */
proto.datanode.api.v2.LiquidityProvisionsEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.LiquidityProvisionsEdge;
  return proto.datanode.api.v2.LiquidityProvisionsEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.LiquidityProvisionsEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.LiquidityProvisionsEdge}
 */
proto.datanode.api.v2.LiquidityProvisionsEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.LiquidityProvision;
      reader.readMessage(value,vega_vega_pb.LiquidityProvision.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.LiquidityProvisionsEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.LiquidityProvisionsEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.LiquidityProvisionsEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.LiquidityProvisionsEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.LiquidityProvision.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.LiquidityProvision node = 1;
 * @return {?proto.vega.LiquidityProvision}
 */
proto.datanode.api.v2.LiquidityProvisionsEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.LiquidityProvision} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.LiquidityProvision, 1));
};


/**
 * @param {?proto.vega.LiquidityProvision|undefined} value
 * @return {!proto.datanode.api.v2.LiquidityProvisionsEdge} returns this
*/
proto.datanode.api.v2.LiquidityProvisionsEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.LiquidityProvisionsEdge} returns this
 */
proto.datanode.api.v2.LiquidityProvisionsEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.LiquidityProvisionsEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.LiquidityProvisionsEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.LiquidityProvisionsEdge} returns this
 */
proto.datanode.api.v2.LiquidityProvisionsEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.LiquidityProvisionsConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.LiquidityProvisionsConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.LiquidityProvisionsEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.LiquidityProvisionsConnection}
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.LiquidityProvisionsConnection;
  return proto.datanode.api.v2.LiquidityProvisionsConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.LiquidityProvisionsConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.LiquidityProvisionsConnection}
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.LiquidityProvisionsEdge;
      reader.readMessage(value,proto.datanode.api.v2.LiquidityProvisionsEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.LiquidityProvisionsConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.LiquidityProvisionsConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.LiquidityProvisionsEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LiquidityProvisionsEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.LiquidityProvisionsEdge>}
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.LiquidityProvisionsEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.LiquidityProvisionsEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.LiquidityProvisionsEdge>} value
 * @return {!proto.datanode.api.v2.LiquidityProvisionsConnection} returns this
*/
proto.datanode.api.v2.LiquidityProvisionsConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.LiquidityProvisionsEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.LiquidityProvisionsEdge}
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.LiquidityProvisionsEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.LiquidityProvisionsConnection} returns this
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.LiquidityProvisionsConnection} returns this
*/
proto.datanode.api.v2.LiquidityProvisionsConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.LiquidityProvisionsConnection} returns this
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.LiquidityProvisionsConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveLiquidityProvisionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partyId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveLiquidityProvisionsRequest}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveLiquidityProvisionsRequest;
  return proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveLiquidityProvisionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveLiquidityProvisionsRequest}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveLiquidityProvisionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveLiquidityProvisionsRequest} returns this
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveLiquidityProvisionsRequest} returns this
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.prototype.clearMarketId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.prototype.hasMarketId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string party_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveLiquidityProvisionsRequest} returns this
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveLiquidityProvisionsRequest} returns this
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveLiquidityProvisionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    liquidityProvisionsList: jspb.Message.toObjectList(msg.getLiquidityProvisionsList(),
    vega_vega_pb.LiquidityProvision.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveLiquidityProvisionsResponse}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveLiquidityProvisionsResponse;
  return proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveLiquidityProvisionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveLiquidityProvisionsResponse}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.LiquidityProvision;
      reader.readMessage(value,vega_vega_pb.LiquidityProvision.deserializeBinaryFromReader);
      msg.addLiquidityProvisions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveLiquidityProvisionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLiquidityProvisionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_vega_pb.LiquidityProvision.serializeBinaryToWriter
    );
  }
};


/**
 * repeated vega.LiquidityProvision liquidity_provisions = 1;
 * @return {!Array<!proto.vega.LiquidityProvision>}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.prototype.getLiquidityProvisionsList = function() {
  return /** @type{!Array<!proto.vega.LiquidityProvision>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_vega_pb.LiquidityProvision, 1));
};


/**
 * @param {!Array<!proto.vega.LiquidityProvision>} value
 * @return {!proto.datanode.api.v2.ObserveLiquidityProvisionsResponse} returns this
*/
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.prototype.setLiquidityProvisionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.LiquidityProvision=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.LiquidityProvision}
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.prototype.addLiquidityProvisions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.LiquidityProvision, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ObserveLiquidityProvisionsResponse} returns this
 */
proto.datanode.api.v2.ObserveLiquidityProvisionsResponse.prototype.clearLiquidityProvisionsList = function() {
  return this.setLiquidityProvisionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetGovernanceDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetGovernanceDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetGovernanceDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetGovernanceDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reference: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetGovernanceDataRequest}
 */
proto.datanode.api.v2.GetGovernanceDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetGovernanceDataRequest;
  return proto.datanode.api.v2.GetGovernanceDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetGovernanceDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetGovernanceDataRequest}
 */
proto.datanode.api.v2.GetGovernanceDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposalId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetGovernanceDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetGovernanceDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetGovernanceDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetGovernanceDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string proposal_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetGovernanceDataRequest.prototype.getProposalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.GetGovernanceDataRequest.prototype.setProposalId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.GetGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.GetGovernanceDataRequest.prototype.clearProposalId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetGovernanceDataRequest.prototype.hasProposalId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string reference = 2;
 * @return {string}
 */
proto.datanode.api.v2.GetGovernanceDataRequest.prototype.getReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.GetGovernanceDataRequest.prototype.setReference = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.GetGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.GetGovernanceDataRequest.prototype.clearReference = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetGovernanceDataRequest.prototype.hasReference = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetGovernanceDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetGovernanceDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetGovernanceDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetGovernanceDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && vega_governance_pb.GovernanceData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetGovernanceDataResponse}
 */
proto.datanode.api.v2.GetGovernanceDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetGovernanceDataResponse;
  return proto.datanode.api.v2.GetGovernanceDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetGovernanceDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetGovernanceDataResponse}
 */
proto.datanode.api.v2.GetGovernanceDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_governance_pb.GovernanceData;
      reader.readMessage(value,vega_governance_pb.GovernanceData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetGovernanceDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetGovernanceDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetGovernanceDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetGovernanceDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_governance_pb.GovernanceData.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.GovernanceData data = 1;
 * @return {?proto.vega.GovernanceData}
 */
proto.datanode.api.v2.GetGovernanceDataResponse.prototype.getData = function() {
  return /** @type{?proto.vega.GovernanceData} */ (
    jspb.Message.getWrapperField(this, vega_governance_pb.GovernanceData, 1));
};


/**
 * @param {?proto.vega.GovernanceData|undefined} value
 * @return {!proto.datanode.api.v2.GetGovernanceDataResponse} returns this
*/
proto.datanode.api.v2.GetGovernanceDataResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetGovernanceDataResponse} returns this
 */
proto.datanode.api.v2.GetGovernanceDataResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetGovernanceDataResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListGovernanceDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListGovernanceDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListGovernanceDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalState: jspb.Message.getFieldWithDefault(msg, 1, 0),
    proposalType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    proposerPartyId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    proposalReference: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListGovernanceDataRequest;
  return proto.datanode.api.v2.ListGovernanceDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListGovernanceDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.vega.Proposal.State} */ (reader.readEnum());
      msg.setProposalState(value);
      break;
    case 2:
      var value = /** @type {!proto.datanode.api.v2.ListGovernanceDataRequest.Type} */ (reader.readEnum());
      msg.setProposalType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposerPartyId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposalReference(value);
      break;
    case 5:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListGovernanceDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListGovernanceDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListGovernanceDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.vega.Proposal.State} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.datanode.api.v2.ListGovernanceDataRequest.Type} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.Type = {
  TYPE_UNSPECIFIED: 0,
  TYPE_ALL: 1,
  TYPE_NEW_MARKET: 2,
  TYPE_UPDATE_MARKET: 3,
  TYPE_NETWORK_PARAMETERS: 4,
  TYPE_NEW_ASSET: 5,
  TYPE_NEW_FREE_FORM: 6,
  TYPE_UPDATE_ASSET: 7
};

/**
 * optional vega.Proposal.State proposal_state = 1;
 * @return {!proto.vega.Proposal.State}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.getProposalState = function() {
  return /** @type {!proto.vega.Proposal.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.vega.Proposal.State} value
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.setProposalState = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.clearProposalState = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.hasProposalState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Type proposal_type = 2;
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest.Type}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.getProposalType = function() {
  return /** @type {!proto.datanode.api.v2.ListGovernanceDataRequest.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.datanode.api.v2.ListGovernanceDataRequest.Type} value
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.setProposalType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.clearProposalType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.hasProposalType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string proposer_party_id = 3;
 * @return {string}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.getProposerPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.setProposerPartyId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.clearProposerPartyId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.hasProposerPartyId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string proposal_reference = 4;
 * @return {string}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.getProposalReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.setProposalReference = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.clearProposalReference = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.hasProposalReference = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Pagination pagination = 5;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 5));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest} returns this
*/
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListGovernanceDataRequest} returns this
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListGovernanceDataRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListGovernanceDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListGovernanceDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListGovernanceDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListGovernanceDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    connection: (f = msg.getConnection()) && proto.datanode.api.v2.GovernanceDataConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListGovernanceDataResponse}
 */
proto.datanode.api.v2.ListGovernanceDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListGovernanceDataResponse;
  return proto.datanode.api.v2.ListGovernanceDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListGovernanceDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListGovernanceDataResponse}
 */
proto.datanode.api.v2.ListGovernanceDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.GovernanceDataConnection;
      reader.readMessage(value,proto.datanode.api.v2.GovernanceDataConnection.deserializeBinaryFromReader);
      msg.setConnection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListGovernanceDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListGovernanceDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListGovernanceDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListGovernanceDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.GovernanceDataConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional GovernanceDataConnection connection = 1;
 * @return {?proto.datanode.api.v2.GovernanceDataConnection}
 */
proto.datanode.api.v2.ListGovernanceDataResponse.prototype.getConnection = function() {
  return /** @type{?proto.datanode.api.v2.GovernanceDataConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.GovernanceDataConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.GovernanceDataConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListGovernanceDataResponse} returns this
*/
proto.datanode.api.v2.ListGovernanceDataResponse.prototype.setConnection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListGovernanceDataResponse} returns this
 */
proto.datanode.api.v2.ListGovernanceDataResponse.prototype.clearConnection = function() {
  return this.setConnection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListGovernanceDataResponse.prototype.hasConnection = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GovernanceDataEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GovernanceDataEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GovernanceDataEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GovernanceDataEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_governance_pb.GovernanceData.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GovernanceDataEdge}
 */
proto.datanode.api.v2.GovernanceDataEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GovernanceDataEdge;
  return proto.datanode.api.v2.GovernanceDataEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GovernanceDataEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GovernanceDataEdge}
 */
proto.datanode.api.v2.GovernanceDataEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_governance_pb.GovernanceData;
      reader.readMessage(value,vega_governance_pb.GovernanceData.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GovernanceDataEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GovernanceDataEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GovernanceDataEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GovernanceDataEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_governance_pb.GovernanceData.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.GovernanceData node = 1;
 * @return {?proto.vega.GovernanceData}
 */
proto.datanode.api.v2.GovernanceDataEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.GovernanceData} */ (
    jspb.Message.getWrapperField(this, vega_governance_pb.GovernanceData, 1));
};


/**
 * @param {?proto.vega.GovernanceData|undefined} value
 * @return {!proto.datanode.api.v2.GovernanceDataEdge} returns this
*/
proto.datanode.api.v2.GovernanceDataEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GovernanceDataEdge} returns this
 */
proto.datanode.api.v2.GovernanceDataEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GovernanceDataEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.GovernanceDataEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GovernanceDataEdge} returns this
 */
proto.datanode.api.v2.GovernanceDataEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.GovernanceDataConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GovernanceDataConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GovernanceDataConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GovernanceDataConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GovernanceDataConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.GovernanceDataEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GovernanceDataConnection}
 */
proto.datanode.api.v2.GovernanceDataConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GovernanceDataConnection;
  return proto.datanode.api.v2.GovernanceDataConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GovernanceDataConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GovernanceDataConnection}
 */
proto.datanode.api.v2.GovernanceDataConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.GovernanceDataEdge;
      reader.readMessage(value,proto.datanode.api.v2.GovernanceDataEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GovernanceDataConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GovernanceDataConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GovernanceDataConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GovernanceDataConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.GovernanceDataEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GovernanceDataEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.GovernanceDataEdge>}
 */
proto.datanode.api.v2.GovernanceDataConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.GovernanceDataEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.GovernanceDataEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.GovernanceDataEdge>} value
 * @return {!proto.datanode.api.v2.GovernanceDataConnection} returns this
*/
proto.datanode.api.v2.GovernanceDataConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.GovernanceDataEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.GovernanceDataEdge}
 */
proto.datanode.api.v2.GovernanceDataConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.GovernanceDataEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.GovernanceDataConnection} returns this
 */
proto.datanode.api.v2.GovernanceDataConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.GovernanceDataConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.GovernanceDataConnection} returns this
*/
proto.datanode.api.v2.GovernanceDataConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GovernanceDataConnection} returns this
 */
proto.datanode.api.v2.GovernanceDataConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GovernanceDataConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveGovernanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveGovernanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveGovernanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveGovernanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveGovernanceRequest}
 */
proto.datanode.api.v2.ObserveGovernanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveGovernanceRequest;
  return proto.datanode.api.v2.ObserveGovernanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveGovernanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveGovernanceRequest}
 */
proto.datanode.api.v2.ObserveGovernanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveGovernanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveGovernanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveGovernanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveGovernanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ObserveGovernanceRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveGovernanceRequest} returns this
 */
proto.datanode.api.v2.ObserveGovernanceRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveGovernanceRequest} returns this
 */
proto.datanode.api.v2.ObserveGovernanceRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveGovernanceRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveGovernanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveGovernanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveGovernanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveGovernanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && vega_governance_pb.GovernanceData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveGovernanceResponse}
 */
proto.datanode.api.v2.ObserveGovernanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveGovernanceResponse;
  return proto.datanode.api.v2.ObserveGovernanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveGovernanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveGovernanceResponse}
 */
proto.datanode.api.v2.ObserveGovernanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_governance_pb.GovernanceData;
      reader.readMessage(value,vega_governance_pb.GovernanceData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveGovernanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveGovernanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveGovernanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveGovernanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_governance_pb.GovernanceData.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.GovernanceData data = 1;
 * @return {?proto.vega.GovernanceData}
 */
proto.datanode.api.v2.ObserveGovernanceResponse.prototype.getData = function() {
  return /** @type{?proto.vega.GovernanceData} */ (
    jspb.Message.getWrapperField(this, vega_governance_pb.GovernanceData, 1));
};


/**
 * @param {?proto.vega.GovernanceData|undefined} value
 * @return {!proto.datanode.api.v2.ObserveGovernanceResponse} returns this
*/
proto.datanode.api.v2.ObserveGovernanceResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveGovernanceResponse} returns this
 */
proto.datanode.api.v2.ObserveGovernanceResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveGovernanceResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListDelegationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListDelegationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListDelegationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nodeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    epochId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListDelegationsRequest}
 */
proto.datanode.api.v2.ListDelegationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListDelegationsRequest;
  return proto.datanode.api.v2.ListDelegationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListDelegationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListDelegationsRequest}
 */
proto.datanode.api.v2.ListDelegationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpochId(value);
      break;
    case 4:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListDelegationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListDelegationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListDelegationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListDelegationsRequest} returns this
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListDelegationsRequest} returns this
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string node_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListDelegationsRequest} returns this
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListDelegationsRequest} returns this
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.clearNodeId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.hasNodeId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string epoch_id = 3;
 * @return {string}
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.getEpochId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListDelegationsRequest} returns this
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.setEpochId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListDelegationsRequest} returns this
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.clearEpochId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.hasEpochId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Pagination pagination = 4;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 4));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListDelegationsRequest} returns this
*/
proto.datanode.api.v2.ListDelegationsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListDelegationsRequest} returns this
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListDelegationsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListDelegationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListDelegationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListDelegationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListDelegationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegations: (f = msg.getDelegations()) && proto.datanode.api.v2.DelegationsConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListDelegationsResponse}
 */
proto.datanode.api.v2.ListDelegationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListDelegationsResponse;
  return proto.datanode.api.v2.ListDelegationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListDelegationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListDelegationsResponse}
 */
proto.datanode.api.v2.ListDelegationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.DelegationsConnection;
      reader.readMessage(value,proto.datanode.api.v2.DelegationsConnection.deserializeBinaryFromReader);
      msg.setDelegations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListDelegationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListDelegationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListDelegationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListDelegationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegations();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.DelegationsConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional DelegationsConnection delegations = 1;
 * @return {?proto.datanode.api.v2.DelegationsConnection}
 */
proto.datanode.api.v2.ListDelegationsResponse.prototype.getDelegations = function() {
  return /** @type{?proto.datanode.api.v2.DelegationsConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.DelegationsConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.DelegationsConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListDelegationsResponse} returns this
*/
proto.datanode.api.v2.ListDelegationsResponse.prototype.setDelegations = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListDelegationsResponse} returns this
 */
proto.datanode.api.v2.ListDelegationsResponse.prototype.clearDelegations = function() {
  return this.setDelegations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListDelegationsResponse.prototype.hasDelegations = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.DelegationEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.DelegationEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.DelegationEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.DelegationEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.Delegation.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.DelegationEdge}
 */
proto.datanode.api.v2.DelegationEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.DelegationEdge;
  return proto.datanode.api.v2.DelegationEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.DelegationEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.DelegationEdge}
 */
proto.datanode.api.v2.DelegationEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Delegation;
      reader.readMessage(value,vega_vega_pb.Delegation.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.DelegationEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.DelegationEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.DelegationEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.DelegationEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Delegation.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Delegation node = 1;
 * @return {?proto.vega.Delegation}
 */
proto.datanode.api.v2.DelegationEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Delegation} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Delegation, 1));
};


/**
 * @param {?proto.vega.Delegation|undefined} value
 * @return {!proto.datanode.api.v2.DelegationEdge} returns this
*/
proto.datanode.api.v2.DelegationEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.DelegationEdge} returns this
 */
proto.datanode.api.v2.DelegationEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.DelegationEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.DelegationEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.DelegationEdge} returns this
 */
proto.datanode.api.v2.DelegationEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.DelegationsConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.DelegationsConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.DelegationsConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.DelegationsConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.DelegationsConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.DelegationEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.DelegationsConnection}
 */
proto.datanode.api.v2.DelegationsConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.DelegationsConnection;
  return proto.datanode.api.v2.DelegationsConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.DelegationsConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.DelegationsConnection}
 */
proto.datanode.api.v2.DelegationsConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.DelegationEdge;
      reader.readMessage(value,proto.datanode.api.v2.DelegationEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.DelegationsConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.DelegationsConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.DelegationsConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.DelegationsConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.DelegationEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DelegationEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.DelegationEdge>}
 */
proto.datanode.api.v2.DelegationsConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.DelegationEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.DelegationEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.DelegationEdge>} value
 * @return {!proto.datanode.api.v2.DelegationsConnection} returns this
*/
proto.datanode.api.v2.DelegationsConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.DelegationEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.DelegationEdge}
 */
proto.datanode.api.v2.DelegationsConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.DelegationEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.DelegationsConnection} returns this
 */
proto.datanode.api.v2.DelegationsConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.DelegationsConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.DelegationsConnection} returns this
*/
proto.datanode.api.v2.DelegationsConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.DelegationsConnection} returns this
 */
proto.datanode.api.v2.DelegationsConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.DelegationsConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveDelegationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveDelegationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveDelegationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveDelegationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nodeId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveDelegationsRequest}
 */
proto.datanode.api.v2.ObserveDelegationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveDelegationsRequest;
  return proto.datanode.api.v2.ObserveDelegationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveDelegationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveDelegationsRequest}
 */
proto.datanode.api.v2.ObserveDelegationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveDelegationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveDelegationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveDelegationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveDelegationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ObserveDelegationsRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveDelegationsRequest} returns this
 */
proto.datanode.api.v2.ObserveDelegationsRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveDelegationsRequest} returns this
 */
proto.datanode.api.v2.ObserveDelegationsRequest.prototype.clearPartyId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveDelegationsRequest.prototype.hasPartyId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string node_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ObserveDelegationsRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveDelegationsRequest} returns this
 */
proto.datanode.api.v2.ObserveDelegationsRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveDelegationsRequest} returns this
 */
proto.datanode.api.v2.ObserveDelegationsRequest.prototype.clearNodeId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveDelegationsRequest.prototype.hasNodeId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveDelegationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveDelegationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveDelegationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveDelegationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegation: (f = msg.getDelegation()) && vega_vega_pb.Delegation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveDelegationsResponse}
 */
proto.datanode.api.v2.ObserveDelegationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveDelegationsResponse;
  return proto.datanode.api.v2.ObserveDelegationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveDelegationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveDelegationsResponse}
 */
proto.datanode.api.v2.ObserveDelegationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Delegation;
      reader.readMessage(value,vega_vega_pb.Delegation.deserializeBinaryFromReader);
      msg.setDelegation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveDelegationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveDelegationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveDelegationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveDelegationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Delegation.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Delegation delegation = 1;
 * @return {?proto.vega.Delegation}
 */
proto.datanode.api.v2.ObserveDelegationsResponse.prototype.getDelegation = function() {
  return /** @type{?proto.vega.Delegation} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Delegation, 1));
};


/**
 * @param {?proto.vega.Delegation|undefined} value
 * @return {!proto.datanode.api.v2.ObserveDelegationsResponse} returns this
*/
proto.datanode.api.v2.ObserveDelegationsResponse.prototype.setDelegation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveDelegationsResponse} returns this
 */
proto.datanode.api.v2.ObserveDelegationsResponse.prototype.clearDelegation = function() {
  return this.setDelegation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveDelegationsResponse.prototype.hasDelegation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetNetworkDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetNetworkDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetNetworkDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetNetworkDataRequest}
 */
proto.datanode.api.v2.GetNetworkDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetNetworkDataRequest;
  return proto.datanode.api.v2.GetNetworkDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetNetworkDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetNetworkDataRequest}
 */
proto.datanode.api.v2.GetNetworkDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetNetworkDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetNetworkDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetNetworkDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetNetworkDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetNetworkDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetNetworkDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeData: (f = msg.getNodeData()) && vega_vega_pb.NodeData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetNetworkDataResponse}
 */
proto.datanode.api.v2.GetNetworkDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetNetworkDataResponse;
  return proto.datanode.api.v2.GetNetworkDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetNetworkDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetNetworkDataResponse}
 */
proto.datanode.api.v2.GetNetworkDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.NodeData;
      reader.readMessage(value,vega_vega_pb.NodeData.deserializeBinaryFromReader);
      msg.setNodeData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetNetworkDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetNetworkDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetNetworkDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.NodeData.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.NodeData node_data = 1;
 * @return {?proto.vega.NodeData}
 */
proto.datanode.api.v2.GetNetworkDataResponse.prototype.getNodeData = function() {
  return /** @type{?proto.vega.NodeData} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.NodeData, 1));
};


/**
 * @param {?proto.vega.NodeData|undefined} value
 * @return {!proto.datanode.api.v2.GetNetworkDataResponse} returns this
*/
proto.datanode.api.v2.GetNetworkDataResponse.prototype.setNodeData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetNetworkDataResponse} returns this
 */
proto.datanode.api.v2.GetNetworkDataResponse.prototype.clearNodeData = function() {
  return this.setNodeData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetNetworkDataResponse.prototype.hasNodeData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetNodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetNodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetNodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetNodeRequest}
 */
proto.datanode.api.v2.GetNodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetNodeRequest;
  return proto.datanode.api.v2.GetNodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetNodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetNodeRequest}
 */
proto.datanode.api.v2.GetNodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetNodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetNodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetNodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetNodeRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetNodeRequest} returns this
 */
proto.datanode.api.v2.GetNodeRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetNodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetNodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetNodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.Node.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetNodeResponse}
 */
proto.datanode.api.v2.GetNodeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetNodeResponse;
  return proto.datanode.api.v2.GetNodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetNodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetNodeResponse}
 */
proto.datanode.api.v2.GetNodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Node;
      reader.readMessage(value,vega_vega_pb.Node.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetNodeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetNodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetNodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Node.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Node node = 1;
 * @return {?proto.vega.Node}
 */
proto.datanode.api.v2.GetNodeResponse.prototype.getNode = function() {
  return /** @type{?proto.vega.Node} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Node, 1));
};


/**
 * @param {?proto.vega.Node|undefined} value
 * @return {!proto.datanode.api.v2.GetNodeResponse} returns this
*/
proto.datanode.api.v2.GetNodeResponse.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetNodeResponse} returns this
 */
proto.datanode.api.v2.GetNodeResponse.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetNodeResponse.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListNodesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListNodesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListNodesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNodesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    epochSeq: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListNodesRequest}
 */
proto.datanode.api.v2.ListNodesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListNodesRequest;
  return proto.datanode.api.v2.ListNodesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListNodesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListNodesRequest}
 */
proto.datanode.api.v2.ListNodesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEpochSeq(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListNodesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListNodesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListNodesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNodesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 epoch_seq = 1;
 * @return {number}
 */
proto.datanode.api.v2.ListNodesRequest.prototype.getEpochSeq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.ListNodesRequest} returns this
 */
proto.datanode.api.v2.ListNodesRequest.prototype.setEpochSeq = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListNodesRequest} returns this
 */
proto.datanode.api.v2.ListNodesRequest.prototype.clearEpochSeq = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListNodesRequest.prototype.hasEpochSeq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListNodesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListNodesRequest} returns this
*/
proto.datanode.api.v2.ListNodesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListNodesRequest} returns this
 */
proto.datanode.api.v2.ListNodesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListNodesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListNodesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListNodesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListNodesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNodesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodes: (f = msg.getNodes()) && proto.datanode.api.v2.NodesConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListNodesResponse}
 */
proto.datanode.api.v2.ListNodesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListNodesResponse;
  return proto.datanode.api.v2.ListNodesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListNodesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListNodesResponse}
 */
proto.datanode.api.v2.ListNodesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.NodesConnection;
      reader.readMessage(value,proto.datanode.api.v2.NodesConnection.deserializeBinaryFromReader);
      msg.setNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListNodesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListNodesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListNodesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNodesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.NodesConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodesConnection nodes = 1;
 * @return {?proto.datanode.api.v2.NodesConnection}
 */
proto.datanode.api.v2.ListNodesResponse.prototype.getNodes = function() {
  return /** @type{?proto.datanode.api.v2.NodesConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.NodesConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.NodesConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListNodesResponse} returns this
*/
proto.datanode.api.v2.ListNodesResponse.prototype.setNodes = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListNodesResponse} returns this
 */
proto.datanode.api.v2.ListNodesResponse.prototype.clearNodes = function() {
  return this.setNodes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListNodesResponse.prototype.hasNodes = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.NodeEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.NodeEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.NodeEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NodeEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.Node.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.NodeEdge}
 */
proto.datanode.api.v2.NodeEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.NodeEdge;
  return proto.datanode.api.v2.NodeEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.NodeEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.NodeEdge}
 */
proto.datanode.api.v2.NodeEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Node;
      reader.readMessage(value,vega_vega_pb.Node.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.NodeEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.NodeEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.NodeEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NodeEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Node.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.Node node = 1;
 * @return {?proto.vega.Node}
 */
proto.datanode.api.v2.NodeEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.Node} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Node, 1));
};


/**
 * @param {?proto.vega.Node|undefined} value
 * @return {!proto.datanode.api.v2.NodeEdge} returns this
*/
proto.datanode.api.v2.NodeEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.NodeEdge} returns this
 */
proto.datanode.api.v2.NodeEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.NodeEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.NodeEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.NodeEdge} returns this
 */
proto.datanode.api.v2.NodeEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.NodesConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.NodesConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.NodesConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.NodesConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NodesConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.NodeEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.NodesConnection}
 */
proto.datanode.api.v2.NodesConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.NodesConnection;
  return proto.datanode.api.v2.NodesConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.NodesConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.NodesConnection}
 */
proto.datanode.api.v2.NodesConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.NodeEdge;
      reader.readMessage(value,proto.datanode.api.v2.NodeEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.NodesConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.NodesConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.NodesConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NodesConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.NodeEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NodeEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.NodeEdge>}
 */
proto.datanode.api.v2.NodesConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.NodeEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.NodeEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.NodeEdge>} value
 * @return {!proto.datanode.api.v2.NodesConnection} returns this
*/
proto.datanode.api.v2.NodesConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.NodeEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.NodeEdge}
 */
proto.datanode.api.v2.NodesConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.NodeEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.NodesConnection} returns this
 */
proto.datanode.api.v2.NodesConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.NodesConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.NodesConnection} returns this
*/
proto.datanode.api.v2.NodesConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.NodesConnection} returns this
 */
proto.datanode.api.v2.NodesConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.NodesConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListNodeSignaturesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListNodeSignaturesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListNodeSignaturesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNodeSignaturesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListNodeSignaturesRequest}
 */
proto.datanode.api.v2.ListNodeSignaturesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListNodeSignaturesRequest;
  return proto.datanode.api.v2.ListNodeSignaturesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListNodeSignaturesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListNodeSignaturesRequest}
 */
proto.datanode.api.v2.ListNodeSignaturesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListNodeSignaturesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListNodeSignaturesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListNodeSignaturesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNodeSignaturesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListNodeSignaturesRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListNodeSignaturesRequest} returns this
 */
proto.datanode.api.v2.ListNodeSignaturesRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListNodeSignaturesRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListNodeSignaturesRequest} returns this
*/
proto.datanode.api.v2.ListNodeSignaturesRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListNodeSignaturesRequest} returns this
 */
proto.datanode.api.v2.ListNodeSignaturesRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListNodeSignaturesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListNodeSignaturesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListNodeSignaturesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListNodeSignaturesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNodeSignaturesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    signatures: (f = msg.getSignatures()) && proto.datanode.api.v2.NodeSignaturesConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListNodeSignaturesResponse}
 */
proto.datanode.api.v2.ListNodeSignaturesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListNodeSignaturesResponse;
  return proto.datanode.api.v2.ListNodeSignaturesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListNodeSignaturesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListNodeSignaturesResponse}
 */
proto.datanode.api.v2.ListNodeSignaturesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.NodeSignaturesConnection;
      reader.readMessage(value,proto.datanode.api.v2.NodeSignaturesConnection.deserializeBinaryFromReader);
      msg.setSignatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListNodeSignaturesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListNodeSignaturesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListNodeSignaturesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNodeSignaturesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignatures();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.NodeSignaturesConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodeSignaturesConnection signatures = 1;
 * @return {?proto.datanode.api.v2.NodeSignaturesConnection}
 */
proto.datanode.api.v2.ListNodeSignaturesResponse.prototype.getSignatures = function() {
  return /** @type{?proto.datanode.api.v2.NodeSignaturesConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.NodeSignaturesConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.NodeSignaturesConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListNodeSignaturesResponse} returns this
*/
proto.datanode.api.v2.ListNodeSignaturesResponse.prototype.setSignatures = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListNodeSignaturesResponse} returns this
 */
proto.datanode.api.v2.ListNodeSignaturesResponse.prototype.clearSignatures = function() {
  return this.setSignatures(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListNodeSignaturesResponse.prototype.hasSignatures = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.NodeSignatureEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.NodeSignatureEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.NodeSignatureEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NodeSignatureEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_commands_v1_validator_commands_pb.NodeSignature.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.NodeSignatureEdge}
 */
proto.datanode.api.v2.NodeSignatureEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.NodeSignatureEdge;
  return proto.datanode.api.v2.NodeSignatureEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.NodeSignatureEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.NodeSignatureEdge}
 */
proto.datanode.api.v2.NodeSignatureEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_commands_v1_validator_commands_pb.NodeSignature;
      reader.readMessage(value,vega_commands_v1_validator_commands_pb.NodeSignature.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.NodeSignatureEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.NodeSignatureEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.NodeSignatureEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NodeSignatureEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_commands_v1_validator_commands_pb.NodeSignature.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.commands.v1.NodeSignature node = 1;
 * @return {?proto.vega.commands.v1.NodeSignature}
 */
proto.datanode.api.v2.NodeSignatureEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.commands.v1.NodeSignature} */ (
    jspb.Message.getWrapperField(this, vega_commands_v1_validator_commands_pb.NodeSignature, 1));
};


/**
 * @param {?proto.vega.commands.v1.NodeSignature|undefined} value
 * @return {!proto.datanode.api.v2.NodeSignatureEdge} returns this
*/
proto.datanode.api.v2.NodeSignatureEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.NodeSignatureEdge} returns this
 */
proto.datanode.api.v2.NodeSignatureEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.NodeSignatureEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.NodeSignatureEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.NodeSignatureEdge} returns this
 */
proto.datanode.api.v2.NodeSignatureEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.NodeSignaturesConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.NodeSignaturesConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.NodeSignaturesConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.NodeSignaturesConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NodeSignaturesConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.NodeSignatureEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.NodeSignaturesConnection}
 */
proto.datanode.api.v2.NodeSignaturesConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.NodeSignaturesConnection;
  return proto.datanode.api.v2.NodeSignaturesConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.NodeSignaturesConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.NodeSignaturesConnection}
 */
proto.datanode.api.v2.NodeSignaturesConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.NodeSignatureEdge;
      reader.readMessage(value,proto.datanode.api.v2.NodeSignatureEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.NodeSignaturesConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.NodeSignaturesConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.NodeSignaturesConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NodeSignaturesConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.NodeSignatureEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NodeSignatureEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.NodeSignatureEdge>}
 */
proto.datanode.api.v2.NodeSignaturesConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.NodeSignatureEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.NodeSignatureEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.NodeSignatureEdge>} value
 * @return {!proto.datanode.api.v2.NodeSignaturesConnection} returns this
*/
proto.datanode.api.v2.NodeSignaturesConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.NodeSignatureEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.NodeSignatureEdge}
 */
proto.datanode.api.v2.NodeSignaturesConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.NodeSignatureEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.NodeSignaturesConnection} returns this
 */
proto.datanode.api.v2.NodeSignaturesConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.NodeSignaturesConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.NodeSignaturesConnection} returns this
*/
proto.datanode.api.v2.NodeSignaturesConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.NodeSignaturesConnection} returns this
 */
proto.datanode.api.v2.NodeSignaturesConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.NodeSignaturesConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetEpochRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetEpochRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetEpochRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetEpochRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetEpochRequest}
 */
proto.datanode.api.v2.GetEpochRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetEpochRequest;
  return proto.datanode.api.v2.GetEpochRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetEpochRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetEpochRequest}
 */
proto.datanode.api.v2.GetEpochRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetEpochRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetEpochRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetEpochRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetEpochRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.datanode.api.v2.GetEpochRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.GetEpochRequest} returns this
 */
proto.datanode.api.v2.GetEpochRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.GetEpochRequest} returns this
 */
proto.datanode.api.v2.GetEpochRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetEpochRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetEpochResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetEpochResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetEpochResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetEpochResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    epoch: (f = msg.getEpoch()) && vega_vega_pb.Epoch.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetEpochResponse}
 */
proto.datanode.api.v2.GetEpochResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetEpochResponse;
  return proto.datanode.api.v2.GetEpochResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetEpochResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetEpochResponse}
 */
proto.datanode.api.v2.GetEpochResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.Epoch;
      reader.readMessage(value,vega_vega_pb.Epoch.deserializeBinaryFromReader);
      msg.setEpoch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetEpochResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetEpochResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetEpochResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetEpochResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpoch();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.Epoch.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Epoch epoch = 1;
 * @return {?proto.vega.Epoch}
 */
proto.datanode.api.v2.GetEpochResponse.prototype.getEpoch = function() {
  return /** @type{?proto.vega.Epoch} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Epoch, 1));
};


/**
 * @param {?proto.vega.Epoch|undefined} value
 * @return {!proto.datanode.api.v2.GetEpochResponse} returns this
*/
proto.datanode.api.v2.GetEpochResponse.prototype.setEpoch = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetEpochResponse} returns this
 */
proto.datanode.api.v2.GetEpochResponse.prototype.clearEpoch = function() {
  return this.setEpoch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetEpochResponse.prototype.hasEpoch = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.EstimateFeeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.EstimateFeeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.EstimateFeeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EstimateFeeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    price: jspb.Message.getFieldWithDefault(msg, 2, ""),
    size: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.EstimateFeeRequest}
 */
proto.datanode.api.v2.EstimateFeeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.EstimateFeeRequest;
  return proto.datanode.api.v2.EstimateFeeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.EstimateFeeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.EstimateFeeRequest}
 */
proto.datanode.api.v2.EstimateFeeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.EstimateFeeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.EstimateFeeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.EstimateFeeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EstimateFeeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.EstimateFeeRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.EstimateFeeRequest} returns this
 */
proto.datanode.api.v2.EstimateFeeRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string price = 2;
 * @return {string}
 */
proto.datanode.api.v2.EstimateFeeRequest.prototype.getPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.EstimateFeeRequest} returns this
 */
proto.datanode.api.v2.EstimateFeeRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 size = 3;
 * @return {number}
 */
proto.datanode.api.v2.EstimateFeeRequest.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.EstimateFeeRequest} returns this
 */
proto.datanode.api.v2.EstimateFeeRequest.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.EstimateFeeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.EstimateFeeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.EstimateFeeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EstimateFeeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fee: (f = msg.getFee()) && vega_vega_pb.Fee.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.EstimateFeeResponse}
 */
proto.datanode.api.v2.EstimateFeeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.EstimateFeeResponse;
  return proto.datanode.api.v2.EstimateFeeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.EstimateFeeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.EstimateFeeResponse}
 */
proto.datanode.api.v2.EstimateFeeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new vega_vega_pb.Fee;
      reader.readMessage(value,vega_vega_pb.Fee.deserializeBinaryFromReader);
      msg.setFee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.EstimateFeeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.EstimateFeeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.EstimateFeeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EstimateFeeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFee();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      vega_vega_pb.Fee.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.Fee fee = 2;
 * @return {?proto.vega.Fee}
 */
proto.datanode.api.v2.EstimateFeeResponse.prototype.getFee = function() {
  return /** @type{?proto.vega.Fee} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.Fee, 2));
};


/**
 * @param {?proto.vega.Fee|undefined} value
 * @return {!proto.datanode.api.v2.EstimateFeeResponse} returns this
*/
proto.datanode.api.v2.EstimateFeeResponse.prototype.setFee = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.EstimateFeeResponse} returns this
 */
proto.datanode.api.v2.EstimateFeeResponse.prototype.clearFee = function() {
  return this.setFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.EstimateFeeResponse.prototype.hasFee = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.EstimateMarginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.EstimateMarginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EstimateMarginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partyId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    side: jspb.Message.getFieldWithDefault(msg, 3, 0),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    size: jspb.Message.getFieldWithDefault(msg, 5, 0),
    price: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.EstimateMarginRequest}
 */
proto.datanode.api.v2.EstimateMarginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.EstimateMarginRequest;
  return proto.datanode.api.v2.EstimateMarginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.EstimateMarginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.EstimateMarginRequest}
 */
proto.datanode.api.v2.EstimateMarginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 3:
      var value = /** @type {!proto.vega.Side} */ (reader.readEnum());
      msg.setSide(value);
      break;
    case 4:
      var value = /** @type {!proto.vega.Order.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.EstimateMarginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.EstimateMarginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EstimateMarginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSide();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.EstimateMarginRequest} returns this
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string party_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.EstimateMarginRequest} returns this
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional vega.Side side = 3;
 * @return {!proto.vega.Side}
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.getSide = function() {
  return /** @type {!proto.vega.Side} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.vega.Side} value
 * @return {!proto.datanode.api.v2.EstimateMarginRequest} returns this
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.setSide = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional vega.Order.Type type = 4;
 * @return {!proto.vega.Order.Type}
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.getType = function() {
  return /** @type {!proto.vega.Order.Type} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.vega.Order.Type} value
 * @return {!proto.datanode.api.v2.EstimateMarginRequest} returns this
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 size = 5;
 * @return {number}
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.EstimateMarginRequest} returns this
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string price = 6;
 * @return {string}
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.getPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.EstimateMarginRequest} returns this
 */
proto.datanode.api.v2.EstimateMarginRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.EstimateMarginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.EstimateMarginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.EstimateMarginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EstimateMarginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marginLevels: (f = msg.getMarginLevels()) && vega_vega_pb.MarginLevels.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.EstimateMarginResponse}
 */
proto.datanode.api.v2.EstimateMarginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.EstimateMarginResponse;
  return proto.datanode.api.v2.EstimateMarginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.EstimateMarginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.EstimateMarginResponse}
 */
proto.datanode.api.v2.EstimateMarginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new vega_vega_pb.MarginLevels;
      reader.readMessage(value,vega_vega_pb.MarginLevels.deserializeBinaryFromReader);
      msg.setMarginLevels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.EstimateMarginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.EstimateMarginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.EstimateMarginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EstimateMarginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarginLevels();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      vega_vega_pb.MarginLevels.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.MarginLevels margin_levels = 2;
 * @return {?proto.vega.MarginLevels}
 */
proto.datanode.api.v2.EstimateMarginResponse.prototype.getMarginLevels = function() {
  return /** @type{?proto.vega.MarginLevels} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.MarginLevels, 2));
};


/**
 * @param {?proto.vega.MarginLevels|undefined} value
 * @return {!proto.datanode.api.v2.EstimateMarginResponse} returns this
*/
proto.datanode.api.v2.EstimateMarginResponse.prototype.setMarginLevels = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.EstimateMarginResponse} returns this
 */
proto.datanode.api.v2.EstimateMarginResponse.prototype.clearMarginLevels = function() {
  return this.setMarginLevels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.EstimateMarginResponse.prototype.hasMarginLevels = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListNetworkParametersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListNetworkParametersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListNetworkParametersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNetworkParametersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListNetworkParametersRequest}
 */
proto.datanode.api.v2.ListNetworkParametersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListNetworkParametersRequest;
  return proto.datanode.api.v2.ListNetworkParametersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListNetworkParametersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListNetworkParametersRequest}
 */
proto.datanode.api.v2.ListNetworkParametersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListNetworkParametersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListNetworkParametersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListNetworkParametersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNetworkParametersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pagination pagination = 1;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListNetworkParametersRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 1));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListNetworkParametersRequest} returns this
*/
proto.datanode.api.v2.ListNetworkParametersRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListNetworkParametersRequest} returns this
 */
proto.datanode.api.v2.ListNetworkParametersRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListNetworkParametersRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListNetworkParametersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListNetworkParametersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListNetworkParametersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNetworkParametersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkParameters: (f = msg.getNetworkParameters()) && proto.datanode.api.v2.NetworkParameterConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListNetworkParametersResponse}
 */
proto.datanode.api.v2.ListNetworkParametersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListNetworkParametersResponse;
  return proto.datanode.api.v2.ListNetworkParametersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListNetworkParametersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListNetworkParametersResponse}
 */
proto.datanode.api.v2.ListNetworkParametersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.NetworkParameterConnection;
      reader.readMessage(value,proto.datanode.api.v2.NetworkParameterConnection.deserializeBinaryFromReader);
      msg.setNetworkParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListNetworkParametersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListNetworkParametersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListNetworkParametersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListNetworkParametersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkParameters();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.NetworkParameterConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional NetworkParameterConnection network_parameters = 1;
 * @return {?proto.datanode.api.v2.NetworkParameterConnection}
 */
proto.datanode.api.v2.ListNetworkParametersResponse.prototype.getNetworkParameters = function() {
  return /** @type{?proto.datanode.api.v2.NetworkParameterConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.NetworkParameterConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.NetworkParameterConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListNetworkParametersResponse} returns this
*/
proto.datanode.api.v2.ListNetworkParametersResponse.prototype.setNetworkParameters = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListNetworkParametersResponse} returns this
 */
proto.datanode.api.v2.ListNetworkParametersResponse.prototype.clearNetworkParameters = function() {
  return this.setNetworkParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListNetworkParametersResponse.prototype.hasNetworkParameters = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetNetworkParameterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetNetworkParameterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetNetworkParameterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkParameterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetNetworkParameterRequest}
 */
proto.datanode.api.v2.GetNetworkParameterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetNetworkParameterRequest;
  return proto.datanode.api.v2.GetNetworkParameterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetNetworkParameterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetNetworkParameterRequest}
 */
proto.datanode.api.v2.GetNetworkParameterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetNetworkParameterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetNetworkParameterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetNetworkParameterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkParameterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetNetworkParameterRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetNetworkParameterRequest} returns this
 */
proto.datanode.api.v2.GetNetworkParameterRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetNetworkParameterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetNetworkParameterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetNetworkParameterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkParameterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkParameter: (f = msg.getNetworkParameter()) && vega_vega_pb.NetworkParameter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetNetworkParameterResponse}
 */
proto.datanode.api.v2.GetNetworkParameterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetNetworkParameterResponse;
  return proto.datanode.api.v2.GetNetworkParameterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetNetworkParameterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetNetworkParameterResponse}
 */
proto.datanode.api.v2.GetNetworkParameterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.NetworkParameter;
      reader.readMessage(value,vega_vega_pb.NetworkParameter.deserializeBinaryFromReader);
      msg.setNetworkParameter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetNetworkParameterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetNetworkParameterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetNetworkParameterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetNetworkParameterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkParameter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.NetworkParameter.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.NetworkParameter network_parameter = 1;
 * @return {?proto.vega.NetworkParameter}
 */
proto.datanode.api.v2.GetNetworkParameterResponse.prototype.getNetworkParameter = function() {
  return /** @type{?proto.vega.NetworkParameter} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.NetworkParameter, 1));
};


/**
 * @param {?proto.vega.NetworkParameter|undefined} value
 * @return {!proto.datanode.api.v2.GetNetworkParameterResponse} returns this
*/
proto.datanode.api.v2.GetNetworkParameterResponse.prototype.setNetworkParameter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetNetworkParameterResponse} returns this
 */
proto.datanode.api.v2.GetNetworkParameterResponse.prototype.clearNetworkParameter = function() {
  return this.setNetworkParameter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetNetworkParameterResponse.prototype.hasNetworkParameter = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.NetworkParameterEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.NetworkParameterEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.NetworkParameterEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NetworkParameterEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_vega_pb.NetworkParameter.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.NetworkParameterEdge}
 */
proto.datanode.api.v2.NetworkParameterEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.NetworkParameterEdge;
  return proto.datanode.api.v2.NetworkParameterEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.NetworkParameterEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.NetworkParameterEdge}
 */
proto.datanode.api.v2.NetworkParameterEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.NetworkParameter;
      reader.readMessage(value,vega_vega_pb.NetworkParameter.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.NetworkParameterEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.NetworkParameterEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.NetworkParameterEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NetworkParameterEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.NetworkParameter.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.NetworkParameter node = 1;
 * @return {?proto.vega.NetworkParameter}
 */
proto.datanode.api.v2.NetworkParameterEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.NetworkParameter} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.NetworkParameter, 1));
};


/**
 * @param {?proto.vega.NetworkParameter|undefined} value
 * @return {!proto.datanode.api.v2.NetworkParameterEdge} returns this
*/
proto.datanode.api.v2.NetworkParameterEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.NetworkParameterEdge} returns this
 */
proto.datanode.api.v2.NetworkParameterEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.NetworkParameterEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.NetworkParameterEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.NetworkParameterEdge} returns this
 */
proto.datanode.api.v2.NetworkParameterEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.NetworkParameterConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.NetworkParameterConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.NetworkParameterConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.NetworkParameterConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NetworkParameterConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.NetworkParameterEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.NetworkParameterConnection}
 */
proto.datanode.api.v2.NetworkParameterConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.NetworkParameterConnection;
  return proto.datanode.api.v2.NetworkParameterConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.NetworkParameterConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.NetworkParameterConnection}
 */
proto.datanode.api.v2.NetworkParameterConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.NetworkParameterEdge;
      reader.readMessage(value,proto.datanode.api.v2.NetworkParameterEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.NetworkParameterConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.NetworkParameterConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.NetworkParameterConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.NetworkParameterConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.NetworkParameterEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NetworkParameterEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.NetworkParameterEdge>}
 */
proto.datanode.api.v2.NetworkParameterConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.NetworkParameterEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.NetworkParameterEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.NetworkParameterEdge>} value
 * @return {!proto.datanode.api.v2.NetworkParameterConnection} returns this
*/
proto.datanode.api.v2.NetworkParameterConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.NetworkParameterEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.NetworkParameterEdge}
 */
proto.datanode.api.v2.NetworkParameterConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.NetworkParameterEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.NetworkParameterConnection} returns this
 */
proto.datanode.api.v2.NetworkParameterConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.NetworkParameterConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.NetworkParameterConnection} returns this
*/
proto.datanode.api.v2.NetworkParameterConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.NetworkParameterConnection} returns this
 */
proto.datanode.api.v2.NetworkParameterConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.NetworkParameterConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.Checkpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.Checkpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.Checkpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.Checkpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockHash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    atBlock: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.Checkpoint}
 */
proto.datanode.api.v2.Checkpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.Checkpoint;
  return proto.datanode.api.v2.Checkpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.Checkpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.Checkpoint}
 */
proto.datanode.api.v2.Checkpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockHash(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAtBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.Checkpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.Checkpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.Checkpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.Checkpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAtBlock();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string hash = 1;
 * @return {string}
 */
proto.datanode.api.v2.Checkpoint.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.Checkpoint} returns this
 */
proto.datanode.api.v2.Checkpoint.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string block_hash = 2;
 * @return {string}
 */
proto.datanode.api.v2.Checkpoint.prototype.getBlockHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.Checkpoint} returns this
 */
proto.datanode.api.v2.Checkpoint.prototype.setBlockHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 at_block = 3;
 * @return {number}
 */
proto.datanode.api.v2.Checkpoint.prototype.getAtBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.Checkpoint} returns this
 */
proto.datanode.api.v2.Checkpoint.prototype.setAtBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListCheckpointsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListCheckpointsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListCheckpointsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCheckpointsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListCheckpointsRequest}
 */
proto.datanode.api.v2.ListCheckpointsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListCheckpointsRequest;
  return proto.datanode.api.v2.ListCheckpointsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListCheckpointsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListCheckpointsRequest}
 */
proto.datanode.api.v2.ListCheckpointsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListCheckpointsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListCheckpointsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListCheckpointsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCheckpointsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pagination pagination = 1;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListCheckpointsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 1));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListCheckpointsRequest} returns this
*/
proto.datanode.api.v2.ListCheckpointsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListCheckpointsRequest} returns this
 */
proto.datanode.api.v2.ListCheckpointsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListCheckpointsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListCheckpointsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListCheckpointsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListCheckpointsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCheckpointsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    checkpoints: (f = msg.getCheckpoints()) && proto.datanode.api.v2.CheckpointsConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListCheckpointsResponse}
 */
proto.datanode.api.v2.ListCheckpointsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListCheckpointsResponse;
  return proto.datanode.api.v2.ListCheckpointsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListCheckpointsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListCheckpointsResponse}
 */
proto.datanode.api.v2.ListCheckpointsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.CheckpointsConnection;
      reader.readMessage(value,proto.datanode.api.v2.CheckpointsConnection.deserializeBinaryFromReader);
      msg.setCheckpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListCheckpointsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListCheckpointsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListCheckpointsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCheckpointsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCheckpoints();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.CheckpointsConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional CheckpointsConnection checkpoints = 1;
 * @return {?proto.datanode.api.v2.CheckpointsConnection}
 */
proto.datanode.api.v2.ListCheckpointsResponse.prototype.getCheckpoints = function() {
  return /** @type{?proto.datanode.api.v2.CheckpointsConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.CheckpointsConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.CheckpointsConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListCheckpointsResponse} returns this
*/
proto.datanode.api.v2.ListCheckpointsResponse.prototype.setCheckpoints = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListCheckpointsResponse} returns this
 */
proto.datanode.api.v2.ListCheckpointsResponse.prototype.clearCheckpoints = function() {
  return this.setCheckpoints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListCheckpointsResponse.prototype.hasCheckpoints = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.CheckpointEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.CheckpointEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.CheckpointEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CheckpointEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && proto.datanode.api.v2.Checkpoint.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.CheckpointEdge}
 */
proto.datanode.api.v2.CheckpointEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.CheckpointEdge;
  return proto.datanode.api.v2.CheckpointEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.CheckpointEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.CheckpointEdge}
 */
proto.datanode.api.v2.CheckpointEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.Checkpoint;
      reader.readMessage(value,proto.datanode.api.v2.Checkpoint.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.CheckpointEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.CheckpointEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.CheckpointEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CheckpointEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.Checkpoint.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Checkpoint node = 1;
 * @return {?proto.datanode.api.v2.Checkpoint}
 */
proto.datanode.api.v2.CheckpointEdge.prototype.getNode = function() {
  return /** @type{?proto.datanode.api.v2.Checkpoint} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Checkpoint, 1));
};


/**
 * @param {?proto.datanode.api.v2.Checkpoint|undefined} value
 * @return {!proto.datanode.api.v2.CheckpointEdge} returns this
*/
proto.datanode.api.v2.CheckpointEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.CheckpointEdge} returns this
 */
proto.datanode.api.v2.CheckpointEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.CheckpointEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.CheckpointEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.CheckpointEdge} returns this
 */
proto.datanode.api.v2.CheckpointEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.CheckpointsConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.CheckpointsConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.CheckpointsConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.CheckpointsConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CheckpointsConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.CheckpointEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.CheckpointsConnection}
 */
proto.datanode.api.v2.CheckpointsConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.CheckpointsConnection;
  return proto.datanode.api.v2.CheckpointsConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.CheckpointsConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.CheckpointsConnection}
 */
proto.datanode.api.v2.CheckpointsConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.CheckpointEdge;
      reader.readMessage(value,proto.datanode.api.v2.CheckpointEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.CheckpointsConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.CheckpointsConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.CheckpointsConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CheckpointsConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.CheckpointEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CheckpointEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.CheckpointEdge>}
 */
proto.datanode.api.v2.CheckpointsConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.CheckpointEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.CheckpointEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.CheckpointEdge>} value
 * @return {!proto.datanode.api.v2.CheckpointsConnection} returns this
*/
proto.datanode.api.v2.CheckpointsConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.CheckpointEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.CheckpointEdge}
 */
proto.datanode.api.v2.CheckpointsConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.CheckpointEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.CheckpointsConnection} returns this
 */
proto.datanode.api.v2.CheckpointsConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.CheckpointsConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.CheckpointsConnection} returns this
*/
proto.datanode.api.v2.CheckpointsConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.CheckpointsConnection} returns this
 */
proto.datanode.api.v2.CheckpointsConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.CheckpointsConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetStakeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetStakeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetStakeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetStakeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    partyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetStakeRequest}
 */
proto.datanode.api.v2.GetStakeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetStakeRequest;
  return proto.datanode.api.v2.GetStakeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetStakeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetStakeRequest}
 */
proto.datanode.api.v2.GetStakeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetStakeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetStakeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetStakeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetStakeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string party_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetStakeRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetStakeRequest} returns this
 */
proto.datanode.api.v2.GetStakeRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.GetStakeRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.GetStakeRequest} returns this
*/
proto.datanode.api.v2.GetStakeRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetStakeRequest} returns this
 */
proto.datanode.api.v2.GetStakeRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetStakeRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetStakeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetStakeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetStakeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetStakeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentStakeAvailable: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stakeLinkings: (f = msg.getStakeLinkings()) && proto.datanode.api.v2.StakesConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetStakeResponse}
 */
proto.datanode.api.v2.GetStakeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetStakeResponse;
  return proto.datanode.api.v2.GetStakeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetStakeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetStakeResponse}
 */
proto.datanode.api.v2.GetStakeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentStakeAvailable(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.StakesConnection;
      reader.readMessage(value,proto.datanode.api.v2.StakesConnection.deserializeBinaryFromReader);
      msg.setStakeLinkings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetStakeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetStakeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetStakeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetStakeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentStakeAvailable();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStakeLinkings();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.StakesConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional string current_stake_available = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetStakeResponse.prototype.getCurrentStakeAvailable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetStakeResponse} returns this
 */
proto.datanode.api.v2.GetStakeResponse.prototype.setCurrentStakeAvailable = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional StakesConnection stake_linkings = 2;
 * @return {?proto.datanode.api.v2.StakesConnection}
 */
proto.datanode.api.v2.GetStakeResponse.prototype.getStakeLinkings = function() {
  return /** @type{?proto.datanode.api.v2.StakesConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.StakesConnection, 2));
};


/**
 * @param {?proto.datanode.api.v2.StakesConnection|undefined} value
 * @return {!proto.datanode.api.v2.GetStakeResponse} returns this
*/
proto.datanode.api.v2.GetStakeResponse.prototype.setStakeLinkings = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetStakeResponse} returns this
 */
proto.datanode.api.v2.GetStakeResponse.prototype.clearStakeLinkings = function() {
  return this.setStakeLinkings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetStakeResponse.prototype.hasStakeLinkings = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.StakeLinkingEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.StakeLinkingEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.StakeLinkingEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.StakeLinkingEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_events_v1_events_pb.StakeLinking.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.StakeLinkingEdge}
 */
proto.datanode.api.v2.StakeLinkingEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.StakeLinkingEdge;
  return proto.datanode.api.v2.StakeLinkingEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.StakeLinkingEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.StakeLinkingEdge}
 */
proto.datanode.api.v2.StakeLinkingEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_events_v1_events_pb.StakeLinking;
      reader.readMessage(value,vega_events_v1_events_pb.StakeLinking.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.StakeLinkingEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.StakeLinkingEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.StakeLinkingEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.StakeLinkingEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_events_v1_events_pb.StakeLinking.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.events.v1.StakeLinking node = 1;
 * @return {?proto.vega.events.v1.StakeLinking}
 */
proto.datanode.api.v2.StakeLinkingEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.events.v1.StakeLinking} */ (
    jspb.Message.getWrapperField(this, vega_events_v1_events_pb.StakeLinking, 1));
};


/**
 * @param {?proto.vega.events.v1.StakeLinking|undefined} value
 * @return {!proto.datanode.api.v2.StakeLinkingEdge} returns this
*/
proto.datanode.api.v2.StakeLinkingEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.StakeLinkingEdge} returns this
 */
proto.datanode.api.v2.StakeLinkingEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.StakeLinkingEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.StakeLinkingEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.StakeLinkingEdge} returns this
 */
proto.datanode.api.v2.StakeLinkingEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.StakesConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.StakesConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.StakesConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.StakesConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.StakesConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.StakeLinkingEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.StakesConnection}
 */
proto.datanode.api.v2.StakesConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.StakesConnection;
  return proto.datanode.api.v2.StakesConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.StakesConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.StakesConnection}
 */
proto.datanode.api.v2.StakesConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.StakeLinkingEdge;
      reader.readMessage(value,proto.datanode.api.v2.StakeLinkingEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.StakesConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.StakesConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.StakesConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.StakesConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.StakeLinkingEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StakeLinkingEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.StakeLinkingEdge>}
 */
proto.datanode.api.v2.StakesConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.StakeLinkingEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.StakeLinkingEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.StakeLinkingEdge>} value
 * @return {!proto.datanode.api.v2.StakesConnection} returns this
*/
proto.datanode.api.v2.StakesConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.StakeLinkingEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.StakeLinkingEdge}
 */
proto.datanode.api.v2.StakesConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.StakeLinkingEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.StakesConnection} returns this
 */
proto.datanode.api.v2.StakesConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.StakesConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.StakesConnection} returns this
*/
proto.datanode.api.v2.StakesConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.StakesConnection} returns this
 */
proto.datanode.api.v2.StakesConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.StakesConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetRiskFactorsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetRiskFactorsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetRiskFactorsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetRiskFactorsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetRiskFactorsRequest}
 */
proto.datanode.api.v2.GetRiskFactorsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetRiskFactorsRequest;
  return proto.datanode.api.v2.GetRiskFactorsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetRiskFactorsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetRiskFactorsRequest}
 */
proto.datanode.api.v2.GetRiskFactorsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetRiskFactorsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetRiskFactorsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetRiskFactorsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetRiskFactorsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.GetRiskFactorsRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetRiskFactorsRequest} returns this
 */
proto.datanode.api.v2.GetRiskFactorsRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetRiskFactorsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetRiskFactorsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetRiskFactorsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetRiskFactorsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    riskFactor: (f = msg.getRiskFactor()) && vega_vega_pb.RiskFactor.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetRiskFactorsResponse}
 */
proto.datanode.api.v2.GetRiskFactorsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetRiskFactorsResponse;
  return proto.datanode.api.v2.GetRiskFactorsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetRiskFactorsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetRiskFactorsResponse}
 */
proto.datanode.api.v2.GetRiskFactorsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.RiskFactor;
      reader.readMessage(value,vega_vega_pb.RiskFactor.deserializeBinaryFromReader);
      msg.setRiskFactor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetRiskFactorsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetRiskFactorsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetRiskFactorsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetRiskFactorsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRiskFactor();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.RiskFactor.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.RiskFactor risk_factor = 1;
 * @return {?proto.vega.RiskFactor}
 */
proto.datanode.api.v2.GetRiskFactorsResponse.prototype.getRiskFactor = function() {
  return /** @type{?proto.vega.RiskFactor} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.RiskFactor, 1));
};


/**
 * @param {?proto.vega.RiskFactor|undefined} value
 * @return {!proto.datanode.api.v2.GetRiskFactorsResponse} returns this
*/
proto.datanode.api.v2.GetRiskFactorsResponse.prototype.setRiskFactor = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetRiskFactorsResponse} returns this
 */
proto.datanode.api.v2.GetRiskFactorsResponse.prototype.clearRiskFactor = function() {
  return this.setRiskFactor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetRiskFactorsResponse.prototype.hasRiskFactor = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ObserveEventBusRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveEventBusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveEventBusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveEventBusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    marketId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partyId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    batchSize: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveEventBusRequest}
 */
proto.datanode.api.v2.ObserveEventBusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveEventBusRequest;
  return proto.datanode.api.v2.ObserveEventBusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveEventBusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveEventBusRequest}
 */
proto.datanode.api.v2.ObserveEventBusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.vega.events.v1.BusEventType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addType(values[i]);
      }
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartyId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBatchSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveEventBusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveEventBusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveEventBusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPartyId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBatchSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * repeated vega.events.v1.BusEventType type = 1;
 * @return {!Array<!proto.vega.events.v1.BusEventType>}
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.getTypeList = function() {
  return /** @type {!Array<!proto.vega.events.v1.BusEventType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.vega.events.v1.BusEventType>} value
 * @return {!proto.datanode.api.v2.ObserveEventBusRequest} returns this
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.setTypeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.vega.events.v1.BusEventType} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.ObserveEventBusRequest} returns this
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.addType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ObserveEventBusRequest} returns this
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.clearTypeList = function() {
  return this.setTypeList([]);
};


/**
 * optional string market_id = 2;
 * @return {string}
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveEventBusRequest} returns this
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string party_id = 3;
 * @return {string}
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.getPartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ObserveEventBusRequest} returns this
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.setPartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 batch_size = 4;
 * @return {number}
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.getBatchSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.ObserveEventBusRequest} returns this
 */
proto.datanode.api.v2.ObserveEventBusRequest.prototype.setBatchSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ObserveEventBusResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveEventBusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveEventBusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveEventBusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveEventBusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    vega_events_v1_events_pb.BusEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveEventBusResponse}
 */
proto.datanode.api.v2.ObserveEventBusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveEventBusResponse;
  return proto.datanode.api.v2.ObserveEventBusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveEventBusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveEventBusResponse}
 */
proto.datanode.api.v2.ObserveEventBusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_events_v1_events_pb.BusEvent;
      reader.readMessage(value,vega_events_v1_events_pb.BusEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveEventBusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveEventBusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveEventBusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveEventBusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      vega_events_v1_events_pb.BusEvent.serializeBinaryToWriter
    );
  }
};


/**
 * repeated vega.events.v1.BusEvent events = 1;
 * @return {!Array<!proto.vega.events.v1.BusEvent>}
 */
proto.datanode.api.v2.ObserveEventBusResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.vega.events.v1.BusEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, vega_events_v1_events_pb.BusEvent, 1));
};


/**
 * @param {!Array<!proto.vega.events.v1.BusEvent>} value
 * @return {!proto.datanode.api.v2.ObserveEventBusResponse} returns this
*/
proto.datanode.api.v2.ObserveEventBusResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.vega.events.v1.BusEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vega.events.v1.BusEvent}
 */
proto.datanode.api.v2.ObserveEventBusResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.vega.events.v1.BusEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ObserveEventBusResponse} returns this
 */
proto.datanode.api.v2.ObserveEventBusResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveLedgerMovementsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveLedgerMovementsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveLedgerMovementsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveLedgerMovementsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveLedgerMovementsRequest}
 */
proto.datanode.api.v2.ObserveLedgerMovementsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveLedgerMovementsRequest;
  return proto.datanode.api.v2.ObserveLedgerMovementsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveLedgerMovementsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveLedgerMovementsRequest}
 */
proto.datanode.api.v2.ObserveLedgerMovementsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveLedgerMovementsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveLedgerMovementsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveLedgerMovementsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveLedgerMovementsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ObserveLedgerMovementsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ObserveLedgerMovementsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ObserveLedgerMovementsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveLedgerMovementsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ledgerMovement: (f = msg.getLedgerMovement()) && vega_vega_pb.LedgerMovement.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ObserveLedgerMovementsResponse}
 */
proto.datanode.api.v2.ObserveLedgerMovementsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ObserveLedgerMovementsResponse;
  return proto.datanode.api.v2.ObserveLedgerMovementsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ObserveLedgerMovementsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ObserveLedgerMovementsResponse}
 */
proto.datanode.api.v2.ObserveLedgerMovementsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_vega_pb.LedgerMovement;
      reader.readMessage(value,vega_vega_pb.LedgerMovement.deserializeBinaryFromReader);
      msg.setLedgerMovement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ObserveLedgerMovementsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ObserveLedgerMovementsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ObserveLedgerMovementsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ObserveLedgerMovementsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLedgerMovement();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_vega_pb.LedgerMovement.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.LedgerMovement ledger_movement = 1;
 * @return {?proto.vega.LedgerMovement}
 */
proto.datanode.api.v2.ObserveLedgerMovementsResponse.prototype.getLedgerMovement = function() {
  return /** @type{?proto.vega.LedgerMovement} */ (
    jspb.Message.getWrapperField(this, vega_vega_pb.LedgerMovement, 1));
};


/**
 * @param {?proto.vega.LedgerMovement|undefined} value
 * @return {!proto.datanode.api.v2.ObserveLedgerMovementsResponse} returns this
*/
proto.datanode.api.v2.ObserveLedgerMovementsResponse.prototype.setLedgerMovement = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ObserveLedgerMovementsResponse} returns this
 */
proto.datanode.api.v2.ObserveLedgerMovementsResponse.prototype.clearLedgerMovement = function() {
  return this.setLedgerMovement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ObserveLedgerMovementsResponse.prototype.hasLedgerMovement = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListKeyRotationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListKeyRotationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListKeyRotationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListKeyRotationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListKeyRotationsRequest}
 */
proto.datanode.api.v2.ListKeyRotationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListKeyRotationsRequest;
  return proto.datanode.api.v2.ListKeyRotationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListKeyRotationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListKeyRotationsRequest}
 */
proto.datanode.api.v2.ListKeyRotationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListKeyRotationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListKeyRotationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListKeyRotationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListKeyRotationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListKeyRotationsRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListKeyRotationsRequest} returns this
 */
proto.datanode.api.v2.ListKeyRotationsRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListKeyRotationsRequest} returns this
 */
proto.datanode.api.v2.ListKeyRotationsRequest.prototype.clearNodeId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListKeyRotationsRequest.prototype.hasNodeId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListKeyRotationsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListKeyRotationsRequest} returns this
*/
proto.datanode.api.v2.ListKeyRotationsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListKeyRotationsRequest} returns this
 */
proto.datanode.api.v2.ListKeyRotationsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListKeyRotationsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListKeyRotationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListKeyRotationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListKeyRotationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListKeyRotationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rotations: (f = msg.getRotations()) && proto.datanode.api.v2.KeyRotationConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListKeyRotationsResponse}
 */
proto.datanode.api.v2.ListKeyRotationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListKeyRotationsResponse;
  return proto.datanode.api.v2.ListKeyRotationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListKeyRotationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListKeyRotationsResponse}
 */
proto.datanode.api.v2.ListKeyRotationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.KeyRotationConnection;
      reader.readMessage(value,proto.datanode.api.v2.KeyRotationConnection.deserializeBinaryFromReader);
      msg.setRotations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListKeyRotationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListKeyRotationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListKeyRotationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListKeyRotationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRotations();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.KeyRotationConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional KeyRotationConnection rotations = 1;
 * @return {?proto.datanode.api.v2.KeyRotationConnection}
 */
proto.datanode.api.v2.ListKeyRotationsResponse.prototype.getRotations = function() {
  return /** @type{?proto.datanode.api.v2.KeyRotationConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.KeyRotationConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.KeyRotationConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListKeyRotationsResponse} returns this
*/
proto.datanode.api.v2.ListKeyRotationsResponse.prototype.setRotations = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListKeyRotationsResponse} returns this
 */
proto.datanode.api.v2.ListKeyRotationsResponse.prototype.clearRotations = function() {
  return this.setRotations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListKeyRotationsResponse.prototype.hasRotations = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.KeyRotationEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.KeyRotationEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.KeyRotationEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.KeyRotationEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_events_v1_events_pb.KeyRotation.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.KeyRotationEdge}
 */
proto.datanode.api.v2.KeyRotationEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.KeyRotationEdge;
  return proto.datanode.api.v2.KeyRotationEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.KeyRotationEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.KeyRotationEdge}
 */
proto.datanode.api.v2.KeyRotationEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_events_v1_events_pb.KeyRotation;
      reader.readMessage(value,vega_events_v1_events_pb.KeyRotation.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.KeyRotationEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.KeyRotationEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.KeyRotationEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.KeyRotationEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_events_v1_events_pb.KeyRotation.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.events.v1.KeyRotation node = 1;
 * @return {?proto.vega.events.v1.KeyRotation}
 */
proto.datanode.api.v2.KeyRotationEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.events.v1.KeyRotation} */ (
    jspb.Message.getWrapperField(this, vega_events_v1_events_pb.KeyRotation, 1));
};


/**
 * @param {?proto.vega.events.v1.KeyRotation|undefined} value
 * @return {!proto.datanode.api.v2.KeyRotationEdge} returns this
*/
proto.datanode.api.v2.KeyRotationEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.KeyRotationEdge} returns this
 */
proto.datanode.api.v2.KeyRotationEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.KeyRotationEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.KeyRotationEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.KeyRotationEdge} returns this
 */
proto.datanode.api.v2.KeyRotationEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.KeyRotationConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.KeyRotationConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.KeyRotationConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.KeyRotationConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.KeyRotationConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.KeyRotationEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.KeyRotationConnection}
 */
proto.datanode.api.v2.KeyRotationConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.KeyRotationConnection;
  return proto.datanode.api.v2.KeyRotationConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.KeyRotationConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.KeyRotationConnection}
 */
proto.datanode.api.v2.KeyRotationConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.KeyRotationEdge;
      reader.readMessage(value,proto.datanode.api.v2.KeyRotationEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.KeyRotationConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.KeyRotationConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.KeyRotationConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.KeyRotationConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.KeyRotationEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated KeyRotationEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.KeyRotationEdge>}
 */
proto.datanode.api.v2.KeyRotationConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.KeyRotationEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.KeyRotationEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.KeyRotationEdge>} value
 * @return {!proto.datanode.api.v2.KeyRotationConnection} returns this
*/
proto.datanode.api.v2.KeyRotationConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.KeyRotationEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.KeyRotationEdge}
 */
proto.datanode.api.v2.KeyRotationConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.KeyRotationEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.KeyRotationConnection} returns this
 */
proto.datanode.api.v2.KeyRotationConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.KeyRotationConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.KeyRotationConnection} returns this
*/
proto.datanode.api.v2.KeyRotationConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.KeyRotationConnection} returns this
 */
proto.datanode.api.v2.KeyRotationConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.KeyRotationConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListEthereumKeyRotationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListEthereumKeyRotationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListEthereumKeyRotationsRequest}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListEthereumKeyRotationsRequest;
  return proto.datanode.api.v2.ListEthereumKeyRotationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListEthereumKeyRotationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListEthereumKeyRotationsRequest}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListEthereumKeyRotationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListEthereumKeyRotationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional string node_id = 1;
 * @return {string}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListEthereumKeyRotationsRequest} returns this
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListEthereumKeyRotationsRequest} returns this
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.prototype.clearNodeId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.prototype.hasNodeId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Pagination pagination = 2;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 2));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListEthereumKeyRotationsRequest} returns this
*/
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListEthereumKeyRotationsRequest} returns this
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListEthereumKeyRotationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListEthereumKeyRotationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListEthereumKeyRotationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyRotations: (f = msg.getKeyRotations()) && proto.datanode.api.v2.EthereumKeyRotationsConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListEthereumKeyRotationsResponse}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListEthereumKeyRotationsResponse;
  return proto.datanode.api.v2.ListEthereumKeyRotationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListEthereumKeyRotationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListEthereumKeyRotationsResponse}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.EthereumKeyRotationsConnection;
      reader.readMessage(value,proto.datanode.api.v2.EthereumKeyRotationsConnection.deserializeBinaryFromReader);
      msg.setKeyRotations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListEthereumKeyRotationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListEthereumKeyRotationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListEthereumKeyRotationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyRotations();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.EthereumKeyRotationsConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional EthereumKeyRotationsConnection key_rotations = 1;
 * @return {?proto.datanode.api.v2.EthereumKeyRotationsConnection}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsResponse.prototype.getKeyRotations = function() {
  return /** @type{?proto.datanode.api.v2.EthereumKeyRotationsConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.EthereumKeyRotationsConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.EthereumKeyRotationsConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListEthereumKeyRotationsResponse} returns this
*/
proto.datanode.api.v2.ListEthereumKeyRotationsResponse.prototype.setKeyRotations = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListEthereumKeyRotationsResponse} returns this
 */
proto.datanode.api.v2.ListEthereumKeyRotationsResponse.prototype.clearKeyRotations = function() {
  return this.setKeyRotations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListEthereumKeyRotationsResponse.prototype.hasKeyRotations = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.EthereumKeyRotationsConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.EthereumKeyRotationsConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.EthereumKeyRotationEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.EthereumKeyRotationsConnection}
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.EthereumKeyRotationsConnection;
  return proto.datanode.api.v2.EthereumKeyRotationsConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.EthereumKeyRotationsConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.EthereumKeyRotationsConnection}
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.EthereumKeyRotationEdge;
      reader.readMessage(value,proto.datanode.api.v2.EthereumKeyRotationEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.EthereumKeyRotationsConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.EthereumKeyRotationsConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.EthereumKeyRotationEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EthereumKeyRotationEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.EthereumKeyRotationEdge>}
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.EthereumKeyRotationEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.EthereumKeyRotationEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.EthereumKeyRotationEdge>} value
 * @return {!proto.datanode.api.v2.EthereumKeyRotationsConnection} returns this
*/
proto.datanode.api.v2.EthereumKeyRotationsConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.EthereumKeyRotationEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.EthereumKeyRotationEdge}
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.EthereumKeyRotationEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.EthereumKeyRotationsConnection} returns this
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.EthereumKeyRotationsConnection} returns this
*/
proto.datanode.api.v2.EthereumKeyRotationsConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.EthereumKeyRotationsConnection} returns this
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.EthereumKeyRotationsConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.EthereumKeyRotationEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.EthereumKeyRotationEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.EthereumKeyRotationEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EthereumKeyRotationEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_events_v1_events_pb.EthereumKeyRotation.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.EthereumKeyRotationEdge}
 */
proto.datanode.api.v2.EthereumKeyRotationEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.EthereumKeyRotationEdge;
  return proto.datanode.api.v2.EthereumKeyRotationEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.EthereumKeyRotationEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.EthereumKeyRotationEdge}
 */
proto.datanode.api.v2.EthereumKeyRotationEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_events_v1_events_pb.EthereumKeyRotation;
      reader.readMessage(value,vega_events_v1_events_pb.EthereumKeyRotation.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.EthereumKeyRotationEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.EthereumKeyRotationEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.EthereumKeyRotationEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.EthereumKeyRotationEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_events_v1_events_pb.EthereumKeyRotation.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.events.v1.EthereumKeyRotation node = 1;
 * @return {?proto.vega.events.v1.EthereumKeyRotation}
 */
proto.datanode.api.v2.EthereumKeyRotationEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.events.v1.EthereumKeyRotation} */ (
    jspb.Message.getWrapperField(this, vega_events_v1_events_pb.EthereumKeyRotation, 1));
};


/**
 * @param {?proto.vega.events.v1.EthereumKeyRotation|undefined} value
 * @return {!proto.datanode.api.v2.EthereumKeyRotationEdge} returns this
*/
proto.datanode.api.v2.EthereumKeyRotationEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.EthereumKeyRotationEdge} returns this
 */
proto.datanode.api.v2.EthereumKeyRotationEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.EthereumKeyRotationEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.EthereumKeyRotationEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.EthereumKeyRotationEdge} returns this
 */
proto.datanode.api.v2.EthereumKeyRotationEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetVegaTimeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetVegaTimeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetVegaTimeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetVegaTimeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetVegaTimeRequest}
 */
proto.datanode.api.v2.GetVegaTimeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetVegaTimeRequest;
  return proto.datanode.api.v2.GetVegaTimeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetVegaTimeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetVegaTimeRequest}
 */
proto.datanode.api.v2.GetVegaTimeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetVegaTimeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetVegaTimeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetVegaTimeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetVegaTimeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetVegaTimeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetVegaTimeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetVegaTimeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetVegaTimeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetVegaTimeResponse}
 */
proto.datanode.api.v2.GetVegaTimeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetVegaTimeResponse;
  return proto.datanode.api.v2.GetVegaTimeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetVegaTimeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetVegaTimeResponse}
 */
proto.datanode.api.v2.GetVegaTimeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetVegaTimeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetVegaTimeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetVegaTimeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetVegaTimeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 timestamp = 1;
 * @return {number}
 */
proto.datanode.api.v2.GetVegaTimeResponse.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.GetVegaTimeResponse} returns this
 */
proto.datanode.api.v2.GetVegaTimeResponse.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.DateRange.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.DateRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.DateRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.DateRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTimestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.DateRange}
 */
proto.datanode.api.v2.DateRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.DateRange;
  return proto.datanode.api.v2.DateRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.DateRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.DateRange}
 */
proto.datanode.api.v2.DateRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.DateRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.DateRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.DateRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.DateRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 start_timestamp = 1;
 * @return {number}
 */
proto.datanode.api.v2.DateRange.prototype.getStartTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.DateRange} returns this
 */
proto.datanode.api.v2.DateRange.prototype.setStartTimestamp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.DateRange} returns this
 */
proto.datanode.api.v2.DateRange.prototype.clearStartTimestamp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.DateRange.prototype.hasStartTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 end_timestamp = 2;
 * @return {number}
 */
proto.datanode.api.v2.DateRange.prototype.getEndTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.DateRange} returns this
 */
proto.datanode.api.v2.DateRange.prototype.setEndTimestamp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.DateRange} returns this
 */
proto.datanode.api.v2.DateRange.prototype.clearEndTimestamp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.DateRange.prototype.hasEndTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetProtocolUpgradeStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetProtocolUpgradeStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetProtocolUpgradeStatusRequest}
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetProtocolUpgradeStatusRequest;
  return proto.datanode.api.v2.GetProtocolUpgradeStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetProtocolUpgradeStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetProtocolUpgradeStatusRequest}
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetProtocolUpgradeStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetProtocolUpgradeStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetProtocolUpgradeStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ready: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetProtocolUpgradeStatusResponse}
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetProtocolUpgradeStatusResponse;
  return proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetProtocolUpgradeStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetProtocolUpgradeStatusResponse}
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReady(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetProtocolUpgradeStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReady();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ready = 1;
 * @return {boolean}
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.prototype.getReady = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.datanode.api.v2.GetProtocolUpgradeStatusResponse} returns this
 */
proto.datanode.api.v2.GetProtocolUpgradeStatusResponse.prototype.setReady = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    approvedBy: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest;
  return proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.vega.events.v1.ProtocolUpgradeProposalStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApprovedBy(value);
      break;
    case 3:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.vega.events.v1.ProtocolUpgradeProposalStatus} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional vega.events.v1.ProtocolUpgradeProposalStatus status = 1;
 * @return {!proto.vega.events.v1.ProtocolUpgradeProposalStatus}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.getStatus = function() {
  return /** @type {!proto.vega.events.v1.ProtocolUpgradeProposalStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.vega.events.v1.ProtocolUpgradeProposalStatus} value
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest} returns this
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest} returns this
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string approved_by = 2;
 * @return {string}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.getApprovedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest} returns this
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.setApprovedBy = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest} returns this
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.clearApprovedBy = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.hasApprovedBy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Pagination pagination = 3;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 3));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest} returns this
*/
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest} returns this
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    protocolUpgradeProposals: (f = msg.getProtocolUpgradeProposals()) && proto.datanode.api.v2.ProtocolUpgradeProposalConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse;
  return proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.ProtocolUpgradeProposalConnection;
      reader.readMessage(value,proto.datanode.api.v2.ProtocolUpgradeProposalConnection.deserializeBinaryFromReader);
      msg.setProtocolUpgradeProposals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtocolUpgradeProposals();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.ProtocolUpgradeProposalConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtocolUpgradeProposalConnection protocol_upgrade_proposals = 1;
 * @return {?proto.datanode.api.v2.ProtocolUpgradeProposalConnection}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.prototype.getProtocolUpgradeProposals = function() {
  return /** @type{?proto.datanode.api.v2.ProtocolUpgradeProposalConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.ProtocolUpgradeProposalConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.ProtocolUpgradeProposalConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse} returns this
*/
proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.prototype.setProtocolUpgradeProposals = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse} returns this
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.prototype.clearProtocolUpgradeProposals = function() {
  return this.setProtocolUpgradeProposals(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListProtocolUpgradeProposalsResponse.prototype.hasProtocolUpgradeProposals = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ProtocolUpgradeProposalConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ProtocolUpgradeProposalConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.ProtocolUpgradeProposalEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalConnection}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ProtocolUpgradeProposalConnection;
  return proto.datanode.api.v2.ProtocolUpgradeProposalConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ProtocolUpgradeProposalConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalConnection}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.ProtocolUpgradeProposalEdge;
      reader.readMessage(value,proto.datanode.api.v2.ProtocolUpgradeProposalEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ProtocolUpgradeProposalConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ProtocolUpgradeProposalConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.ProtocolUpgradeProposalEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProtocolUpgradeProposalEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.ProtocolUpgradeProposalEdge>}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.ProtocolUpgradeProposalEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.ProtocolUpgradeProposalEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.ProtocolUpgradeProposalEdge>} value
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalConnection} returns this
*/
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.ProtocolUpgradeProposalEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalEdge}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.ProtocolUpgradeProposalEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalConnection} returns this
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalConnection} returns this
*/
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalConnection} returns this
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ProtocolUpgradeProposalEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ProtocolUpgradeProposalEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_events_v1_events_pb.ProtocolUpgradeEvent.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalEdge}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ProtocolUpgradeProposalEdge;
  return proto.datanode.api.v2.ProtocolUpgradeProposalEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ProtocolUpgradeProposalEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalEdge}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_events_v1_events_pb.ProtocolUpgradeEvent;
      reader.readMessage(value,vega_events_v1_events_pb.ProtocolUpgradeEvent.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ProtocolUpgradeProposalEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ProtocolUpgradeProposalEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_events_v1_events_pb.ProtocolUpgradeEvent.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.events.v1.ProtocolUpgradeEvent node = 1;
 * @return {?proto.vega.events.v1.ProtocolUpgradeEvent}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.events.v1.ProtocolUpgradeEvent} */ (
    jspb.Message.getWrapperField(this, vega_events_v1_events_pb.ProtocolUpgradeEvent, 1));
};


/**
 * @param {?proto.vega.events.v1.ProtocolUpgradeEvent|undefined} value
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalEdge} returns this
*/
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalEdge} returns this
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.ProtocolUpgradeProposalEdge} returns this
 */
proto.datanode.api.v2.ProtocolUpgradeProposalEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListCoreSnapshotsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListCoreSnapshotsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListCoreSnapshotsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCoreSnapshotsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pagination: (f = msg.getPagination()) && proto.datanode.api.v2.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListCoreSnapshotsRequest}
 */
proto.datanode.api.v2.ListCoreSnapshotsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListCoreSnapshotsRequest;
  return proto.datanode.api.v2.ListCoreSnapshotsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListCoreSnapshotsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListCoreSnapshotsRequest}
 */
proto.datanode.api.v2.ListCoreSnapshotsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.Pagination;
      reader.readMessage(value,proto.datanode.api.v2.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListCoreSnapshotsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListCoreSnapshotsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListCoreSnapshotsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCoreSnapshotsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pagination pagination = 1;
 * @return {?proto.datanode.api.v2.Pagination}
 */
proto.datanode.api.v2.ListCoreSnapshotsRequest.prototype.getPagination = function() {
  return /** @type{?proto.datanode.api.v2.Pagination} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.Pagination, 1));
};


/**
 * @param {?proto.datanode.api.v2.Pagination|undefined} value
 * @return {!proto.datanode.api.v2.ListCoreSnapshotsRequest} returns this
*/
proto.datanode.api.v2.ListCoreSnapshotsRequest.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListCoreSnapshotsRequest} returns this
 */
proto.datanode.api.v2.ListCoreSnapshotsRequest.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListCoreSnapshotsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListCoreSnapshotsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListCoreSnapshotsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListCoreSnapshotsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCoreSnapshotsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    coreSnapshots: (f = msg.getCoreSnapshots()) && proto.datanode.api.v2.CoreSnapshotConnection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListCoreSnapshotsResponse}
 */
proto.datanode.api.v2.ListCoreSnapshotsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListCoreSnapshotsResponse;
  return proto.datanode.api.v2.ListCoreSnapshotsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListCoreSnapshotsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListCoreSnapshotsResponse}
 */
proto.datanode.api.v2.ListCoreSnapshotsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.CoreSnapshotConnection;
      reader.readMessage(value,proto.datanode.api.v2.CoreSnapshotConnection.deserializeBinaryFromReader);
      msg.setCoreSnapshots(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListCoreSnapshotsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListCoreSnapshotsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListCoreSnapshotsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListCoreSnapshotsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCoreSnapshots();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.CoreSnapshotConnection.serializeBinaryToWriter
    );
  }
};


/**
 * optional CoreSnapshotConnection core_snapshots = 1;
 * @return {?proto.datanode.api.v2.CoreSnapshotConnection}
 */
proto.datanode.api.v2.ListCoreSnapshotsResponse.prototype.getCoreSnapshots = function() {
  return /** @type{?proto.datanode.api.v2.CoreSnapshotConnection} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.CoreSnapshotConnection, 1));
};


/**
 * @param {?proto.datanode.api.v2.CoreSnapshotConnection|undefined} value
 * @return {!proto.datanode.api.v2.ListCoreSnapshotsResponse} returns this
*/
proto.datanode.api.v2.ListCoreSnapshotsResponse.prototype.setCoreSnapshots = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.ListCoreSnapshotsResponse} returns this
 */
proto.datanode.api.v2.ListCoreSnapshotsResponse.prototype.clearCoreSnapshots = function() {
  return this.setCoreSnapshots(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.ListCoreSnapshotsResponse.prototype.hasCoreSnapshots = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.CoreSnapshotConnection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.CoreSnapshotConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.CoreSnapshotConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.CoreSnapshotConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CoreSnapshotConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.datanode.api.v2.CoreSnapshotEdge.toObject, includeInstance),
    pageInfo: (f = msg.getPageInfo()) && proto.datanode.api.v2.PageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.CoreSnapshotConnection}
 */
proto.datanode.api.v2.CoreSnapshotConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.CoreSnapshotConnection;
  return proto.datanode.api.v2.CoreSnapshotConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.CoreSnapshotConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.CoreSnapshotConnection}
 */
proto.datanode.api.v2.CoreSnapshotConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.CoreSnapshotEdge;
      reader.readMessage(value,proto.datanode.api.v2.CoreSnapshotEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.datanode.api.v2.PageInfo;
      reader.readMessage(value,proto.datanode.api.v2.PageInfo.deserializeBinaryFromReader);
      msg.setPageInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.CoreSnapshotConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.CoreSnapshotConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.CoreSnapshotConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CoreSnapshotConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.CoreSnapshotEdge.serializeBinaryToWriter
    );
  }
  f = message.getPageInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.datanode.api.v2.PageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CoreSnapshotEdge edges = 1;
 * @return {!Array<!proto.datanode.api.v2.CoreSnapshotEdge>}
 */
proto.datanode.api.v2.CoreSnapshotConnection.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.CoreSnapshotEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.CoreSnapshotEdge, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.CoreSnapshotEdge>} value
 * @return {!proto.datanode.api.v2.CoreSnapshotConnection} returns this
*/
proto.datanode.api.v2.CoreSnapshotConnection.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.CoreSnapshotEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.CoreSnapshotEdge}
 */
proto.datanode.api.v2.CoreSnapshotConnection.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.CoreSnapshotEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.CoreSnapshotConnection} returns this
 */
proto.datanode.api.v2.CoreSnapshotConnection.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * optional PageInfo page_info = 2;
 * @return {?proto.datanode.api.v2.PageInfo}
 */
proto.datanode.api.v2.CoreSnapshotConnection.prototype.getPageInfo = function() {
  return /** @type{?proto.datanode.api.v2.PageInfo} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.PageInfo, 2));
};


/**
 * @param {?proto.datanode.api.v2.PageInfo|undefined} value
 * @return {!proto.datanode.api.v2.CoreSnapshotConnection} returns this
*/
proto.datanode.api.v2.CoreSnapshotConnection.prototype.setPageInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.CoreSnapshotConnection} returns this
 */
proto.datanode.api.v2.CoreSnapshotConnection.prototype.clearPageInfo = function() {
  return this.setPageInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.CoreSnapshotConnection.prototype.hasPageInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.CoreSnapshotEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.CoreSnapshotEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.CoreSnapshotEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CoreSnapshotEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: (f = msg.getNode()) && vega_events_v1_events_pb.CoreSnapshotData.toObject(includeInstance, f),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.CoreSnapshotEdge}
 */
proto.datanode.api.v2.CoreSnapshotEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.CoreSnapshotEdge;
  return proto.datanode.api.v2.CoreSnapshotEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.CoreSnapshotEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.CoreSnapshotEdge}
 */
proto.datanode.api.v2.CoreSnapshotEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new vega_events_v1_events_pb.CoreSnapshotData;
      reader.readMessage(value,vega_events_v1_events_pb.CoreSnapshotData.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.CoreSnapshotEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.CoreSnapshotEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.CoreSnapshotEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.CoreSnapshotEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      vega_events_v1_events_pb.CoreSnapshotData.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional vega.events.v1.CoreSnapshotData node = 1;
 * @return {?proto.vega.events.v1.CoreSnapshotData}
 */
proto.datanode.api.v2.CoreSnapshotEdge.prototype.getNode = function() {
  return /** @type{?proto.vega.events.v1.CoreSnapshotData} */ (
    jspb.Message.getWrapperField(this, vega_events_v1_events_pb.CoreSnapshotData, 1));
};


/**
 * @param {?proto.vega.events.v1.CoreSnapshotData|undefined} value
 * @return {!proto.datanode.api.v2.CoreSnapshotEdge} returns this
*/
proto.datanode.api.v2.CoreSnapshotEdge.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.CoreSnapshotEdge} returns this
 */
proto.datanode.api.v2.CoreSnapshotEdge.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.CoreSnapshotEdge.prototype.hasNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.datanode.api.v2.CoreSnapshotEdge.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.CoreSnapshotEdge} returns this
 */
proto.datanode.api.v2.CoreSnapshotEdge.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.HistorySegment.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.HistorySegment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.HistorySegment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.HistorySegment.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromHeight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    toHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),
    chainId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    historySegmentId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    previousHistorySegmentId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.HistorySegment}
 */
proto.datanode.api.v2.HistorySegment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.HistorySegment;
  return proto.datanode.api.v2.HistorySegment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.HistorySegment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.HistorySegment}
 */
proto.datanode.api.v2.HistorySegment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFromHeight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setToHeight(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHistorySegmentId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousHistorySegmentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.HistorySegment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.HistorySegment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.HistorySegment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.HistorySegment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromHeight();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getToHeight();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHistorySegmentId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPreviousHistorySegmentId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 from_height = 1;
 * @return {number}
 */
proto.datanode.api.v2.HistorySegment.prototype.getFromHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.HistorySegment} returns this
 */
proto.datanode.api.v2.HistorySegment.prototype.setFromHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 to_height = 2;
 * @return {number}
 */
proto.datanode.api.v2.HistorySegment.prototype.getToHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.datanode.api.v2.HistorySegment} returns this
 */
proto.datanode.api.v2.HistorySegment.prototype.setToHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string chain_id = 3;
 * @return {string}
 */
proto.datanode.api.v2.HistorySegment.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.HistorySegment} returns this
 */
proto.datanode.api.v2.HistorySegment.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string history_segment_id = 4;
 * @return {string}
 */
proto.datanode.api.v2.HistorySegment.prototype.getHistorySegmentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.HistorySegment} returns this
 */
proto.datanode.api.v2.HistorySegment.prototype.setHistorySegmentId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string previous_history_segment_id = 5;
 * @return {string}
 */
proto.datanode.api.v2.HistorySegment.prototype.getPreviousHistorySegmentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.HistorySegment} returns this
 */
proto.datanode.api.v2.HistorySegment.prototype.setPreviousHistorySegmentId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest}
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest;
  return proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest}
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    segment: (f = msg.getSegment()) && proto.datanode.api.v2.HistorySegment.toObject(includeInstance, f),
    swarmKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse}
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse;
  return proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse}
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.HistorySegment;
      reader.readMessage(value,proto.datanode.api.v2.HistorySegment.deserializeBinaryFromReader);
      msg.setSegment(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSwarmKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSegment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.datanode.api.v2.HistorySegment.serializeBinaryToWriter
    );
  }
  f = message.getSwarmKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional HistorySegment segment = 1;
 * @return {?proto.datanode.api.v2.HistorySegment}
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.prototype.getSegment = function() {
  return /** @type{?proto.datanode.api.v2.HistorySegment} */ (
    jspb.Message.getWrapperField(this, proto.datanode.api.v2.HistorySegment, 1));
};


/**
 * @param {?proto.datanode.api.v2.HistorySegment|undefined} value
 * @return {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse} returns this
*/
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.prototype.setSegment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse} returns this
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.prototype.clearSegment = function() {
  return this.setSegment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.prototype.hasSegment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string swarm_key = 2;
 * @return {string}
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.prototype.getSwarmKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse} returns this
 */
proto.datanode.api.v2.GetMostRecentNetworkHistorySegmentResponse.prototype.setSwarmKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest}
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest;
  return proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest}
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    segmentsList: jspb.Message.toObjectList(msg.getSegmentsList(),
    proto.datanode.api.v2.HistorySegment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse}
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse;
  return proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse}
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.datanode.api.v2.HistorySegment;
      reader.readMessage(value,proto.datanode.api.v2.HistorySegment.deserializeBinaryFromReader);
      msg.addSegments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSegmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.datanode.api.v2.HistorySegment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated HistorySegment segments = 1;
 * @return {!Array<!proto.datanode.api.v2.HistorySegment>}
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.prototype.getSegmentsList = function() {
  return /** @type{!Array<!proto.datanode.api.v2.HistorySegment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datanode.api.v2.HistorySegment, 1));
};


/**
 * @param {!Array<!proto.datanode.api.v2.HistorySegment>} value
 * @return {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse} returns this
*/
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.prototype.setSegmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.datanode.api.v2.HistorySegment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.HistorySegment}
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.prototype.addSegments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.datanode.api.v2.HistorySegment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse} returns this
 */
proto.datanode.api.v2.ListAllNetworkHistorySegmentsResponse.prototype.clearSegmentsList = function() {
  return this.setSegmentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest}
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest;
  return proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest}
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipAddressesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse}
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse;
  return proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse}
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIpAddresses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string ip_addresses = 1;
 * @return {!Array<string>}
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.prototype.getIpAddressesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse} returns this
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.prototype.setIpAddressesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse} returns this
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.prototype.addIpAddresses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse} returns this
 */
proto.datanode.api.v2.GetActiveNetworkHistoryPeerAddressesResponse.prototype.clearIpAddressesList = function() {
  return this.setIpAddressesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.PingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.PingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.PingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.PingRequest}
 */
proto.datanode.api.v2.PingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.PingRequest;
  return proto.datanode.api.v2.PingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.PingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.PingRequest}
 */
proto.datanode.api.v2.PingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.PingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.PingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.PingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datanode.api.v2.PingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.datanode.api.v2.PingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datanode.api.v2.PingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datanode.api.v2.PingResponse}
 */
proto.datanode.api.v2.PingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datanode.api.v2.PingResponse;
  return proto.datanode.api.v2.PingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datanode.api.v2.PingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datanode.api.v2.PingResponse}
 */
proto.datanode.api.v2.PingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datanode.api.v2.PingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datanode.api.v2.PingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datanode.api.v2.PingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datanode.api.v2.PingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.datanode.api.v2.LedgerEntryField = {
  LEDGER_ENTRY_FIELD_UNSPECIFIED: 0,
  LEDGER_ENTRY_FIELD_ACCOUNT_FROM_ID: 1,
  LEDGER_ENTRY_FIELD_ACCOUNT_TO_ID: 2,
  LEDGER_ENTRY_FIELD_TRANSFER_TYPE: 3
};

/**
 * @enum {number}
 */
proto.datanode.api.v2.AccountField = {
  ACCOUNT_FIELD_UNSPECIFIED: 0,
  ACCOUNT_FIELD_ID: 1,
  ACCOUNT_FIELD_PARTY_ID: 2,
  ACCOUNT_FIELD_ASSET_ID: 3,
  ACCOUNT_FIELD_MARKET_ID: 4,
  ACCOUNT_FIELD_TYPE: 5
};

/**
 * @enum {number}
 */
proto.datanode.api.v2.TransferDirection = {
  TRANSFER_DIRECTION_UNSPECIFIED: 0,
  TRANSFER_DIRECTION_TRANSFER_FROM: 1,
  TRANSFER_DIRECTION_TRANSFER_TO: 2,
  TRANSFER_DIRECTION_TRANSFER_TO_OR_FROM: 3
};

goog.object.extend(exports, proto.datanode.api.v2);
